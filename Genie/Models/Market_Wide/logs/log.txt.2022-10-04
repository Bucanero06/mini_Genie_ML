[2022-10-04 09:32:27] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 09:32:27] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 09:32:27] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 09:32:42] [Modules._Data_Manager:28 INFO] Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:42] [Modules._Data_Manager:47 INFO] Finished Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:42] [Modules._Data_Manager:48 INFO] Prepping USDCHF-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:32:42] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:32:42] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:32:42] [Modules._Data_Manager:28 INFO] Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:42] [Modules._Data_Manager:47 INFO] Finished Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:42] [Modules._Data_Manager:48 INFO] Prepping USDCAD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:32:42] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:32:42] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:32:43] [Modules._Data_Manager:28 INFO] Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:43] [Modules._Data_Manager:47 INFO] Finished Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:43] [Modules._Data_Manager:48 INFO] Prepping USDJPY-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:32:43] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:32:43] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:32:43] [Modules._Data_Manager:28 INFO] Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:43] [Modules._Data_Manager:47 INFO] Finished Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:43] [Modules._Data_Manager:48 INFO] Prepping AUDUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:32:43] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:32:43] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:32:44] [Modules._Data_Manager:28 INFO] Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:44] [Modules._Data_Manager:47 INFO] Finished Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:44] [Modules._Data_Manager:48 INFO] Prepping EURUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:32:44] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:32:44] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:32:44] [Modules._Data_Manager:28 INFO] Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:44] [Modules._Data_Manager:47 INFO] Finished Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:44] [Modules._Data_Manager:48 INFO] Prepping GBPUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:32:44] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:32:44] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:32:46] [Modules._Data_Manager:28 INFO] Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:46] [Modules._Data_Manager:47 INFO] Finished Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:32:46] [Modules._Data_Manager:48 INFO] Prepping EURGBP-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:32:46] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:32:46] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:32:47] [Modules._Data_Manager:107 INFO] Converting data to symbols_data obj
[2022-10-04 09:34:15] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:15] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:15] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:15] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:15] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:17] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:17] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:17] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:17] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:17] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:18] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:18] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:18] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:18] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:18] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:20] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:20] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:20] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:20] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:20] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:36] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:36] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:36] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:36] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:36] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:36] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:36] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:36] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:36] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:36] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:37] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:37] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:37] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:37] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:37] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:39] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:39] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:39] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:39] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:39] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:44] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:44] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:44] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:44] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:44] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:45] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:45] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:45] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:45] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:45] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:46] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:46] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:46] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:46] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:46] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:50] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:50] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:50] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:50] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:50] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:50] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:50] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:50] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:50] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:50] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:51] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:51] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:51] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:51] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:51] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:51] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:51] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:51] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:51] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:51] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:52] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:52] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:52] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:52] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:52] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:53] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:53] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:54] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:54] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:54] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:54] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:54] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:56] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:56] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:56] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:56] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:56] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:34:59] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:34:59] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:34:59] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:34:59] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:34:59] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:35:02] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:35:02] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:35:02] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:35:02] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:35:02] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:35:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:35:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:35:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:35:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 09:35:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:09] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:09] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:09] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:09] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:09] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:11] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:11] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:11] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:11] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:11] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:13] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:13] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:13] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:13] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:13] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:14] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:14] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:14] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:14] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:14] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:19] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:19] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:19] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:19] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:19] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:37:25] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:37:25] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:37:25] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:37:25] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:37:25] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:38:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:38:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:38:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:38:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:38:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:38:16] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/vectorbtpro/data/base.py
[2022-10-04 09:38:16] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 09:38:16] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 09:38:16] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 09:38:42] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:38:42] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:38:42] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:38:42] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:38:42] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:38:42] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 09:39:13] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:39:13] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:39:13] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:39:13] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:39:13] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:39:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:39:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:39:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:39:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:39:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:39:36] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:39:36] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:39:36] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:39:36] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:39:36] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:39:38] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:39:38] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:39:38] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:39:38] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:39:38] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:39:40] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:39:40] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:39:40] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:39:40] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:39:40] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:44:41] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 09:44:41] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 09:44:41] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 09:44:42] [Modules._Data_Manager:28 INFO] Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:42] [Modules._Data_Manager:47 INFO] Finished Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:42] [Modules._Data_Manager:48 INFO] Prepping USDCHF-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:44:42] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:44:42] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:44:43] [Modules._Data_Manager:28 INFO] Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:43] [Modules._Data_Manager:47 INFO] Finished Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:43] [Modules._Data_Manager:48 INFO] Prepping USDCAD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:44:43] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:44:43] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:44:43] [Modules._Data_Manager:28 INFO] Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:43] [Modules._Data_Manager:47 INFO] Finished Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:43] [Modules._Data_Manager:48 INFO] Prepping USDJPY-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:44:43] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:44:43] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:44:44] [Modules._Data_Manager:28 INFO] Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:44] [Modules._Data_Manager:47 INFO] Finished Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:44] [Modules._Data_Manager:48 INFO] Prepping AUDUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:44:44] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:44:44] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:44:45] [Modules._Data_Manager:28 INFO] Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:45] [Modules._Data_Manager:47 INFO] Finished Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:45] [Modules._Data_Manager:48 INFO] Prepping EURUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:44:45] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:44:45] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:44:45] [Modules._Data_Manager:28 INFO] Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:45] [Modules._Data_Manager:47 INFO] Finished Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:45] [Modules._Data_Manager:48 INFO] Prepping GBPUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:44:45] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:44:45] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:44:46] [Modules._Data_Manager:28 INFO] Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:46] [Modules._Data_Manager:47 INFO] Finished Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 09:44:46] [Modules._Data_Manager:48 INFO] Prepping EURGBP-2020_09_29-2022_10_03.csv for use
[2022-10-04 09:44:46] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 09:44:46] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 09:44:47] [Modules._Data_Manager:107 INFO] Converting data to symbols_data obj
[2022-10-04 09:45:25] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:45:25] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:45:25] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:45:25] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:45:25] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:46:08] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:46:08] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:46:08] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:46:08] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:46:08] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:46:08] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 09:46:08] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 09:46:08] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 09:46:08] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 09:46:10] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:46:10] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:46:10] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:46:10] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:46:10] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:46:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:46:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:46:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:46:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:46:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:46:30] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:46:30] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:46:30] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:46:30] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:46:30] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:46:30] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/vectorbtpro/data/base.py
[2022-10-04 09:47:34] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 09:47:34] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 09:47:34] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 09:47:42] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/vectorbtpro/data/base.py
[2022-10-04 09:47:42] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 09:47:42] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 09:47:42] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 09:48:34] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:48:34] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:48:34] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:48:34] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:48:34] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:48:37] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:48:37] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:48:37] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:48:37] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:48:37] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:49:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:49:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:49:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:49:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:49:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:49:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 09:49:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:49:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:49:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:49:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:49:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:49:21] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:49:21] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:49:21] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:49:21] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:49:21] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:49:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:49:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:49:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:49:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:49:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:49:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:49:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:49:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:49:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:49:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:49:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:49:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:49:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:49:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:49:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:49:44] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:49:44] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:49:44] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:49:44] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:49:44] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:02] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:02] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:02] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:02] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:02] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:06] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:07] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:07] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:07] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:07] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:07] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:14] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:14] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:14] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:14] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:14] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:24] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:24] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:24] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:24] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:24] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 09:50:38] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 09:50:38] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 09:50:38] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 09:50:38] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 09:50:38] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:38] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:38] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:38] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:39] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:39] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:39] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:39] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:39] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:39] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:39] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:46] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:46] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:46] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:46] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:46] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:46] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=26)
           2	LOAD_FAST(arg=0, lineno=26)
           4	LOAD_ATTR(arg=0, lineno=26)
           6	LOAD_CONST(arg=1, lineno=26)
           8	BINARY_SUBSCR(arg=None, lineno=26)
          10	STORE_FAST(arg=2, lineno=26)
          12	LOAD_GLOBAL(arg=1, lineno=27)
          14	LOAD_ATTR(arg=2, lineno=27)
          16	LOAD_FAST(arg=2, lineno=27)
          18	LOAD_GLOBAL(arg=3, lineno=27)
          20	LOAD_CONST(arg=2, lineno=27)
          22	CALL_FUNCTION_KW(arg=2, lineno=27)
          24	STORE_FAST(arg=3, lineno=27)
          26	LOAD_CONST(arg=3, lineno=28)
          28	LOAD_FAST(arg=1, lineno=28)
          30	LOAD_CONST(arg=4, lineno=28)
          32	BINARY_ADD(arg=None, lineno=28)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=28)
          36	STORE_FAST(arg=4, lineno=28)
          38	LOAD_CONST(arg=4, lineno=29)
          40	STORE_FAST(arg=5, lineno=29)
          42	LOAD_FAST(arg=0, lineno=30)
          44	LOAD_CONST(arg=1, lineno=30)
          46	BINARY_SUBSCR(arg=None, lineno=30)
          48	STORE_FAST(arg=6, lineno=30)
          50	LOAD_FAST(arg=6, lineno=31)
          52	LOAD_FAST(arg=3, lineno=31)
          54	LOAD_CONST(arg=1, lineno=31)
          56	STORE_SUBSCR(arg=None, lineno=31)
          58	LOAD_GLOBAL(arg=4, lineno=32)
          60	LOAD_CONST(arg=4, lineno=32)
          62	LOAD_FAST(arg=2, lineno=32)
          64	CALL_FUNCTION(arg=2, lineno=32)
          66	GET_ITER(arg=None, lineno=32)
>         68	FOR_ITER(arg=52, lineno=32)
          70	STORE_FAST(arg=7, lineno=32)
          72	LOAD_FAST(arg=5, lineno=33)
          74	LOAD_CONST(arg=4, lineno=33)
          76	LOAD_FAST(arg=4, lineno=33)
          78	BINARY_SUBTRACT(arg=None, lineno=33)
          80	LOAD_FAST(arg=7, lineno=33)
          82	BINARY_POWER(arg=None, lineno=33)
          84	INPLACE_ADD(arg=None, lineno=33)
          86	STORE_FAST(arg=5, lineno=33)
          88	LOAD_FAST(arg=6, lineno=34)
          90	LOAD_CONST(arg=4, lineno=34)
          92	LOAD_FAST(arg=4, lineno=34)
          94	BINARY_SUBTRACT(arg=None, lineno=34)
          96	BINARY_MULTIPLY(arg=None, lineno=34)
          98	LOAD_FAST(arg=0, lineno=34)
         100	LOAD_FAST(arg=7, lineno=34)
         102	BINARY_SUBSCR(arg=None, lineno=34)
         104	BINARY_ADD(arg=None, lineno=34)
         106	STORE_FAST(arg=6, lineno=34)
         108	LOAD_FAST(arg=6, lineno=35)
         110	LOAD_FAST(arg=5, lineno=35)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=35)
         114	LOAD_FAST(arg=3, lineno=35)
         116	LOAD_FAST(arg=7, lineno=35)
         118	STORE_SUBSCR(arg=None, lineno=35)
         120	JUMP_ABSOLUTE(arg=68, lineno=35)
>        122	LOAD_FAST(arg=3, lineno=37)
         124	RETURN_VALUE(arg=None, lineno=37)
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=26)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=26)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=26)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=26)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=26)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=26)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=27)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=27)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=27)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=27)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=27)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=27)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=27)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=28)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=28)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=28)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=28)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=28)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=28)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=29)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=29)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=30)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=31)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=31)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=31)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=31)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=32)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=32)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=32)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=32)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=32)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=37)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=37)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=32)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=35)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=35)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=35)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=35)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 10:09:46] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 10:09:46] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 10:09:46] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 10:09:46] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:09:46] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:09:46] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:09:46] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:09:46] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 10:09:46] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 10:09:46] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, fast_ewma.py:26)], kws=[('dtype', Var($18load_global.7, fast_ewma.py:27))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, fast_ewma.py:32), Var(arr_length, fast_ewma.py:26)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb93b78e0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, fast_ewma.py:26)], kws=[('dtype', Var($18load_global.7, fast_ewma.py:27))], vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, fast_ewma.py:32), Var(arr_length, fast_ewma.py:26)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb93b78e0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb93b78e0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb93b78e0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f2cb9321100>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f2cb9321700>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f2cb93212e0>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f2cb93182e0>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f2cb9318460>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f2cb9318700>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f2cb931c160>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f2cb9308d00>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f2cb931d220>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f2cb931d670>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f2cb931d7c0>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f2cb9308550>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f2cb931d820>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f2cb931d940>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f2cb931f160>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f2cb931f400>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f2cb931f580>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f2cb931fb80>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f2cb931fd00>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f2cb9318d00>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f2cb9318fa0>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f2cb931c940>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f2cb931cfa0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f2cb9308e80>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f2cb931d3a0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f2cb931de80>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f2cb931f8e0>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f2cb9318580>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f2cb931cd00>],
             'alpha': [<numba.core.ir.Assign object at 0x7f2cb931c2e0>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f2cb9308940>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f2cb9351a30>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f2cb9318bb0>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f2cb9351970>,
                          <numba.core.ir.Assign object at 0x7f2cb9321280>],
             'i': [<numba.core.ir.Assign object at 0x7f2cb931dbe0>],
             'weight': [<numba.core.ir.Assign object at 0x7f2cb931c580>,
                        <numba.core.ir.Assign object at 0x7f2cb931f640>],
             'window': [<numba.core.ir.Assign object at 0x7f2cb9308a60>]})
[2022-10-04 10:09:46] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-04 10:09:46] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2d10a5d7f0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, fast_ewma.py:26)], kws=[('dtype', Var($18load_global.7, fast_ewma.py:27))], vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, fast_ewma.py:32), Var(arr_length, fast_ewma.py:26)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2d10a5d7f0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2d10a5d7f0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2d10a5d7f0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f2cb9343dc0>],
             70: [<numba.core.ir.Assign object at 0x7f2cb934a190>]})
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb934ac70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, fast_ewma.py:26)], kws=[('dtype', Var($18load_global.7, fast_ewma.py:27))], vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, fast_ewma.py:32), Var(arr_length, fast_ewma.py:26)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb934ac70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb934ac70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb934ac70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb934ac10>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, fast_ewma.py:26)], kws=[('dtype', Var($18load_global.7, fast_ewma.py:27))], vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, fast_ewma.py:32), Var(arr_length, fast_ewma.py:26)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb934ac10>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, fast_ewma.py:29), Var(weight.1, fast_ewma.py:33)], incoming_blocks=[0, 70])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb934ac10>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb934ac10>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f2cb9343be0>],
             70: [<numba.core.ir.Assign object at 0x7f2cb92df100>]})
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9321c40>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, fast_ewma.py:26)], kws=[('dtype', Var($18load_global.7, fast_ewma.py:27))], vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, fast_ewma.py:32), Var(arr_length, fast_ewma.py:26)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9321c40>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, fast_ewma.py:29), Var(weight.1, fast_ewma.py:33)], incoming_blocks=[0, 70])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9321c40>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9321c40>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:09:46] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:09:46] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 10:09:46] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 10:09:46] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:09:46] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 10:09:46] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 10:09:46] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 10:09:46] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 10:09:46] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 10:09:46] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 10:09:46] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 10:09:46] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:09:46] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f2cb9273d30>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f2cb927efd0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f2cb92002b0>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f2cb92004f0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f2cb9200670>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f2cb9200910>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f2cb9200be0>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f2cb9200d60>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f2cb9200eb0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f2cb9202370>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f2cb9202610>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f2cb9202af0>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f2cb9202d90>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f2cb9204250>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f2cb9204790>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f2cb9204c10>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f2cb9207130>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f2cb9207610>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f2cb9207790>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f2cb9207af0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f2cb9275550>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f2cb92757f0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f2cb9273790>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f2cb9276250>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f2cb92764f0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f2cb9276610>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f2cb9276910>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f2cb9276bb0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f2cb927ee50>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f2cb92021f0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f2cb9202970>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f2cb9204610>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f2cb9207370>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f2cb92753d0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f2cb92760d0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f2cb9273910>],
             'a': [<numba.core.ir.Assign object at 0x7f2cb92734f0>],
             'a.1': [<numba.core.ir.Assign object at 0x7f2cb9275040>,
                     <numba.core.ir.Assign object at 0x7f2cb9204cd0>],
             'b': [<numba.core.ir.Assign object at 0x7f2cb9273610>],
             'bool112': [<numba.core.ir.Assign object at 0x7f2cb9200190>],
             'bool136': [<numba.core.ir.Assign object at 0x7f2cb92024f0>],
             'bool144': [<numba.core.ir.Assign object at 0x7f2cb9202c70>],
             'bool174': [<numba.core.ir.Assign object at 0x7f2cb9204fd0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f2cb92756d0>],
             'bool42': [<numba.core.ir.Assign object at 0x7f2cb92763d0>],
             'bool50': [<numba.core.ir.Assign object at 0x7f2cb9276a90>],
             'exp': [<numba.core.ir.Assign object at 0x7f2cb9275cd0>,
                     <numba.core.ir.Assign object at 0x7f2cb927ebb0>,
                     <numba.core.ir.Assign object at 0x7f2cb9204850>],
             'invert': [<numba.core.ir.Assign object at 0x7f2cb9275910>,
                        <numba.core.ir.Assign object at 0x7f2cb927e910>],
             'r': [<numba.core.ir.Assign object at 0x7f2cb9273ac0>,
                   <numba.core.ir.Assign object at 0x7f2cb9204310>]})
[2022-10-04 10:09:46] [numba.core.ssa:143 DEBUG] SSA violators {'exp', 'a.1', 'r', 'invert'}
[2022-10-04 10:09:46] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb92439a0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f2cb92d4640>],
             98: [<numba.core.ir.Assign object at 0x7f2cb9256ee0>],
             154: [<numba.core.ir.Assign object at 0x7f2cb92a8370>]})
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9207dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9276c70>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f2cb92a8fd0>],
             154: [<numba.core.ir.Assign object at 0x7f2cb91d48b0>]})
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91c54c0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9256580>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f2cb92290d0>],
             146: [<numba.core.ir.Assign object at 0x7f2cb91f2f40>]})
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb91e4df0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f2cb9180430>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:46] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f2cb91c5670>],
             98: [<numba.core.ir.Assign object at 0x7f2cb919db20>]})
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:09:46] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 10:09:46] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 10:09:46] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 10:09:46] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 10:09:46] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 10:09:46] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:09:46] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:09:46] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f2cb9194dc0>
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:09:46] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:09:47] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 10:09:47] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 10:09:47] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 10:09:47] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 10:09:47] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 10:09:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:54] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:54] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:54] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:54] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:54] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:09:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:09:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:09:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:09:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:09:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:10:13] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:10:13] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:10:13] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:10:13] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:10:13] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:10:14] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:10:14] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:10:14] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:10:14] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:10:14] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:10:15] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:10:15] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:10:15] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:10:15] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:10:15] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:10:58] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:10:58] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:10:58] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:10:58] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:10:58] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:11:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:11:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:11:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:11:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:11:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:11:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:11:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:11:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:11:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:11:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:11:15] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:11:15] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:11:15] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:11:15] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:11:15] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:11:17] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:11:17] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:11:17] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:11:17] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:11:17] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:11:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:11:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:11:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:11:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:11:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:12:52] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:12:52] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:12:52] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:12:52] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:12:52] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:12:52] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:12:52] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:12:52] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:12:52] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:12:52] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:13:02] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:13:02] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:13:02] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:13:02] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:13:02] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:13:22] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:13:22] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:13:22] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:13:22] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:13:22] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:13:33] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:13:33] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:13:33] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:13:33] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:13:33] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:13:43] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:13:43] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:13:43] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:13:43] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:13:43] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:17:50] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:17:50] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:17:50] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:17:50] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:17:50] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:17:52] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:17:52] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:17:52] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:17:52] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:17:52] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:24:49] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:24:49] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:24:49] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:24:49] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:24:49] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:24:51] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:24:51] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:24:51] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:24:51] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:24:51] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:25:49] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:25:49] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:25:49] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:25:49] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:25:49] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:25:51] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:25:51] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:25:51] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:25:51] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:25:51] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:25:54] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:25:54] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:25:54] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:25:54] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:25:54] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:25:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:25:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:25:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:25:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:25:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:26:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:26:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:26:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:26:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:26:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:26:03] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:26:03] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:26:03] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:26:03] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:26:03] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:26:38] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 10:26:38] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 10:26:38] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 10:26:43] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 10:26:43] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 10:26:43] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 10:26:43] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 10:26:43] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:26:43] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:26:43] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:26:43] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 10:26:43] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 10:26:43] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 10:26:43] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d5003cb50>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d5003cb50>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d5003cb50>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d5003cb50>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f1d3c4a3c40>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f1d3c4a5280>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f1d3c4a3e50>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f1d3c496e20>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f1d3c496fa0>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f1d3c49d280>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f1d3c49dca0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f1d3c496880>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f1d3c4a0d60>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f1d3c4a11f0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f1d3c4a1340>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f1d3c496730>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f1d3c4a13a0>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f1d3c4a14c0>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f1d3c4a1ca0>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f1d3c4a1f40>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f1d3c4a3100>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f1d3c4a3700>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f1d3c4a3880>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f1d3c49d880>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f1d3c49db20>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f1d3c4a04c0>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f1d3c4a0b20>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f1d3c496a00>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f1d3c4a0ee0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f1d3c4a1a00>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f1d3c4a3460>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f1d3c49d460>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f1d3c4a09a0>],
             'alpha': [<numba.core.ir.Assign object at 0x7f1d3c49de20>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f1d3c4964c0>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f1d3c4a5ca0>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f1d3c49d730>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f1d3c4a5d90>,
                          <numba.core.ir.Assign object at 0x7f1d3c4a3dc0>],
             'i': [<numba.core.ir.Assign object at 0x7f1d3c4a1760>],
             'weight': [<numba.core.ir.Assign object at 0x7f1d3c4a0100>,
                        <numba.core.ir.Assign object at 0x7f1d3c4a31c0>],
             'window': [<numba.core.ir.Assign object at 0x7f1d3c4965e0>]})
[2022-10-04 10:26:43] [numba.core.ssa:143 DEBUG] SSA violators {'ewma_old', 'weight'}
[2022-10-04 10:26:43] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c4a1dc0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c4a1dc0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c4a1dc0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c4a1dc0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1d3c4ab550>],
             70: [<numba.core.ir.Assign object at 0x7f1d3c4ab8b0>]})
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c4ab280>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c4ab280>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c4ab280>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c4ab280>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d50058e80>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d50058e80>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d50058e80>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d50058e80>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1d3c4abb20>],
             70: [<numba.core.ir.Assign object at 0x7f1d3c47c760>]})
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c46f640>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c46f640>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c46f640>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c46f640>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 10:26:43] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 10:26:43] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 10:26:43] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 10:26:43] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 10:26:43] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 10:26:43] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 10:26:43] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 10:26:43] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 10:26:43] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 10:26:43] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 10:26:43] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 10:26:43] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 10:26:43] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f1d3c409910>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f1d3c3f4850>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f1d3c3feaf0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f1d3c3fed90>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f1d3c3fefd0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f1d3c400190>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f1d3c400430>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f1d3c400700>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f1d3c400880>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f1d3c4009d0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f1d3c400e50>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f1d3c402130>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f1d3c402610>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f1d3c4028b0>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f1d3c402d30>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f1d3c4042b0>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f1d3c404730>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f1d3c404c10>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f1d3c409130>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f1d3c4092b0>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f1d3c409610>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f1d3c3f6070>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f1d3c3f6310>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f1d3c3f42b0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f1d3c3f6d30>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f1d3c3f6fd0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f1d3c3f8130>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f1d3c3f8430>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f1d3c3f86d0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f1d3c3fe970>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f1d3c400cd0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f1d3c402490>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f1d3c404130>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f1d3c404e50>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f1d3c3f4eb0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f1d3c3f6bb0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f1d3c3f4430>],
             'a': [<numba.core.ir.Assign object at 0x7f1d3c3e2fd0>],
             'a.1': [<numba.core.ir.Assign object at 0x7f1d3c3f4b20>,
                     <numba.core.ir.Assign object at 0x7f1d3c4047f0>],
             'b': [<numba.core.ir.Assign object at 0x7f1d3c3f4130>],
             'bool112': [<numba.core.ir.Assign object at 0x7f1d3c3fec70>],
             'bool136': [<numba.core.ir.Assign object at 0x7f1d3c400fd0>],
             'bool144': [<numba.core.ir.Assign object at 0x7f1d3c402790>],
             'bool174': [<numba.core.ir.Assign object at 0x7f1d3c404af0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f1d3c3f61f0>],
             'bool42': [<numba.core.ir.Assign object at 0x7f1d3c3f6eb0>],
             'bool50': [<numba.core.ir.Assign object at 0x7f1d3c3f85b0>],
             'exp': [<numba.core.ir.Assign object at 0x7f1d3c3f67f0>,
                     <numba.core.ir.Assign object at 0x7f1d3c3fe6d0>,
                     <numba.core.ir.Assign object at 0x7f1d3c404370>],
             'invert': [<numba.core.ir.Assign object at 0x7f1d3c3f6430>,
                        <numba.core.ir.Assign object at 0x7f1d3c3fe430>],
             'r': [<numba.core.ir.Assign object at 0x7f1d3c3f45e0>,
                   <numba.core.ir.Assign object at 0x7f1d3c402df0>]})
[2022-10-04 10:26:43] [numba.core.ssa:143 DEBUG] SSA violators {'exp', 'r', 'a.1', 'invert'}
[2022-10-04 10:26:43] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c48da30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f1d3c473850>],
             98: [<numba.core.ir.Assign object at 0x7f1d3c3c5220>],
             154: [<numba.core.ir.Assign object at 0x7f1d3c3c5d30>]})
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c353130>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c3c5f70>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1d3c3c5e50>],
             146: [<numba.core.ir.Assign object at 0x7f1d3c37f5b0>]})
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c36f490>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c37fa30>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f1d3c353310>],
             154: [<numba.core.ir.Assign object at 0x7f1d3c32dcd0>]})
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c31f370>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f1d3c310f10>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f1d3c32db80>],
             98: [<numba.core.ir.Assign object at 0x7f1d3c2da3a0>]})
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 10:26:43] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 10:26:43] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 10:26:43] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 10:26:43] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 10:26:43] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 10:26:43] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 10:26:43] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 10:26:43] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1d3c34ebb0>
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 10:26:43] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 10:26:43] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 10:26:43] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 10:26:43] [segment:50 DEBUG] consumer is running...
[2022-10-04 10:26:43] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-04T14:26:43.891288+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 10, 26, 43, 890716)}, 'messageId': 'b37a035f-4128-408f-a3ee-36d89c534495'}
[2022-10-04 10:26:43] [segment:289 DEBUG] enqueued identify.
[2022-10-04 10:26:44] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-04T14:26:43.891288+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T10:26:43.890716"}, "messageId": "b37a035f-4128-408f-a3ee-36d89c534495"}], "sentAt": "2022-10-04T14:26:44.392359+00:00"}
[2022-10-04 10:26:44] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 10:26:44] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 10:26:44] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 10:26:44] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 10:26:44] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 10:26:44] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 10:26:45] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 10, 26, 45, 286668)}, 'timestamp': '2022-10-04T14:26:45.286699+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '5b0137d3-1f7b-4ae2-b8be-2f89cfbd11f3'}
[2022-10-04 10:26:45] [segment:289 DEBUG] enqueued track.
[2022-10-04 10:26:45] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T10:26:45.286668"}, "timestamp": "2022-10-04T14:26:45.286699+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "5b0137d3-1f7b-4ae2-b8be-2f89cfbd11f3"}], "sentAt": "2022-10-04T14:26:45.310820+00:00"}
[2022-10-04 10:26:45] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 10, 26, 45, 399971)}, 'timestamp': '2022-10-04T14:26:45.399988+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_dollar_bars', 'messageId': '04e7f9d0-56f0-4208-aab4-a8da33eae58a'}
[2022-10-04 10:26:45] [segment:289 DEBUG] enqueued track.
[2022-10-04 10:26:45] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 10:26:46] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T10:26:45.399971"}, "timestamp": "2022-10-04T14:26:45.399988+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_dollar_bars", "messageId": "04e7f9d0-56f0-4208-aab4-a8da33eae58a"}], "sentAt": "2022-10-04T14:26:46.098816+00:00"}
[2022-10-04 10:26:46] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 10:35:01] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 10, 35, 1, 706159)}, 'timestamp': '2022-10-04T14:35:01.706176+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_ema_dollar_run_bars', 'messageId': 'c56d3bd2-906a-410e-a9bd-3fd7a922939f'}
[2022-10-04 10:35:01] [segment:289 DEBUG] enqueued track.
[2022-10-04 10:35:02] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T10:35:01.706159"}, "timestamp": "2022-10-04T14:35:01.706176+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_ema_dollar_run_bars", "messageId": "c56d3bd2-906a-410e-a9bd-3fd7a922939f"}], "sentAt": "2022-10-04T14:35:02.467636+00:00"}
[2022-10-04 10:35:02] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 10:44:11] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:44:11] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:44:11] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:44:11] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:44:11] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:44:11] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 10:44:11] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 10:44:11] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 10:44:11] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 10:44:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:44:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:44:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:44:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:44:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:47:53] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 10, 47, 53, 388398)}, 'timestamp': '2022-10-04T14:47:53.388416+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_const_dollar_run_bars', 'messageId': '84da02ac-d553-4a31-aeed-5477da6c34a2'}
[2022-10-04 10:47:53] [segment:289 DEBUG] enqueued track.
[2022-10-04 10:47:53] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T10:47:53.388398"}, "timestamp": "2022-10-04T14:47:53.388416+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_const_dollar_run_bars", "messageId": "84da02ac-d553-4a31-aeed-5477da6c34a2"}], "sentAt": "2022-10-04T14:47:53.641149+00:00"}
[2022-10-04 10:47:54] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 10:50:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 10:50:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 10:50:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 10:50:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 10:50:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:15:30] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:15:30] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:15:30] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:15:30] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:15:30] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:16:30] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:16:30] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:16:30] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:16:30] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:16:30] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:16:30] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/vectorbtpro/data/base.py
[2022-10-04 11:17:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:17:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:17:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:17:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:17:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:19:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:19:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:19:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:19:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:19:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:19:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:19:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:19:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:19:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:19:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:19:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:19:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:19:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:19:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:19:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:19:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:19:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:19:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:19:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:19:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:19:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:19:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:19:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:19:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:19:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:23:42] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:23:42] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:23:42] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:23:42] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:23:42] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:25:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:25:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:25:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:25:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:25:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:25:09] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:25:09] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:25:09] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:25:09] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:25:09] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:25:37] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:25:37] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:25:37] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:25:37] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:25:37] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:25:43] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:25:43] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:25:43] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:25:43] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:25:43] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:25:43] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:25:43] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:25:43] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:25:43] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:25:43] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:25:58] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:25:58] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:25:58] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:25:58] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:25:58] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:26:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:26:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:26:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:26:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:26:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:26:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:26:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:26:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:26:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:26:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:26:15] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:26:15] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:26:15] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:26:15] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:26:15] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:27:11] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:27:11] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:27:11] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:27:11] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:27:11] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:27:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:27:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:27:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:27:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:27:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:28:54] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:28:54] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:28:54] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:28:54] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:28:54] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:28:54] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/__init__.py
[2022-10-04 11:28:54] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/reshape/concat.py
[2022-10-04 11:29:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:29:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:29:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:29:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:29:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:29:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:29:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:29:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:29:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:29:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:29:25] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:29:25] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:29:25] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:29:25] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:29:25] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:29:25] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/frame.py
[2022-10-04 11:29:25] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/__init__.py
[2022-10-04 11:29:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/generic.py
[2022-10-04 11:29:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/base.py
[2022-10-04 11:29:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/accessor.py
[2022-10-04 11:29:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexing.py
[2022-10-04 11:29:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/arraylike.py
[2022-10-04 11:29:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:29:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:29:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:29:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:29:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:29:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:29:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:29:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:29:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:29:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:11] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:11] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:11] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:11] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:11] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:19] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:19] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:19] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:19] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:19] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:31] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:31] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:31] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:31] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:31] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:45] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:45] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:45] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:45] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:45] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:46] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:46] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:46] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:46] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:46] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:52] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:52] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:52] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:52] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:52] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:52] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:52] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:52] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:52] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:52] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:30:52] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:30:52] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:30:52] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:30:52] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:30:52] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:31:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:31:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:31:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:31:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:31:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:31:18] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:31:18] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:31:18] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:31:18] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:31:18] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:31:21] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:31:21] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:31:21] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:31:21] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:31:21] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:31:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:31:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:31:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:31:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:31:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:31:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:31:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:31:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:31:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:31:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:31:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:31:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:31:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:31:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:31:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:31:51] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:31:51] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:31:51] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:31:51] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:31:51] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:33:20] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:33:20] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:33:20] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:33:20] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:33:20] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:33:21] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:33:21] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:33:21] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:33:21] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:33:21] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:34:29] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:34:29] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 4
[2022-10-04 11:34:29] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:4]
[2022-10-04 11:34:29] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:34:29] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:20] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:20] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:20] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:20] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:20] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:20] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:22] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:22] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:22] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:22] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:22] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:22] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:25] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:25] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:25] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:25] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:25] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:25] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:27] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:27] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:27] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:35:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:35:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 4
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[equal] old[1:3] new[1:3]
[2022-10-04 11:35:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:35:53] [parso.python.diff:296 DEBUG] -> code[replace] old[4:4] new[4:4]
[2022-10-04 11:35:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:37:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:37:53] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 1
[2022-10-04 11:37:53] [parso.python.diff:296 DEBUG] -> code[replace] old[1:4] new[1:1]
[2022-10-04 11:37:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:37:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:37:53] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/reshape/melt.py
[2022-10-04 11:38:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:38:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:38:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:38:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:38:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:38:07] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:38:07] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:38:07] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:38:07] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:38:07] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:38:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:38:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:38:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:38:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:38:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:38:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:38:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:38:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:38:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:38:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:38:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:38:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:38:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:38:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:38:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:03] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:03] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:03] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:03] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:03] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:03] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:03] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:03] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:03] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:03] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:03] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:03] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:03] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:03] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:03] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:28] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:28] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:28] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:28] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:28] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:29] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:29] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:29] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:29] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:29] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:38] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:38] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:38] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:38] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:38] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:44] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:44] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:44] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:44] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:44] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:39:45] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:39:45] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:39:45] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:39:45] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:39:45] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:43:28] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:43:28] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 4
[2022-10-04 11:43:28] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:4]
[2022-10-04 11:43:28] [parso.python.diff:421 DEBUG] parse_part from 1 to 4 (to 3 in part parser)
[2022-10-04 11:43:28] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:43:59] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:43:59] [parso.python.diff:293 DEBUG] line_lengths old: 4; new: 1
[2022-10-04 11:43:59] [parso.python.diff:296 DEBUG] -> code[replace] old[1:4] new[1:1]
[2022-10-04 11:43:59] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:43:59] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:46:07] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:46:07] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 11:46:07] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 11:46:07] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 11:46:07] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 11:46:45] [segment:54 DEBUG] consumer exited.
[2022-10-04 11:52:25] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 11:52:25] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 11:52:25] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 11:52:26] [Modules._Data_Manager:28 INFO] Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:26] [Modules._Data_Manager:47 INFO] Finished Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:26] [Modules._Data_Manager:48 INFO] Prepping USDCHF-2020_09_29-2022_10_03.csv for use
[2022-10-04 11:52:26] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 11:52:26] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 11:52:26] [Modules._Data_Manager:28 INFO] Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:27] [Modules._Data_Manager:47 INFO] Finished Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:27] [Modules._Data_Manager:48 INFO] Prepping USDCAD-2020_09_29-2022_10_03.csv for use
[2022-10-04 11:52:27] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 11:52:27] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 11:52:27] [Modules._Data_Manager:28 INFO] Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:27] [Modules._Data_Manager:47 INFO] Finished Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:27] [Modules._Data_Manager:48 INFO] Prepping USDJPY-2020_09_29-2022_10_03.csv for use
[2022-10-04 11:52:27] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 11:52:27] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 11:52:28] [Modules._Data_Manager:28 INFO] Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:28] [Modules._Data_Manager:47 INFO] Finished Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:28] [Modules._Data_Manager:48 INFO] Prepping AUDUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 11:52:28] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 11:52:28] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 11:52:28] [Modules._Data_Manager:28 INFO] Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:28] [Modules._Data_Manager:47 INFO] Finished Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:28] [Modules._Data_Manager:48 INFO] Prepping EURUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 11:52:28] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 11:52:28] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 11:52:29] [Modules._Data_Manager:28 INFO] Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:29] [Modules._Data_Manager:47 INFO] Finished Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:29] [Modules._Data_Manager:48 INFO] Prepping GBPUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 11:52:29] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 11:52:29] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 11:52:30] [Modules._Data_Manager:28 INFO] Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:30] [Modules._Data_Manager:47 INFO] Finished Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 11:52:30] [Modules._Data_Manager:48 INFO] Prepping EURGBP-2020_09_29-2022_10_03.csv for use
[2022-10-04 11:52:30] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 11:52:30] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 11:52:31] [Modules._Data_Manager:107 INFO] Converting data to symbols_data obj
[2022-10-04 11:52:49] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 11, 52, 49, 144678)}, 'timestamp': '2022-10-04T15:52:49.144694+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_const_dollar_run_bars', 'messageId': '32f4f35c-bcb6-4388-b408-9695fb913322'}
[2022-10-04 11:52:49] [segment:289 DEBUG] enqueued track.
[2022-10-04 11:52:50] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T11:52:49.144678"}, "timestamp": "2022-10-04T15:52:49.144694+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_const_dollar_run_bars", "messageId": "32f4f35c-bcb6-4388-b408-9695fb913322"}], "sentAt": "2022-10-04T15:52:50.014254+00:00"}
[2022-10-04 11:52:50] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 11:58:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 11:58:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 3
[2022-10-04 11:58:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:3]
[2022-10-04 11:58:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 3 (to 2 in part parser)
[2022-10-04 11:58:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:38] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:38] [parso.python.diff:293 DEBUG] line_lengths old: 3; new: 1
[2022-10-04 12:01:38] [parso.python.diff:296 DEBUG] -> code[replace] old[1:3] new[1:1]
[2022-10-04 12:01:38] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:38] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/frame.py
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/__init__.py
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/__init__.py
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/generic.py
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/base.py
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/accessor.py
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexing.py
[2022-10-04 12:01:38] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/arraylike.py
[2022-10-04 12:01:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:44] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:44] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:44] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:44] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:44] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:44] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 12:01:44] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:44] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:44] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:44] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:44] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:45] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:45] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:45] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:45] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:45] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:45] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:45] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:45] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:45] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:45] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:51] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:51] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:51] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:51] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:51] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:01:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:01:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:01:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:01:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:01:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:03:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:03:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:03:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:03:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:03:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:03:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:03:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:03:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:03:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:03:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:03:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:03:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:03:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:03:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:03:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:04:59] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:04:59] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 3
[2022-10-04 12:04:59] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:3]
[2022-10-04 12:04:59] [parso.python.diff:421 DEBUG] parse_part from 1 to 3 (to 2 in part parser)
[2022-10-04 12:04:59] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:05:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:05:00] [parso.python.diff:293 DEBUG] line_lengths old: 3; new: 3
[2022-10-04 12:05:00] [parso.python.diff:296 DEBUG] -> code[equal] old[1:2] new[1:2]
[2022-10-04 12:05:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 3 (to 2 in part parser)
[2022-10-04 12:05:00] [parso.python.diff:296 DEBUG] -> code[replace] old[3:3] new[3:3]
[2022-10-04 12:05:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:05:07] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:05:07] [parso.python.diff:293 DEBUG] line_lengths old: 3; new: 3
[2022-10-04 12:05:07] [parso.python.diff:296 DEBUG] -> code[equal] old[1:2] new[1:2]
[2022-10-04 12:05:07] [parso.python.diff:421 DEBUG] parse_part from 1 to 3 (to 2 in part parser)
[2022-10-04 12:05:07] [parso.python.diff:296 DEBUG] -> code[replace] old[3:3] new[3:3]
[2022-10-04 12:05:07] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:05:18] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:05:18] [parso.python.diff:293 DEBUG] line_lengths old: 3; new: 3
[2022-10-04 12:05:18] [parso.python.diff:296 DEBUG] -> code[equal] old[1:2] new[1:2]
[2022-10-04 12:05:18] [parso.python.diff:421 DEBUG] parse_part from 1 to 3 (to 2 in part parser)
[2022-10-04 12:05:18] [parso.python.diff:296 DEBUG] -> code[replace] old[3:3] new[3:3]
[2022-10-04 12:05:18] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:05:22] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:05:22] [parso.python.diff:293 DEBUG] line_lengths old: 3; new: 3
[2022-10-04 12:05:22] [parso.python.diff:296 DEBUG] -> code[equal] old[1:2] new[1:2]
[2022-10-04 12:05:22] [parso.python.diff:421 DEBUG] parse_part from 1 to 3 (to 2 in part parser)
[2022-10-04 12:05:22] [parso.python.diff:296 DEBUG] -> code[replace] old[3:3] new[3:3]
[2022-10-04 12:05:22] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:07:47] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:07:47] [parso.python.diff:293 DEBUG] line_lengths old: 3; new: 1
[2022-10-04 12:07:47] [parso.python.diff:296 DEBUG] -> code[replace] old[1:3] new[1:1]
[2022-10-04 12:07:47] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:07:47] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:07:59] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:07:59] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 12:07:59] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 12:07:59] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 12:07:59] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:08:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 12:08:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 3
[2022-10-04 12:08:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:3]
[2022-10-04 12:08:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 3 (to 2 in part parser)
[2022-10-04 12:08:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 12:09:52] [root:36 ERROR] Uncaught exception in Thread-63:
Traceback (most recent call last):
  File "/home/ruben/.local/lib/python3.8/site-packages/logger_tt/__init__.py", line 53, in thread_run_with_exception_logging
    self._target(*self._args, **self._kwargs)

  File "/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/multiprocessing/pool.py", line 576, in _handle_results
    task = get()

  File "/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/multiprocessing/connection.py", line 251, in recv
    return _ForkingPickler.loads(buf.getbuffer())
     |-> (outer) _ForkingPickler.loads = <built-in function loads>
     |-> buf.getbuffer = <built-in method getbuffer of _io.BytesIO object at 0x7fde479f28b0>
     => self = <multiprocessing.connection.Connection object at 0x7fde47adbb80>
     => buf = <_io.BytesIO object at 0x7fde479f28b0>
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe3 in position 22: invalid continuation byte
[2022-10-04 16:32:13] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 16:32:13] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 16:32:13] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 16:32:16] [Modules._Data_Manager:28 INFO] Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:17] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 16:32:17] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 16:32:17] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 16:32:17] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 16:32:17] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:32:17] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:32:17] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:32:17] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:32:17] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 16:32:17] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 16:32:17] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f76802556d0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f76802556d0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f76802556d0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f76802556d0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f768021c9a0>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f768021cfa0>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f768021cbb0>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f7680214b80>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f7680214d00>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f7680214fa0>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f7680215a00>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f76802145e0>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f7680219ac0>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f7680219f10>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f768021a0a0>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f7680214490>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f768021a100>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f768021a220>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f768021aa00>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f768021aca0>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f768021ae20>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f768021c460>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f768021c5e0>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f76802155e0>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f7680215880>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f7680219220>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f7680219880>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f7680214760>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f7680219c40>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f768021a760>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f768021c1c0>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f7680215700>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f7680219d60>],
             'alpha': [<numba.core.ir.Assign object at 0x7f7680215b80>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f7680214220>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f768021e7f0>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f7680215490>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f768021e8b0>,
                          <numba.core.ir.Assign object at 0x7f768021cb20>],
             'i': [<numba.core.ir.Assign object at 0x7f768021a4c0>],
             'weight': [<numba.core.ir.Assign object at 0x7f7680215e20>,
                        <numba.core.ir.Assign object at 0x7f768021aee0>],
             'window': [<numba.core.ir.Assign object at 0x7f7680214340>]})
[2022-10-04 16:32:17] [numba.core.ssa:143 DEBUG] SSA violators {'ewma_old', 'weight'}
[2022-10-04 16:32:17] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768025ad30>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768025ad30>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768025ad30>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768025ad30>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f768021e6a0>],
             70: [<numba.core.ir.Assign object at 0x7f76801d2550>]})
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76801d27c0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76801d27c0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76801d27c0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76801d27c0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768021ee50>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768021ee50>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768021ee50>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768021ee50>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f76801d2130>],
             70: [<numba.core.ir.Assign object at 0x7f76801762e0>]})
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768016c970>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768016c970>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768016c970>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768016c970>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:32:17] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:32:17] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 16:32:17] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 16:32:17] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:32:17] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 16:32:17] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 16:32:17] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 16:32:17] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 16:32:17] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 16:32:17] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 16:32:17] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 16:32:17] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:32:17] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f768012dcd0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f7680152d00>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f76800fdfa0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f76800ff280>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f76800ff4c0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f76800ff640>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f76800ff8e0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f76800ffbb0>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f76800ffd30>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f76800ffe80>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f7680101340>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f76801015e0>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f7680101ac0>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f7680101d60>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f7680103220>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f7680103760>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f7680103be0>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f7680107100>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f76801075e0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f7680107760>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f7680107ac0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f76800f7520>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f76800f77c0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f7680152760>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f7680147220>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f76801474c0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f76801475e0>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f76801478e0>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f7680147b80>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f76800fde20>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f76801011c0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f7680101940>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f76801035e0>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f7680107340>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f76800f73a0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f76801470a0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f76801528e0>],
             'a': [<numba.core.ir.Assign object at 0x7f76801524c0>],
             'a.1': [<numba.core.ir.Assign object at 0x7f7680152fd0>,
                     <numba.core.ir.Assign object at 0x7f7680103ca0>],
             'b': [<numba.core.ir.Assign object at 0x7f76801525e0>],
             'bool112': [<numba.core.ir.Assign object at 0x7f76800ff160>],
             'bool136': [<numba.core.ir.Assign object at 0x7f76801014c0>],
             'bool144': [<numba.core.ir.Assign object at 0x7f7680101c40>],
             'bool174': [<numba.core.ir.Assign object at 0x7f7680103fa0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f76800f76a0>],
             'bool42': [<numba.core.ir.Assign object at 0x7f76801473a0>],
             'bool50': [<numba.core.ir.Assign object at 0x7f7680147a60>],
             'exp': [<numba.core.ir.Assign object at 0x7f76800f7ca0>,
                     <numba.core.ir.Assign object at 0x7f76800fdb80>,
                     <numba.core.ir.Assign object at 0x7f7680103820>],
             'invert': [<numba.core.ir.Assign object at 0x7f76800f78e0>,
                        <numba.core.ir.Assign object at 0x7f76800fd8e0>],
             'r': [<numba.core.ir.Assign object at 0x7f7680152a90>,
                   <numba.core.ir.Assign object at 0x7f76801032e0>]})
[2022-10-04 16:32:17] [numba.core.ssa:143 DEBUG] SSA violators {'a.1', 'exp', 'invert', 'r'}
[2022-10-04 16:32:17] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76801e5910>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7680107fa0>],
             154: [<numba.core.ir.Assign object at 0x7f768013db20>]})
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7680137850>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7680152070>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f7680137c10>],
             98: [<numba.core.ir.Assign object at 0x7f76800ce730>],
             154: [<numba.core.ir.Assign object at 0x7f76800de2e0>]})
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f76800c1fa0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f76800b2040>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f7680107dc0>],
             98: [<numba.core.ir.Assign object at 0x7f768007dcd0>]})
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768007d370>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f768015e4f0>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f768015e610>],
             146: [<numba.core.ir.Assign object at 0x7f768002daf0>]})
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 16:32:17] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:32:17] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:32:17] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f768009fa60>
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 16:32:17] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 16:32:17] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 16:32:17] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:32:17] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 16:32:17] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:32:17] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 16:32:17] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 16:32:17] [segment:50 DEBUG] consumer is running...
[2022-10-04 16:32:17] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-04T20:32:17.628698+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 16, 32, 17, 628178)}, 'messageId': '0c5f7098-604d-4f27-ba18-4cc1fb58aecc'}
[2022-10-04 16:32:17] [segment:289 DEBUG] enqueued identify.
[2022-10-04 16:32:18] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-04T20:32:17.628698+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T16:32:17.628178"}, "messageId": "0c5f7098-604d-4f27-ba18-4cc1fb58aecc"}], "sentAt": "2022-10-04T20:32:18.128839+00:00"}
[2022-10-04 16:32:18] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 16:32:18] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 16:32:18] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 16:32:18] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 16:32:18] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 16:32:18] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 16:32:19] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 16, 32, 19, 971)}, 'timestamp': '2022-10-04T20:32:19.001001+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': 'a3f7f59f-9649-45b2-8c3e-d653646d6e9f'}
[2022-10-04 16:32:19] [segment:289 DEBUG] enqueued track.
[2022-10-04 16:32:19] [Modules._Data_Manager:47 INFO] Finished Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:19] [Modules._Data_Manager:48 INFO] Prepping USDCHF-2020_09_29-2022_10_03.csv for use
[2022-10-04 16:32:19] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 16:32:19] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 16:32:19] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T16:32:19.000971"}, "timestamp": "2022-10-04T20:32:19.001001+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "a3f7f59f-9649-45b2-8c3e-d653646d6e9f"}], "sentAt": "2022-10-04T20:32:19.037842+00:00"}
[2022-10-04 16:32:19] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 16:32:19] [Modules._Data_Manager:28 INFO] Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:19] [Modules._Data_Manager:47 INFO] Finished Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:19] [Modules._Data_Manager:48 INFO] Prepping USDCAD-2020_09_29-2022_10_03.csv for use
[2022-10-04 16:32:19] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 16:32:19] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 16:32:20] [Modules._Data_Manager:28 INFO] Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:20] [Modules._Data_Manager:47 INFO] Finished Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:20] [Modules._Data_Manager:48 INFO] Prepping USDJPY-2020_09_29-2022_10_03.csv for use
[2022-10-04 16:32:20] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 16:32:20] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 16:32:20] [Modules._Data_Manager:28 INFO] Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:20] [Modules._Data_Manager:47 INFO] Finished Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:20] [Modules._Data_Manager:48 INFO] Prepping AUDUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 16:32:20] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 16:32:20] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 16:32:21] [Modules._Data_Manager:28 INFO] Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:21] [Modules._Data_Manager:47 INFO] Finished Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:21] [Modules._Data_Manager:48 INFO] Prepping EURUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 16:32:21] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 16:32:21] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 16:32:21] [Modules._Data_Manager:28 INFO] Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:21] [Modules._Data_Manager:47 INFO] Finished Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:21] [Modules._Data_Manager:48 INFO] Prepping GBPUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 16:32:21] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 16:32:21] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 16:32:23] [Modules._Data_Manager:28 INFO] Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:23] [Modules._Data_Manager:47 INFO] Finished Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 16:32:23] [Modules._Data_Manager:48 INFO] Prepping EURGBP-2020_09_29-2022_10_03.csv for use
[2022-10-04 16:32:23] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 16:32:23] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 16:32:24] [Modules._Data_Manager:107 INFO] Converting data to symbols_data obj
[2022-10-04 16:33:01] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 16, 33, 1, 506213)}, 'timestamp': '2022-10-04T20:33:01.506230+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_const_dollar_run_bars', 'messageId': '2ed1ada6-4b51-4cf0-9ae7-9d326df47334'}
[2022-10-04 16:33:01] [segment:289 DEBUG] enqueued track.
[2022-10-04 16:33:02] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T16:33:01.506213"}, "timestamp": "2022-10-04T20:33:01.506230+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_const_dollar_run_bars", "messageId": "2ed1ada6-4b51-4cf0-9ae7-9d326df47334"}], "sentAt": "2022-10-04T20:33:02.267860+00:00"}
[2022-10-04 16:33:02] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 16:55:58] [segment:54 DEBUG] consumer exited.
[2022-10-04 16:56:43] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 16:56:43] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 16:56:43] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 16:56:56] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 16:56:56] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 16:56:56] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 16:56:56] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 16:56:56] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 16:56:56] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 16:56:56] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 16:56:56] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb1746037c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb1746037c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb1746037c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb1746037c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7fb1745fe5b0>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7fb1745febb0>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7fb1745fe790>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7fb174676790>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7fb174676910>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7fb174676bb0>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7fb1745f9610>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7fb1746761f0>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7fb1745fa6d0>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7fb1745fab20>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7fb1745fac70>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7fb1745fa1f0>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7fb1745facd0>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7fb1745fadf0>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7fb1745fc610>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7fb1745fc8b0>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7fb1745fca30>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7fb1745fe070>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7fb1745fe1f0>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7fb1745f91f0>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7fb1745f9490>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7fb1745f9df0>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7fb1745fa490>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7fb174676370>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7fb1745fa850>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7fb1745fc370>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7fb1745fcd90>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7fb174676610>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7fb17465fca0>],
             'alpha': [<numba.core.ir.Assign object at 0x7fb1745f9790>],
             'arr_in': [<numba.core.ir.Assign object at 0x7fb17465fdf0>],
             'arr_length': [<numba.core.ir.Assign object at 0x7fb1746032e0>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7fb1745f90a0>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7fb1746033a0>,
                          <numba.core.ir.Assign object at 0x7fb1745fe730>],
             'i': [<numba.core.ir.Assign object at 0x7fb1745fc0d0>],
             'weight': [<numba.core.ir.Assign object at 0x7fb1745f9a30>,
                        <numba.core.ir.Assign object at 0x7fb1745fcaf0>],
             'window': [<numba.core.ir.Assign object at 0x7fb17465ff10>]})
[2022-10-04 16:56:56] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-04 16:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174652d90>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174652d90>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174652d90>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174652d90>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fb174603e80>],
             70: [<numba.core.ir.Assign object at 0x7fb1745c82b0>]})
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c84c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c84c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c84c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c84c0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745c8490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745c8490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745c8490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745c8490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fb174652d90>],
             70: [<numba.core.ir.Assign object at 0x7fb1745c8700>]})
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c8970>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c8970>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c8970>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1745c8970>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 16:56:56] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 16:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 16:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 16:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 16:56:56] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 16:56:56] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 16:56:56] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 16:56:56] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 16:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 16:56:56] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 16:56:56] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 16:56:56] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 16:56:56] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fb17450cf10>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7fb17454b430>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7fb1745046d0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7fb174504970>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7fb174504bb0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7fb174504d30>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7fb174504fd0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7fb1745062e0>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7fb174506460>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7fb1745065b0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7fb174506a30>],
             '$136pred': [<numba.core.ir.Assign object at 0x7fb174506cd0>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7fb1745081f0>],
             '$144pred': [<numba.core.ir.Assign object at 0x7fb174508490>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7fb174508910>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7fb174508e50>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7fb17450a310>],
             '$174pred': [<numba.core.ir.Assign object at 0x7fb17450a7f0>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7fb17450acd0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7fb17450ae50>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7fb17450c1f0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7fb17454bc10>],
             '$24pred': [<numba.core.ir.Assign object at 0x7fb17454beb0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7fb174572e50>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7fb1744fd910>],
             '$42pred': [<numba.core.ir.Assign object at 0x7fb1744fdbb0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7fb1744fdcd0>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7fb1744fdfd0>],
             '$50pred': [<numba.core.ir.Assign object at 0x7fb1744fe2b0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7fb174504550>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7fb1745068b0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7fb174508070>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7fb174508cd0>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7fb17450aa30>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7fb17454ba90>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7fb1744fd790>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7fb174572fd0>],
             'a': [<numba.core.ir.Assign object at 0x7fb174572bb0>],
             'a.1': [<numba.core.ir.Assign object at 0x7fb17454b700>,
                     <numba.core.ir.Assign object at 0x7fb17450a3d0>],
             'b': [<numba.core.ir.Assign object at 0x7fb174572cd0>],
             'bool112': [<numba.core.ir.Assign object at 0x7fb174504850>],
             'bool136': [<numba.core.ir.Assign object at 0x7fb174506bb0>],
             'bool144': [<numba.core.ir.Assign object at 0x7fb174508370>],
             'bool174': [<numba.core.ir.Assign object at 0x7fb17450a6d0>],
             'bool24': [<numba.core.ir.Assign object at 0x7fb17454bd90>],
             'bool42': [<numba.core.ir.Assign object at 0x7fb1744fda90>],
             'bool50': [<numba.core.ir.Assign object at 0x7fb1744fe190>],
             'exp': [<numba.core.ir.Assign object at 0x7fb1744fd3d0>,
                     <numba.core.ir.Assign object at 0x7fb1745042b0>,
                     <numba.core.ir.Assign object at 0x7fb174508f10>],
             'invert': [<numba.core.ir.Assign object at 0x7fb17454bfd0>,
                        <numba.core.ir.Assign object at 0x7fb174502fd0>],
             'r': [<numba.core.ir.Assign object at 0x7fb17454b1c0>,
                   <numba.core.ir.Assign object at 0x7fb1745089d0>]})
[2022-10-04 16:56:56] [numba.core.ssa:143 DEBUG] SSA violators {'invert', 'r', 'exp', 'a.1'}
[2022-10-04 16:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17453f760>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fb17450cf10>],
             98: [<numba.core.ir.Assign object at 0x7fb1744cc460>]})
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb174511490>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb1745113a0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fb1744ccfd0>],
             146: [<numba.core.ir.Assign object at 0x7fb17448e1c0>]})
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb17447c160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb174572730>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fb17450c6a0>],
             98: [<numba.core.ir.Assign object at 0x7fb1744add60>],
             154: [<numba.core.ir.Assign object at 0x7fb17443e8b0>]})
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744a0eb0>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fb17443ec40>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fb1744cc850>],
             154: [<numba.core.ir.Assign object at 0x7fb17446dcd0>]})
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 16:56:56] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 16:56:56] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 16:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 16:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 16:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 16:56:56] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 16:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 16:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fb1744ad160>
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 16:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 16:56:56] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 16:56:56] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 16:56:57] [segment:50 DEBUG] consumer is running...
[2022-10-04 16:56:57] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-04T20:56:57.205422+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 16, 56, 57, 205005)}, 'messageId': '5b261196-4ced-4453-8ebd-6bbc4cfccbe9'}
[2022-10-04 16:56:57] [segment:289 DEBUG] enqueued identify.
[2022-10-04 16:56:57] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-04T20:56:57.205422+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T16:56:57.205005"}, "messageId": "5b261196-4ced-4453-8ebd-6bbc4cfccbe9"}], "sentAt": "2022-10-04T20:56:57.705599+00:00"}
[2022-10-04 16:56:57] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 16:56:57] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 16:56:57] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 16:56:57] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 16:56:57] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 16:56:58] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 16:56:58] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 16, 56, 58, 599376)}, 'timestamp': '2022-10-04T20:56:58.599412+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '82f29a74-2683-43be-9298-ba3723a7040e'}
[2022-10-04 16:56:58] [segment:289 DEBUG] enqueued track.
[2022-10-04 16:56:58] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T16:56:58.599376"}, "timestamp": "2022-10-04T20:56:58.599412+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "82f29a74-2683-43be-9298-ba3723a7040e"}], "sentAt": "2022-10-04T20:56:58.630611+00:00"}
[2022-10-04 16:56:58] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 16, 56, 58, 704412)}, 'timestamp': '2022-10-04T20:56:58.704428+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_const_dollar_run_bars', 'messageId': '9bc3ab71-ddf6-45cd-a0ac-969197603f92'}
[2022-10-04 16:56:58] [segment:289 DEBUG] enqueued track.
[2022-10-04 16:56:59] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 16:56:59] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T16:56:58.704412"}, "timestamp": "2022-10-04T20:56:58.704428+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_const_dollar_run_bars", "messageId": "9bc3ab71-ddf6-45cd-a0ac-969197603f92"}], "sentAt": "2022-10-04T20:56:59.931611+00:00"}
[2022-10-04 16:57:00] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 17:06:33] [segment:54 DEBUG] consumer exited.
[2022-10-04 17:07:09] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 17:07:09] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 17:07:09] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 17:25:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 17:25:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 17:48:28] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 17:48:28] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 17:48:28] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 19:06:05] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 19:06:05] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 19:06:05] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 19:06:12] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 19:06:12] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 19:06:12] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 19:06:12] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 19:06:12] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:06:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:06:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:06:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:06:12] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 19:06:12] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 19:06:12] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f79341d1520>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f79341d1520>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f79341d1520>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f79341d1520>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f79341ce760>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f79341ced60>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f79341ce970>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f79341c4af0>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f79341c4c70>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f79341c4f10>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f79341c5970>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f79341c4550>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f79341c8a30>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f79341c8e80>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f79341c8fd0>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f79341c4400>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f79341ca070>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f79341ca190>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f79341ca970>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f79341caa60>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f79341cabe0>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f79341ce220>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f79341ce3a0>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f79341c5550>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f79341c57f0>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f79341c8190>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f79341c87f0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f79341c46d0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f79341c8bb0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f79341ca6d0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f79341caf40>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f79341c5670>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f79341c8cd0>],
             'alpha': [<numba.core.ir.Assign object at 0x7f79341c5af0>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f79341c4190>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f79341d1a30>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f79341c5400>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f79341d15e0>,
                          <numba.core.ir.Assign object at 0x7f79341ce8e0>],
             'i': [<numba.core.ir.Assign object at 0x7f79341ca430>],
             'weight': [<numba.core.ir.Assign object at 0x7f79341c5d90>,
                        <numba.core.ir.Assign object at 0x7f79341caca0>],
             'window': [<numba.core.ir.Assign object at 0x7f79341c42b0>]})
[2022-10-04 19:06:12] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-04 19:06:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341c8430>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341c8430>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341c8430>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341c8430>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f79341d1e50>],
             70: [<numba.core.ir.Assign object at 0x7f7934189460>]})
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934189670>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934189670>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934189670>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934189670>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341d1d30>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341d1d30>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341d1d30>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79341d1d30>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f79341c8430>],
             70: [<numba.core.ir.Assign object at 0x7f79341ab2e0>]})
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793419e130>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793419e130>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793419e130>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793419e130>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:06:12] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:06:12] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 19:06:12] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 19:06:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:06:12] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 19:06:12] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 19:06:12] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 19:06:12] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 19:06:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 19:06:12] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 19:06:12] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 19:06:12] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:06:12] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f7934120d00>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f793412afa0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f793412c280>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f793412c4c0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f793412c640>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f793412c8e0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f793412cbb0>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f793412cd30>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f793412ce80>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f793412e340>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f793412e5e0>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f793412eac0>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f793412ed60>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f7934131220>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f7934131760>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f7934131be0>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f7934133100>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f79341335e0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f7934133760>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f7934133ac0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f7934122520>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f79341227c0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f7934120760>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f7934124220>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f79341244c0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f79341245e0>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f79341248e0>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f7934124b80>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f793412ae20>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f793412e1c0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f793412e940>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f79341315e0>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f7934133340>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f79341223a0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f79341240a0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f79341208e0>],
             'a': [<numba.core.ir.Assign object at 0x7f79341204c0>],
             'a.1': [<numba.core.ir.Assign object at 0x7f7934120fd0>,
                     <numba.core.ir.Assign object at 0x7f7934131ca0>],
             'b': [<numba.core.ir.Assign object at 0x7f79341205e0>],
             'bool112': [<numba.core.ir.Assign object at 0x7f793412c160>],
             'bool136': [<numba.core.ir.Assign object at 0x7f793412e4c0>],
             'bool144': [<numba.core.ir.Assign object at 0x7f793412ec40>],
             'bool174': [<numba.core.ir.Assign object at 0x7f7934131fa0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f79341226a0>],
             'bool42': [<numba.core.ir.Assign object at 0x7f79341243a0>],
             'bool50': [<numba.core.ir.Assign object at 0x7f7934124a60>],
             'exp': [<numba.core.ir.Assign object at 0x7f7934122ca0>,
                     <numba.core.ir.Assign object at 0x7f793412ab80>,
                     <numba.core.ir.Assign object at 0x7f7934131820>],
             'invert': [<numba.core.ir.Assign object at 0x7f79341228e0>,
                        <numba.core.ir.Assign object at 0x7f793412a8e0>],
             'r': [<numba.core.ir.Assign object at 0x7f7934120a90>,
                   <numba.core.ir.Assign object at 0x7f79341312e0>]})
[2022-10-04 19:06:12] [numba.core.ssa:143 DEBUG] SSA violators {'r', 'exp', 'a.1', 'invert'}
[2022-10-04 19:06:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934120100>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f793414d5b0>],
             146: [<numba.core.ir.Assign object at 0x7f7934133c70>]})
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f7934168af0>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934152700>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f793414dca0>],
             98: [<numba.core.ir.Assign object at 0x7f7934081400>],
             154: [<numba.core.ir.Assign object at 0x7f7934105730>]})
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340f4550>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f7934105460>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f7934105610>],
             154: [<numba.core.ir.Assign object at 0x7f79340acb50>]})
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f79340a0820>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f79340aca90>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f79340ac8e0>],
             98: [<numba.core.ir.Assign object at 0x7f793404ff40>]})
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:06:12] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 19:06:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 19:06:12] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 19:06:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 19:06:12] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 19:06:12] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:06:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:06:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f793404f880>
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:06:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:06:12] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 19:06:12] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 19:06:12] [segment:50 DEBUG] consumer is running...
[2022-10-04 19:06:12] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-04T23:06:12.784087+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 19, 6, 12, 783544)}, 'messageId': '5ed8d299-ad86-4793-88ab-164d42ffabbf'}
[2022-10-04 19:06:12] [segment:289 DEBUG] enqueued identify.
[2022-10-04 19:06:13] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-04T23:06:12.784087+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T19:06:12.783544"}, "messageId": "5ed8d299-ad86-4793-88ab-164d42ffabbf"}], "sentAt": "2022-10-04T23:06:13.284404+00:00"}
[2022-10-04 19:06:13] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 19:06:13] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 19:06:13] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 19:06:13] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 19:06:13] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 19:06:13] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:06:14] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 19, 6, 14, 375516)}, 'timestamp': '2022-10-04T23:06:14.375548+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': 'f719a9c9-cf5b-43a7-a991-37b09c26c851'}
[2022-10-04 19:06:14] [segment:289 DEBUG] enqueued track.
[2022-10-04 19:06:14] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 19, 6, 14, 480457)}, 'timestamp': '2022-10-04T23:06:14.480473+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_const_dollar_run_bars', 'messageId': '33730806-1126-4d35-962b-0d67f2b98fb6'}
[2022-10-04 19:06:14] [segment:289 DEBUG] enqueued track.
[2022-10-04 19:06:15] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T19:06:14.375516"}, "timestamp": "2022-10-04T23:06:14.375548+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "f719a9c9-cf5b-43a7-a991-37b09c26c851"}, {"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T19:06:14.480457"}, "timestamp": "2022-10-04T23:06:14.480473+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_const_dollar_run_bars", "messageId": "33730806-1126-4d35-962b-0d67f2b98fb6"}], "sentAt": "2022-10-04T23:06:15.216702+00:00"}
[2022-10-04 19:06:15] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:08:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 19:08:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 19:08:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 19:08:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 19:08:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:08:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:08:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:08:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:08:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:08:02] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:08:02] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:08:02] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:08:02] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:08:02] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:08:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:08:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:08:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:08:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:08:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:08:07] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:08:07] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:08:07] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:08:07] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:08:07] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:10:37] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:10:37] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:10:37] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:10:37] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:10:37] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:10:44] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:10:44] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:10:44] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:10:44] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:10:44] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:11:33] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:11:33] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:11:33] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:11:33] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:11:33] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:11:33] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:11:33] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:11:33] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:11:33] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:11:33] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:11:35] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:11:35] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:11:35] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:11:35] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:11:35] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:11:45] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:11:45] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:11:45] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:11:45] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:11:45] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:11:47] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:11:47] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:11:47] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:11:47] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:11:47] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:12:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:12:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:12:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:12:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:12:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:12:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:12:06] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:12:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:12:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:12:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:12:15] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:12:15] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:12:15] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:12:15] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:12:15] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:12:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:12:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:12:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:12:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:12:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:12:16] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/__init__.py
[2022-10-04 19:13:13] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:13] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:13] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:13] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:13] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:23] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:23] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:23] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:23] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:23] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:23] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/reshape/concat.py
[2022-10-04 19:13:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/__init__.py
[2022-10-04 19:13:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/api.py
[2022-10-04 19:13:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/frame.py
[2022-10-04 19:13:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/series.py
[2022-10-04 19:13:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/generic.py
[2022-10-04 19:13:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/_typing.py
[2022-10-04 19:13:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:56] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:56] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:56] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:56] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:56] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:13:57] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:13:57] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:13:57] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:13:57] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:13:57] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:14:36] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:14:36] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:14:36] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:14:36] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:14:36] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:09] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:09] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:09] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:09] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:09] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:09] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/base.py
[2022-10-04 19:15:09] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/accessor.py
[2022-10-04 19:15:09] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexing.py
[2022-10-04 19:15:09] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/arraylike.py
[2022-10-04 19:15:10] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:10] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:10] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:10] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:10] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:10] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:10] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:10] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:10] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:10] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:10] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:10] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:10] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:10] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:10] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexes/__init__.py
[2022-10-04 19:15:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexes/api.py
[2022-10-04 19:15:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:15:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:15:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:15:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:15:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:15:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:16:07] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:16:07] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:16:07] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:16:07] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:16:07] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:17:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:17:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:17:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:17:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:17:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:17:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py
[2022-10-04 19:17:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.pyi
[2022-10-04 19:17:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/abc.py
[2022-10-04 19:17:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
[2022-10-04 19:17:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/types.py
[2022-10-04 19:17:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
[2022-10-04 19:17:00] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/common.py
[2022-10-04 19:17:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:17:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:17:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:17:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:17:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:17:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:17:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:17:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:17:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:17:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:17:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:17:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:17:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:17:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:17:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:17:02] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:17:02] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:17:02] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:17:02] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:17:02] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:17:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:17:06] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:17:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:17:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:17:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:31:58] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:31:58] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:31:58] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:31:58] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 0 in part parser)
[2022-10-04 19:31:58] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:32:03] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:32:03] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:32:03] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:32:03] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:32:03] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:34:50] [segment:54 DEBUG] consumer exited.
[2022-10-04 19:35:36] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 19:35:36] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 19:35:36] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 19:35:37] [Modules._Data_Manager:28 INFO] Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:35:37] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 19:35:37] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 19:35:37] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 19:35:37] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 19:35:37] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:35:37] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:35:37] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:35:37] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:35:37] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 19:35:37] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 19:35:37] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c1c37c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c1c37c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c1c37c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c1c37c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f6c7c178d30>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f6c7c17a370>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f6c7c178f40>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f6c7c15cf10>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f6c7c1720d0>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f6c7c172370>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f6c7c172d90>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f6c7c15c970>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f6c7c174e50>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f6c7c1762e0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f6c7c176430>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f6c7c174ac0>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f6c7c176490>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f6c7c1765b0>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f6c7c176d90>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f6c7c178070>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f6c7c1781f0>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f6c7c1787f0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f6c7c178970>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f6c7c172970>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f6c7c172c10>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f6c7c1745b0>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f6c7c174c10>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f6c7c15caf0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f6c7c174fd0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f6c7c176af0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f6c7c178550>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f6c7c15cd90>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f6c7c174850>],
             'alpha': [<numba.core.ir.Assign object at 0x7f6c7c172f10>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f6c7c1b55b0>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f6c7c17aeb0>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f6c7c172820>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f6c7c17af70>,
                          <numba.core.ir.Assign object at 0x7f6c7c178eb0>],
             'i': [<numba.core.ir.Assign object at 0x7f6c7c176850>],
             'weight': [<numba.core.ir.Assign object at 0x7f6c7c1741f0>,
                        <numba.core.ir.Assign object at 0x7f6c7c1782b0>],
             'window': [<numba.core.ir.Assign object at 0x7f6c7c1b5640>]})
[2022-10-04 19:35:37] [numba.core.ssa:143 DEBUG] SSA violators {'ewma_old', 'weight'}
[2022-10-04 19:35:37] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c1c3b50>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c1c3b50>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c1c3b50>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c1c3b50>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6c7c180640>],
             70: [<numba.core.ir.Assign object at 0x7f6c7c1809a0>]})
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c180370>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c180370>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c180370>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c180370>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c14df70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c14df70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c14df70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c14df70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6c7c180400>],
             70: [<numba.core.ir.Assign object at 0x7f6c7c0e0850>]})
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c0cd730>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c0cd730>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c0cd730>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c0cd730>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:35:37] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:35:37] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 19:35:37] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 19:35:37] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:35:37] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 19:35:37] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 19:35:37] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 19:35:37] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 19:35:37] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 19:35:37] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 19:35:37] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 19:35:37] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:35:37] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f6c7c06c340>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f6c7c05b3a0>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f6c7c064640>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f6c7c0648e0>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f6c7c064b20>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f6c7c064ca0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f6c7c064f40>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f6c7c066250>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f6c7c0663d0>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f6c7c066520>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f6c7c0669a0>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f6c7c066c40>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f6c7c068160>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f6c7c068400>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f6c7c068880>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f6c7c068dc0>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f6c7c06a280>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f6c7c06a760>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f6c7c06ac40>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f6c7c06adc0>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f6c7c06c160>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f6c7c05bb80>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f6c7c05be20>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f6c7c052dc0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f6c7c05c880>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f6c7c05cb20>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f6c7c05cc40>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f6c7c05cf40>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f6c7c05e220>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f6c7c0644c0>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f6c7c066820>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f6c7c066fa0>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f6c7c068c40>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f6c7c06a9a0>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f6c7c05ba00>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f6c7c05c700>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f6c7c052f40>],
             'a': [<numba.core.ir.Assign object at 0x7f6c7c052b20>],
             'a.1': [<numba.core.ir.Assign object at 0x7f6c7c05b670>,
                     <numba.core.ir.Assign object at 0x7f6c7c06a340>],
             'b': [<numba.core.ir.Assign object at 0x7f6c7c052c40>],
             'bool112': [<numba.core.ir.Assign object at 0x7f6c7c0647c0>],
             'bool136': [<numba.core.ir.Assign object at 0x7f6c7c066b20>],
             'bool144': [<numba.core.ir.Assign object at 0x7f6c7c0682e0>],
             'bool174': [<numba.core.ir.Assign object at 0x7f6c7c06a640>],
             'bool24': [<numba.core.ir.Assign object at 0x7f6c7c05bd00>],
             'bool42': [<numba.core.ir.Assign object at 0x7f6c7c05ca00>],
             'bool50': [<numba.core.ir.Assign object at 0x7f6c7c05e100>],
             'exp': [<numba.core.ir.Assign object at 0x7f6c7c05c340>,
                     <numba.core.ir.Assign object at 0x7f6c7c064220>,
                     <numba.core.ir.Assign object at 0x7f6c7c068e80>],
             'invert': [<numba.core.ir.Assign object at 0x7f6c7c05bf40>,
                        <numba.core.ir.Assign object at 0x7f6c7c062f40>],
             'r': [<numba.core.ir.Assign object at 0x7f6c7c05b130>,
                   <numba.core.ir.Assign object at 0x7f6c7c068940>]})
[2022-10-04 19:35:37] [numba.core.ssa:143 DEBUG] SSA violators {'invert', 'exp', 'r', 'a.1'}
[2022-10-04 19:35:37] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c097040>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f6c7c06ce20>],
             98: [<numba.core.ir.Assign object at 0x7f6c7c0a1610>]})
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c02c310>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c7c02c220>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f6c7c0a1670>],
             98: [<numba.core.ir.Assign object at 0x7f6c7c048760>],
             154: [<numba.core.ir.Assign object at 0x7f6c6049f310>]})
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c7c08fc70>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c6049f1c0>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6c7c0a1940>],
             146: [<numba.core.ir.Assign object at 0x7f6c604b9f10>]})
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c604aed00>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f6c604cb400>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f6c604cb190>],
             154: [<numba.core.ir.Assign object at 0x7f6c6046ae80>]})
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:35:37] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:35:37] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:35:37] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:35:37] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:35:37] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:35:37] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:35:37] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:35:37] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f6c6045d580>
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:35:37] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:35:37] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 19:35:37] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 19:35:38] [segment:50 DEBUG] consumer is running...
[2022-10-04 19:35:38] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-04T23:35:38.175033+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 19, 35, 38, 174460)}, 'messageId': '1832a0d3-3251-4625-9ffc-84452b9b9301'}
[2022-10-04 19:35:38] [segment:289 DEBUG] enqueued identify.
[2022-10-04 19:35:38] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-04T23:35:38.175033+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T19:35:38.174460"}, "messageId": "1832a0d3-3251-4625-9ffc-84452b9b9301"}], "sentAt": "2022-10-04T23:35:38.675189+00:00"}
[2022-10-04 19:35:38] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 19:35:38] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 19:35:38] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 19:35:38] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 19:35:38] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 19:35:39] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:35:39] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 19, 35, 39, 576247)}, 'timestamp': '2022-10-04T23:35:39.576281+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '50144e38-0b82-4c59-9588-078404b9ded7'}
[2022-10-04 19:35:39] [segment:289 DEBUG] enqueued track.
[2022-10-04 19:35:39] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T19:35:39.576247"}, "timestamp": "2022-10-04T23:35:39.576281+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "50144e38-0b82-4c59-9588-078404b9ded7"}], "sentAt": "2022-10-04T23:35:39.595883+00:00"}
[2022-10-04 19:35:39] [Modules._Data_Manager:47 INFO] Finished Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:35:39] [Modules._Data_Manager:48 INFO] Prepping USDCHF-2020_09_29-2022_10_03.csv for use
[2022-10-04 19:35:39] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 19:35:39] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 19:35:39] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:35:40] [Modules._Data_Manager:28 INFO] Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:35:40] [Modules._Data_Manager:47 INFO] Finished Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:35:40] [Modules._Data_Manager:48 INFO] Prepping USDCAD-2020_09_29-2022_10_03.csv for use
[2022-10-04 19:35:40] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 19:35:40] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 19:35:40] [Modules._Data_Manager:28 INFO] Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:35:40] [Modules._Data_Manager:47 INFO] Finished Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:35:40] [Modules._Data_Manager:48 INFO] Prepping USDJPY-2020_09_29-2022_10_03.csv for use
[2022-10-04 19:35:40] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 19:35:40] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 19:35:41] [Modules._Data_Manager:107 INFO] Converting data to symbols_data obj
[2022-10-04 19:35:58] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 19, 35, 58, 209139)}, 'timestamp': '2022-10-04T23:35:58.209157+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_const_dollar_run_bars', 'messageId': '8545cf87-12a0-4733-b442-b5f388ef6dfe'}
[2022-10-04 19:35:58] [segment:289 DEBUG] enqueued track.
[2022-10-04 19:35:59] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T19:35:58.209139"}, "timestamp": "2022-10-04T23:35:58.209157+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_const_dollar_run_bars", "messageId": "8545cf87-12a0-4733-b442-b5f388ef6dfe"}], "sentAt": "2022-10-04T23:35:59.243362+00:00"}
[2022-10-04 19:36:02] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:40:50] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 19:40:50] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 19:40:50] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:40:50] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:40:50] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:40:50] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:40:50] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:40:54] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:40:54] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:40:54] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:40:54] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:40:54] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:40:59] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:40:59] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:40:59] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:40:59] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:40:59] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:40:59] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 19:40:59] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 19:41:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:41:06] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:41:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:41:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:41:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:42:07] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:42:07] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:42:07] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:42:07] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:42:07] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:42:39] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:42:39] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:42:39] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:42:39] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:42:39] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:42:54] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:42:54] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:42:54] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:42:54] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:42:54] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:42:56] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:42:56] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:42:56] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:42:56] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:42:56] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:42:59] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:42:59] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:42:59] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:42:59] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:42:59] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:43:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:43:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:43:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:43:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:43:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:43:22] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:43:22] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 19:43:22] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 19:43:22] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 19:43:22] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/frame.py
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/__init__.py
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/__init__.py
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/generic.py
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/base.py
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/accessor.py
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexing.py
[2022-10-04 19:43:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/arraylike.py
[2022-10-04 19:44:42] [segment:54 DEBUG] consumer exited.
[2022-10-04 19:46:11] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 19:46:11] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 19:46:11] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 19:46:50] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 19:46:50] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 19:46:50] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 19:46:50] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 19:46:50] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:46:50] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:46:50] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:46:50] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 19:46:50] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 19:46:50] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 19:46:50] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c513040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c513040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c513040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c513040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7fbd1c4eadf0>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7fbd1c500430>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7fbd1c5000a0>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7fbd1c47efd0>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7fbd1c464190>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7fbd1c464430>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7fbd1c464e50>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7fbd1c47ea30>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7fbd1c50cf10>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7fbd1c5013a0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7fbd1c5014f0>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7fbd1c47e8e0>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7fbd1c501550>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7fbd1c501670>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7fbd1c501e50>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7fbd1c4ea130>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7fbd1c4ea2b0>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7fbd1c4ea8b0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7fbd1c4eaa30>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7fbd1c464a30>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7fbd1c464cd0>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7fbd1c50c670>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7fbd1c50ccd0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7fbd1c47ebb0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7fbd1c5010d0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7fbd1c501bb0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7fbd1c4ea610>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7fbd1c464610>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7fbd1c50cb50>],
             'alpha': [<numba.core.ir.Assign object at 0x7fbd1c464fd0>],
             'arr_in': [<numba.core.ir.Assign object at 0x7fbd1c47e670>],
             'arr_length': [<numba.core.ir.Assign object at 0x7fbd1c500fd0>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7fbd1c4648e0>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7fbd1c500be0>,
                          <numba.core.ir.Assign object at 0x7fbd1c4eaf70>],
             'i': [<numba.core.ir.Assign object at 0x7fbd1c501910>],
             'weight': [<numba.core.ir.Assign object at 0x7fbd1c50c2b0>,
                        <numba.core.ir.Assign object at 0x7fbd1c4ea370>],
             'window': [<numba.core.ir.Assign object at 0x7fbd1c47e790>]})
[2022-10-04 19:46:50] [numba.core.ssa:143 DEBUG] SSA violators {'ewma_old', 'weight'}
[2022-10-04 19:46:50] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c501fa0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c501fa0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c501fa0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c501fa0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbd1c513700>],
             70: [<numba.core.ir.Assign object at 0x7fbd1c513a60>]})
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c513430>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c513430>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c513430>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c513430>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1dc8de20>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1dc8de20>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1dc8de20>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1dc8de20>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbd1c5134c0>],
             70: [<numba.core.ir.Assign object at 0x7fbd1c5360d0>]})
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5367f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5367f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5367f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5367f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 19:46:50] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 19:46:50] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 19:46:50] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 19:46:50] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 19:46:50] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 19:46:50] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 19:46:50] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 19:46:50] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 19:46:50] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 19:46:50] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 19:46:50] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 19:46:50] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 19:46:50] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbd1c556fd0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7fbd1c4b2760>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7fbd1c55ea00>],
             '$112pred': [<numba.core.ir.Assign object at 0x7fbd1c55eca0>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7fbd1c55eee0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7fbd1c55f0a0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7fbd1c55f340>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7fbd1c55f610>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7fbd1c55f790>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7fbd1c55f8e0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7fbd1c55fd60>],
             '$136pred': [<numba.core.ir.Assign object at 0x7fbd1c557040>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7fbd1c557520>],
             '$144pred': [<numba.core.ir.Assign object at 0x7fbd1c5577c0>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7fbd1c557c40>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7fbd1c55d1c0>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7fbd1c55d640>],
             '$174pred': [<numba.core.ir.Assign object at 0x7fbd1c55db20>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7fbd1c556040>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7fbd1c5561c0>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7fbd1c556520>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7fbd1c4b2f40>],
             '$24pred': [<numba.core.ir.Assign object at 0x7fbd1c56c220>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7fbd1c4b21c0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7fbd1c56cc40>],
             '$42pred': [<numba.core.ir.Assign object at 0x7fbd1c56cee0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7fbd1c561790>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7fbd1c561e20>],
             '$50pred': [<numba.core.ir.Assign object at 0x7fbd1c561340>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7fbd1c55e880>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7fbd1c55fbe0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7fbd1c5573a0>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7fbd1c55d040>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7fbd1c55dd60>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7fbd1c4b2dc0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7fbd1c56cac0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7fbd1c4b2340>],
             'a': [<numba.core.ir.Assign object at 0x7fbd1c4bbee0>],
             'a.1': [<numba.core.ir.Assign object at 0x7fbd1c4b2a30>,
                     <numba.core.ir.Assign object at 0x7fbd1c55d700>],
             'b': [<numba.core.ir.Assign object at 0x7fbd1c4b2040>],
             'bool112': [<numba.core.ir.Assign object at 0x7fbd1c55eb80>],
             'bool136': [<numba.core.ir.Assign object at 0x7fbd1c55fee0>],
             'bool144': [<numba.core.ir.Assign object at 0x7fbd1c5576a0>],
             'bool174': [<numba.core.ir.Assign object at 0x7fbd1c55da00>],
             'bool24': [<numba.core.ir.Assign object at 0x7fbd1c56c100>],
             'bool42': [<numba.core.ir.Assign object at 0x7fbd1c56cdc0>],
             'bool50': [<numba.core.ir.Assign object at 0x7fbd1c5611c0>],
             'exp': [<numba.core.ir.Assign object at 0x7fbd1c56c700>,
                     <numba.core.ir.Assign object at 0x7fbd1c55e5e0>,
                     <numba.core.ir.Assign object at 0x7fbd1c55d280>],
             'invert': [<numba.core.ir.Assign object at 0x7fbd1c56c340>,
                        <numba.core.ir.Assign object at 0x7fbd1c55e340>],
             'r': [<numba.core.ir.Assign object at 0x7fbd1c4b24f0>,
                   <numba.core.ir.Assign object at 0x7fbd1c557d00>]})
[2022-10-04 19:46:50] [numba.core.ssa:143 DEBUG] SSA violators {'exp', 'r', 'invert', 'a.1'}
[2022-10-04 19:46:50] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0730>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fbd1c4bb640>],
             98: [<numba.core.ir.Assign object at 0x7fbd1c556a90>],
             154: [<numba.core.ir.Assign object at 0x7fbd012be9d0>]})
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd002435b0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd002434f0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbd00243250>],
             146: [<numba.core.ir.Assign object at 0x7fbd0026bd00>]})
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd0025faf0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd012b6100>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7fbd0026b970>],
             98: [<numba.core.ir.Assign object at 0x7fbd002141f0>]})
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd1c5742e0>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbd1c4c0040>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:50] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbd1c4c0130>],
             154: [<numba.core.ir.Assign object at 0x7fbd001c1340>]})
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 19:46:50] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 19:46:50] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 19:46:50] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 19:46:50] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 19:46:50] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 19:46:50] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 19:46:50] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 19:46:50] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbd00234160>
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 19:46:50] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 19:46:51] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 19:46:51] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 19:46:51] [segment:50 DEBUG] consumer is running...
[2022-10-04 19:46:51] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-04T23:46:51.487786+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 19, 46, 51, 487221)}, 'messageId': '5557937d-4303-497d-b044-0ccef25fad7d'}
[2022-10-04 19:46:51] [segment:289 DEBUG] enqueued identify.
[2022-10-04 19:46:51] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 19:46:52] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-04T23:46:51.487786+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T19:46:51.487221"}, "messageId": "5557937d-4303-497d-b044-0ccef25fad7d"}], "sentAt": "2022-10-04T23:46:52.132148+00:00"}
[2022-10-04 19:46:52] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 19:46:52] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 19:46:52] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 19:46:52] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 19:46:52] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:46:52] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 19, 46, 52, 716352)}, 'timestamp': '2022-10-04T23:46:52.716388+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '87da0a28-aae5-475c-ab25-13f8d103d0f6'}
[2022-10-04 19:46:52] [segment:289 DEBUG] enqueued track.
[2022-10-04 19:46:52] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 19, 46, 52, 747499)}, 'timestamp': '2022-10-04T23:46:52.747514+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_const_dollar_run_bars', 'messageId': '9c6f809d-495e-4c48-a10f-3d3d59bbcf33'}
[2022-10-04 19:46:52] [segment:289 DEBUG] enqueued track.
[2022-10-04 19:46:53] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T19:46:52.716352"}, "timestamp": "2022-10-04T23:46:52.716388+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "87da0a28-aae5-475c-ab25-13f8d103d0f6"}, {"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T19:46:52.747499"}, "timestamp": "2022-10-04T23:46:52.747514+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_const_dollar_run_bars", "messageId": "9c6f809d-495e-4c48-a10f-3d3d59bbcf33"}], "sentAt": "2022-10-04T23:46:53.837846+00:00"}
[2022-10-04 19:46:56] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:48:23] [Modules._Data_Manager:28 INFO] Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:48:23] [Modules._Data_Manager:47 INFO] Finished Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:48:23] [Modules._Data_Manager:48 INFO] Prepping USDCHF-2020_09_29-2022_10_03.csv for use
[2022-10-04 19:48:23] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 19:48:23] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 19:48:24] [Modules._Data_Manager:28 INFO] Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:48:24] [Modules._Data_Manager:47 INFO] Finished Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:48:24] [Modules._Data_Manager:48 INFO] Prepping USDCAD-2020_09_29-2022_10_03.csv for use
[2022-10-04 19:48:24] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 19:48:24] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 19:48:24] [Modules._Data_Manager:28 INFO] Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:48:24] [Modules._Data_Manager:47 INFO] Finished Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 19:48:24] [Modules._Data_Manager:48 INFO] Prepping USDJPY-2020_09_29-2022_10_03.csv for use
[2022-10-04 19:48:24] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 19:48:24] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 19:48:25] [Modules._Data_Manager:107 INFO] Converting data to symbols_data obj
[2022-10-04 19:49:58] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 19, 49, 58, 580630)}, 'timestamp': '2022-10-04T23:49:58.580652+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_dollar_bars', 'messageId': 'd349d15c-b94b-4e81-9a8e-ea90bf8ec454'}
[2022-10-04 19:49:58] [segment:289 DEBUG] enqueued track.
[2022-10-04 19:49:59] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T19:49:58.580630"}, "timestamp": "2022-10-04T23:49:58.580652+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_dollar_bars", "messageId": "d349d15c-b94b-4e81-9a8e-ea90bf8ec454"}], "sentAt": "2022-10-04T23:49:59.451445+00:00"}
[2022-10-04 19:50:00] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 19:56:39] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:56:39] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 2
[2022-10-04 19:56:39] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:2]
[2022-10-04 19:56:39] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 19:56:39] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:56:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:56:41] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 2
[2022-10-04 19:56:41] [parso.python.diff:296 DEBUG] -> code[equal] old[1:1] new[1:1]
[2022-10-04 19:56:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 19:56:41] [parso.python.diff:296 DEBUG] -> code[replace] old[2:2] new[2:2]
[2022-10-04 19:56:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:56:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:56:41] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 2
[2022-10-04 19:56:41] [parso.python.diff:296 DEBUG] -> code[equal] old[1:1] new[1:1]
[2022-10-04 19:56:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 19:56:41] [parso.python.diff:296 DEBUG] -> code[replace] old[2:2] new[2:2]
[2022-10-04 19:56:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:56:43] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:56:43] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 2
[2022-10-04 19:56:43] [parso.python.diff:296 DEBUG] -> code[equal] old[1:1] new[1:1]
[2022-10-04 19:56:43] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 19:56:43] [parso.python.diff:296 DEBUG] -> code[replace] old[2:2] new[2:2]
[2022-10-04 19:56:43] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:56:43] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:56:43] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 2
[2022-10-04 19:56:43] [parso.python.diff:296 DEBUG] -> code[equal] old[1:1] new[1:1]
[2022-10-04 19:56:43] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 19:56:43] [parso.python.diff:296 DEBUG] -> code[replace] old[2:2] new[2:2]
[2022-10-04 19:56:43] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:56:43] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:56:43] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 2
[2022-10-04 19:56:43] [parso.python.diff:296 DEBUG] -> code[equal] old[1:1] new[1:1]
[2022-10-04 19:56:43] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 19:56:43] [parso.python.diff:296 DEBUG] -> code[replace] old[2:2] new[2:2]
[2022-10-04 19:56:43] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 19:59:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 19:59:48] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 2
[2022-10-04 19:59:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:2] new[1:2]
[2022-10-04 19:59:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 19:59:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:00:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:00:00] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 2
[2022-10-04 20:00:00] [parso.python.diff:296 DEBUG] -> code[equal] old[1:1] new[1:1]
[2022-10-04 20:00:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 2 (to 1 in part parser)
[2022-10-04 20:00:00] [parso.python.diff:296 DEBUG] -> code[replace] old[2:2] new[2:2]
[2022-10-04 20:00:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:01:40] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:01:40] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 1
[2022-10-04 20:01:40] [parso.python.diff:296 DEBUG] -> code[replace] old[1:2] new[1:1]
[2022-10-04 20:01:40] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:01:40] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:01:40] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 20:02:10] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:10] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:10] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:10] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:10] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:10] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:10] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:10] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:10] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:10] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:10] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:10] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:10] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:10] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:10] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:11] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:11] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:11] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:11] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:11] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 20:02:26] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 20:02:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:28] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:28] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:28] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:28] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:28] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:28] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:28] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:28] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:28] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:28] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:30] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:30] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:30] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:30] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:30] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:30] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:30] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:30] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:30] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:30] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:44] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:02:44] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:02:44] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:02:44] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:02:44] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=140)
           2	LOAD_GLOBAL(arg=0, lineno=140)
           4	LOAD_ATTR(arg=1, lineno=140)
           6	LOAD_GLOBAL(arg=2, lineno=140)
           8	LOAD_FAST(arg=1, lineno=140)
          10	CALL_FUNCTION(arg=1, lineno=140)
          12	LOAD_GLOBAL(arg=0, lineno=140)
          14	LOAD_ATTR(arg=3, lineno=140)
          16	LOAD_CONST(arg=1, lineno=140)
          18	CALL_FUNCTION_KW(arg=2, lineno=140)
          20	STORE_FAST(arg=4, lineno=140)
          22	LOAD_GLOBAL(arg=0, lineno=141)
          24	LOAD_ATTR(arg=1, lineno=141)
          26	LOAD_GLOBAL(arg=2, lineno=141)
          28	LOAD_FAST(arg=1, lineno=141)
          30	CALL_FUNCTION(arg=1, lineno=141)
          32	LOAD_GLOBAL(arg=0, lineno=141)
          34	LOAD_ATTR(arg=3, lineno=141)
          36	LOAD_CONST(arg=1, lineno=141)
          38	CALL_FUNCTION_KW(arg=2, lineno=141)
          40	STORE_FAST(arg=5, lineno=141)
          42	LOAD_CONST(arg=2, lineno=143)
          44	STORE_FAST(arg=6, lineno=143)
          46	LOAD_GLOBAL(arg=4, lineno=144)
          48	LOAD_GLOBAL(arg=2, lineno=144)
          50	LOAD_FAST(arg=1, lineno=144)
          52	CALL_FUNCTION(arg=1, lineno=144)
          54	CALL_FUNCTION(arg=1, lineno=144)
          56	GET_ITER(arg=None, lineno=144)
>         58	FOR_ITER(arg=626, lineno=144)
          62	STORE_FAST(arg=7, lineno=144)
          64	LOAD_FAST(arg=7, lineno=145)
          66	LOAD_CONST(arg=2, lineno=145)
          68	COMPARE_OP(arg=4, lineno=145)
          70	POP_JUMP_IF_FALSE(arg=100, lineno=145)
          72	LOAD_FAST(arg=1, lineno=145)
          74	LOAD_FAST(arg=7, lineno=145)
          76	BINARY_SUBSCR(arg=None, lineno=145)
          78	LOAD_FAST(arg=1, lineno=145)
          80	LOAD_FAST(arg=7, lineno=145)
          82	LOAD_CONST(arg=3, lineno=145)
          84	BINARY_SUBTRACT(arg=None, lineno=145)
          86	BINARY_SUBSCR(arg=None, lineno=145)
          88	COMPARE_OP(arg=0, lineno=145)
          90	POP_JUMP_IF_FALSE(arg=100, lineno=145)
          92	LOAD_GLOBAL(arg=5, lineno=146)
          94	LOAD_CONST(arg=4, lineno=146)
          96	CALL_FUNCTION(arg=1, lineno=146)
          98	RAISE_VARARGS(arg=1, lineno=146)
>        100	LOAD_CONST(arg=5, lineno=148)
         102	STORE_FAST(arg=8, lineno=148)
         104	LOAD_GLOBAL(arg=4, lineno=149)
         106	LOAD_FAST(arg=6, lineno=149)
         108	LOAD_GLOBAL(arg=2, lineno=149)
         110	LOAD_FAST(arg=0, lineno=149)
         112	CALL_FUNCTION(arg=1, lineno=149)
         114	CALL_FUNCTION(arg=2, lineno=149)
         116	GET_ITER(arg=None, lineno=149)
>        118	FOR_ITER(arg=520, lineno=149)
         122	STORE_FAST(arg=9, lineno=149)
         124	LOAD_FAST(arg=9, lineno=150)
         126	LOAD_CONST(arg=2, lineno=150)
         128	COMPARE_OP(arg=4, lineno=150)
         130	POP_JUMP_IF_FALSE(arg=160, lineno=150)
         132	LOAD_FAST(arg=0, lineno=150)
         134	LOAD_FAST(arg=9, lineno=150)
         136	BINARY_SUBSCR(arg=None, lineno=150)
         138	LOAD_FAST(arg=0, lineno=150)
         140	LOAD_FAST(arg=9, lineno=150)
         142	LOAD_CONST(arg=3, lineno=150)
         144	BINARY_SUBTRACT(arg=None, lineno=150)
         146	BINARY_SUBSCR(arg=None, lineno=150)
         148	COMPARE_OP(arg=0, lineno=150)
         150	POP_JUMP_IF_FALSE(arg=160, lineno=150)
         152	LOAD_GLOBAL(arg=5, lineno=151)
         154	LOAD_CONST(arg=6, lineno=151)
         156	CALL_FUNCTION(arg=1, lineno=151)
         158	RAISE_VARARGS(arg=1, lineno=151)
>        160	LOAD_CONST(arg=7, lineno=152)
         162	STORE_FAST(arg=10, lineno=152)
         164	LOAD_FAST(arg=2, lineno=153)
         166	LOAD_CONST(arg=8, lineno=153)
         168	COMPARE_OP(arg=8, lineno=153)
         170	POP_JUMP_IF_FALSE(arg=454, lineno=153)
         174	LOAD_FAST(arg=3, lineno=154)
         176	POP_JUMP_IF_FALSE(arg=296, lineno=154)
         180	LOAD_FAST(arg=7, lineno=155)
         182	LOAD_CONST(arg=2, lineno=155)
         184	COMPARE_OP(arg=2, lineno=155)
         186	POP_JUMP_IF_FALSE(arg=210, lineno=155)
         188	LOAD_FAST(arg=0, lineno=155)
         190	LOAD_FAST(arg=9, lineno=155)
         192	BINARY_SUBSCR(arg=None, lineno=155)
         194	LOAD_FAST(arg=1, lineno=155)
         196	LOAD_FAST(arg=7, lineno=155)
         198	BINARY_SUBSCR(arg=None, lineno=155)
         200	COMPARE_OP(arg=1, lineno=155)
         202	POP_JUMP_IF_FALSE(arg=210, lineno=155)
         204	LOAD_CONST(arg=9, lineno=156)
         206	STORE_FAST(arg=10, lineno=156)
         208	JUMP_FORWARD(arg=84, lineno=156)
>        210	LOAD_FAST(arg=7, lineno=157)
         212	LOAD_CONST(arg=2, lineno=157)
         214	COMPARE_OP(arg=4, lineno=157)
         216	POP_JUMP_IF_FALSE(arg=270, lineno=157)
         220	LOAD_FAST(arg=1, lineno=157)
         222	LOAD_FAST(arg=7, lineno=157)
         224	LOAD_CONST(arg=3, lineno=157)
         226	BINARY_SUBTRACT(arg=None, lineno=157)
         228	BINARY_SUBSCR(arg=None, lineno=157)
         230	LOAD_FAST(arg=0, lineno=157)
         232	LOAD_FAST(arg=9, lineno=157)
         234	BINARY_SUBSCR(arg=None, lineno=157)
         236	DUP_TOP(arg=None, lineno=157)
         238	ROT_THREE(arg=None, lineno=157)
         240	COMPARE_OP(arg=0, lineno=157)
         242	POP_JUMP_IF_FALSE(arg=260, lineno=157)
         246	LOAD_FAST(arg=1, lineno=157)
         248	LOAD_FAST(arg=7, lineno=157)
         250	BINARY_SUBSCR(arg=None, lineno=157)
         252	COMPARE_OP(arg=1, lineno=157)
         254	POP_JUMP_IF_FALSE(arg=270, lineno=157)
         258	JUMP_FORWARD(arg=4, lineno=157)
>        260	POP_TOP(arg=None, lineno=157)
         262	JUMP_FORWARD(arg=6, lineno=157)
>        264	LOAD_CONST(arg=9, lineno=158)
         266	STORE_FAST(arg=10, lineno=158)
         268	JUMP_FORWARD(arg=24, lineno=158)
>        270	LOAD_FAST(arg=0, lineno=159)
         272	LOAD_FAST(arg=9, lineno=159)
         274	BINARY_SUBSCR(arg=None, lineno=159)
         276	LOAD_FAST(arg=1, lineno=159)
         278	LOAD_FAST(arg=7, lineno=159)
         280	BINARY_SUBSCR(arg=None, lineno=159)
         282	COMPARE_OP(arg=4, lineno=159)
         284	POP_JUMP_IF_FALSE(arg=452, lineno=159)
         288	POP_TOP(arg=None, lineno=160)
         290	JUMP_ABSOLUTE(arg=642, lineno=160)
>        294	JUMP_FORWARD(arg=156, lineno=160)
>        296	LOAD_FAST(arg=7, lineno=162)
         298	LOAD_GLOBAL(arg=2, lineno=162)
         300	LOAD_FAST(arg=1, lineno=162)
         302	CALL_FUNCTION(arg=1, lineno=162)
         304	LOAD_CONST(arg=3, lineno=162)
         306	BINARY_SUBTRACT(arg=None, lineno=162)
         308	COMPARE_OP(arg=2, lineno=162)
         310	POP_JUMP_IF_FALSE(arg=338, lineno=162)
         314	LOAD_FAST(arg=1, lineno=162)
         316	LOAD_FAST(arg=7, lineno=162)
         318	BINARY_SUBSCR(arg=None, lineno=162)
         320	LOAD_FAST(arg=0, lineno=162)
         322	LOAD_FAST(arg=9, lineno=162)
         324	BINARY_SUBSCR(arg=None, lineno=162)
         326	COMPARE_OP(arg=1, lineno=162)
         328	POP_JUMP_IF_FALSE(arg=338, lineno=162)
         332	LOAD_CONST(arg=9, lineno=163)
         334	STORE_FAST(arg=10, lineno=163)
         336	JUMP_FORWARD(arg=114, lineno=163)
>        338	LOAD_FAST(arg=7, lineno=164)
         340	LOAD_GLOBAL(arg=2, lineno=164)
         342	LOAD_FAST(arg=1, lineno=164)
         344	CALL_FUNCTION(arg=1, lineno=164)
         346	LOAD_CONST(arg=3, lineno=164)
         348	BINARY_SUBTRACT(arg=None, lineno=164)
         350	COMPARE_OP(arg=0, lineno=164)
         352	POP_JUMP_IF_FALSE(arg=406, lineno=164)
         356	LOAD_FAST(arg=1, lineno=164)
         358	LOAD_FAST(arg=7, lineno=164)
         360	BINARY_SUBSCR(arg=None, lineno=164)
         362	LOAD_FAST(arg=0, lineno=164)
         364	LOAD_FAST(arg=9, lineno=164)
         366	BINARY_SUBSCR(arg=None, lineno=164)
         368	DUP_TOP(arg=None, lineno=164)
         370	ROT_THREE(arg=None, lineno=164)
         372	COMPARE_OP(arg=1, lineno=164)
         374	POP_JUMP_IF_FALSE(arg=396, lineno=164)
         378	LOAD_FAST(arg=1, lineno=164)
         380	LOAD_FAST(arg=7, lineno=164)
         382	LOAD_CONST(arg=3, lineno=164)
         384	BINARY_ADD(arg=None, lineno=164)
         386	BINARY_SUBSCR(arg=None, lineno=164)
         388	COMPARE_OP(arg=0, lineno=164)
         390	POP_JUMP_IF_FALSE(arg=406, lineno=164)
         394	JUMP_FORWARD(arg=4, lineno=164)
>        396	POP_TOP(arg=None, lineno=164)
         398	JUMP_FORWARD(arg=6, lineno=164)
>        400	LOAD_CONST(arg=9, lineno=165)
         402	STORE_FAST(arg=10, lineno=165)
         404	JUMP_FORWARD(arg=46, lineno=165)
>        406	LOAD_FAST(arg=7, lineno=166)
         408	LOAD_GLOBAL(arg=2, lineno=166)
         410	LOAD_FAST(arg=1, lineno=166)
         412	CALL_FUNCTION(arg=1, lineno=166)
         414	LOAD_CONST(arg=3, lineno=166)
         416	BINARY_SUBTRACT(arg=None, lineno=166)
         418	COMPARE_OP(arg=0, lineno=166)
         420	POP_JUMP_IF_FALSE(arg=614, lineno=166)
         424	LOAD_FAST(arg=0, lineno=166)
         426	LOAD_FAST(arg=9, lineno=166)
         428	BINARY_SUBSCR(arg=None, lineno=166)
         430	LOAD_FAST(arg=1, lineno=166)
         432	LOAD_FAST(arg=7, lineno=166)
         434	LOAD_CONST(arg=3, lineno=166)
         436	BINARY_ADD(arg=None, lineno=166)
         438	BINARY_SUBSCR(arg=None, lineno=166)
         440	COMPARE_OP(arg=5, lineno=166)
         442	POP_JUMP_IF_FALSE(arg=614, lineno=166)
         446	POP_TOP(arg=None, lineno=167)
         448	JUMP_ABSOLUTE(arg=642, lineno=167)
>        452	JUMP_FORWARD(arg=160, lineno=167)
>        454	LOAD_FAST(arg=3, lineno=169)
         456	POP_JUMP_IF_FALSE(arg=536, lineno=169)
         460	LOAD_FAST(arg=1, lineno=170)
         462	LOAD_FAST(arg=7, lineno=170)
         464	BINARY_SUBSCR(arg=None, lineno=170)
         466	LOAD_FAST(arg=2, lineno=170)
         468	BINARY_SUBTRACT(arg=None, lineno=170)
         470	LOAD_FAST(arg=0, lineno=170)
         472	LOAD_FAST(arg=9, lineno=170)
         474	BINARY_SUBSCR(arg=None, lineno=170)
         476	DUP_TOP(arg=None, lineno=170)
         478	ROT_THREE(arg=None, lineno=170)
         480	COMPARE_OP(arg=0, lineno=170)
         482	POP_JUMP_IF_FALSE(arg=500, lineno=170)
         486	LOAD_FAST(arg=1, lineno=170)
         488	LOAD_FAST(arg=7, lineno=170)
         490	BINARY_SUBSCR(arg=None, lineno=170)
         492	COMPARE_OP(arg=1, lineno=170)
         494	POP_JUMP_IF_FALSE(arg=510, lineno=170)
         498	JUMP_FORWARD(arg=4, lineno=170)
>        500	POP_TOP(arg=None, lineno=170)
         502	JUMP_FORWARD(arg=6, lineno=170)
>        504	LOAD_CONST(arg=9, lineno=171)
         506	STORE_FAST(arg=10, lineno=171)
         508	JUMP_FORWARD(arg=24, lineno=171)
>        510	LOAD_FAST(arg=0, lineno=172)
         512	LOAD_FAST(arg=9, lineno=172)
         514	BINARY_SUBSCR(arg=None, lineno=172)
         516	LOAD_FAST(arg=1, lineno=172)
         518	LOAD_FAST(arg=7, lineno=172)
         520	BINARY_SUBSCR(arg=None, lineno=172)
         522	COMPARE_OP(arg=4, lineno=172)
         524	POP_JUMP_IF_FALSE(arg=614, lineno=172)
         528	POP_TOP(arg=None, lineno=173)
         530	JUMP_ABSOLUTE(arg=642, lineno=173)
>        534	JUMP_FORWARD(arg=78, lineno=173)
>        536	LOAD_FAST(arg=1, lineno=175)
         538	LOAD_FAST(arg=7, lineno=175)
         540	BINARY_SUBSCR(arg=None, lineno=175)
         542	LOAD_FAST(arg=0, lineno=175)
         544	LOAD_FAST(arg=9, lineno=175)
         546	BINARY_SUBSCR(arg=None, lineno=175)
         548	DUP_TOP(arg=None, lineno=175)
         550	ROT_THREE(arg=None, lineno=175)
         552	COMPARE_OP(arg=1, lineno=175)
         554	POP_JUMP_IF_FALSE(arg=576, lineno=175)
         558	LOAD_FAST(arg=1, lineno=175)
         560	LOAD_FAST(arg=7, lineno=175)
         562	BINARY_SUBSCR(arg=None, lineno=175)
         564	LOAD_FAST(arg=2, lineno=175)
         566	BINARY_ADD(arg=None, lineno=175)
         568	COMPARE_OP(arg=0, lineno=175)
         570	POP_JUMP_IF_FALSE(arg=586, lineno=175)
         574	JUMP_FORWARD(arg=4, lineno=175)
>        576	POP_TOP(arg=None, lineno=175)
         578	JUMP_FORWARD(arg=6, lineno=175)
>        580	LOAD_CONST(arg=9, lineno=176)
         582	STORE_FAST(arg=10, lineno=176)
         584	JUMP_FORWARD(arg=28, lineno=176)
>        586	LOAD_FAST(arg=0, lineno=177)
         588	LOAD_FAST(arg=9, lineno=177)
         590	BINARY_SUBSCR(arg=None, lineno=177)
         592	LOAD_FAST(arg=1, lineno=177)
         594	LOAD_FAST(arg=7, lineno=177)
         596	BINARY_SUBSCR(arg=None, lineno=177)
         598	LOAD_FAST(arg=2, lineno=177)
         600	BINARY_ADD(arg=None, lineno=177)
         602	COMPARE_OP(arg=5, lineno=177)
         604	POP_JUMP_IF_FALSE(arg=614, lineno=177)
         608	POP_TOP(arg=None, lineno=178)
         610	JUMP_ABSOLUTE(arg=642, lineno=178)
>        614	LOAD_FAST(arg=10, lineno=179)
         616	POP_JUMP_IF_FALSE(arg=118, lineno=179)
         618	LOAD_FAST(arg=8, lineno=180)
         620	LOAD_CONST(arg=5, lineno=180)
         622	COMPARE_OP(arg=2, lineno=180)
         624	POP_JUMP_IF_FALSE(arg=632, lineno=180)
         628	LOAD_FAST(arg=9, lineno=181)
         630	STORE_FAST(arg=8, lineno=181)
>        632	LOAD_FAST(arg=9, lineno=182)
         634	LOAD_CONST(arg=3, lineno=182)
         636	BINARY_ADD(arg=None, lineno=182)
         638	STORE_FAST(arg=6, lineno=182)
         640	JUMP_ABSOLUTE(arg=118, lineno=182)
>        642	LOAD_FAST(arg=8, lineno=184)
         644	LOAD_CONST(arg=5, lineno=184)
         646	COMPARE_OP(arg=2, lineno=184)
         648	POP_JUMP_IF_FALSE(arg=670, lineno=184)
         652	LOAD_CONST(arg=5, lineno=185)
         654	LOAD_FAST(arg=4, lineno=185)
         656	LOAD_FAST(arg=7, lineno=185)
         658	STORE_SUBSCR(arg=None, lineno=185)
         660	LOAD_CONST(arg=5, lineno=186)
         662	LOAD_FAST(arg=5, lineno=186)
         664	LOAD_FAST(arg=7, lineno=186)
         666	STORE_SUBSCR(arg=None, lineno=186)
         668	JUMP_ABSOLUTE(arg=58, lineno=186)
>        670	LOAD_FAST(arg=8, lineno=188)
         672	LOAD_FAST(arg=4, lineno=188)
         674	LOAD_FAST(arg=7, lineno=188)
         676	STORE_SUBSCR(arg=None, lineno=188)
         678	LOAD_FAST(arg=6, lineno=189)
         680	LOAD_FAST(arg=5, lineno=189)
         682	LOAD_FAST(arg=7, lineno=189)
         684	STORE_SUBSCR(arg=None, lineno=189)
         686	JUMP_ABSOLUTE(arg=58, lineno=189)
>        688	LOAD_FAST(arg=4, lineno=191)
         690	LOAD_FAST(arg=5, lineno=191)
         692	BUILD_TUPLE(arg=2, lineno=191)
         694	RETURN_VALUE(arg=None, lineno=191)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_GLOBAL(arg=2, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$6load_global.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$6load_global.2', '$target_index8.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$10call_function.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=3, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$10call_function.4', '$12load_global.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$10call_function.4', '$14load_attr.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=CALL_FUNCTION_KW(arg=2, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$10call_function.4', '$14load_attr.6', '$const16.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=STORE_FAST(arg=4, lineno=140)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$18call_function_kw.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=LOAD_GLOBAL(arg=0, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$22load_global.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_GLOBAL(arg=2, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_attr.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_attr.10', '$26load_global.11']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_attr.10', '$26load_global.11', '$target_index28.12']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=LOAD_GLOBAL(arg=0, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_attr.10', '$30call_function.13']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=LOAD_ATTR(arg=3, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_attr.10', '$30call_function.13', '$32load_global.14']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_attr.10', '$30call_function.13', '$34load_attr.15']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=CALL_FUNCTION_KW(arg=2, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_attr.10', '$30call_function.13', '$34load_attr.15', '$const36.16']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=141)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$38call_function_kw.17']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=143)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=STORE_FAST(arg=6, lineno=143)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$const42.18']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=LOAD_GLOBAL(arg=4, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_GLOBAL(arg=2, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$46load_global.19']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$46load_global.19', '$48load_global.20']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=CALL_FUNCTION(arg=1, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$46load_global.19', '$48load_global.20', '$target_index50.21']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$46load_global.19', '$52call_function.22']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=GET_ITER(arg=None, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$54call_function.23']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=58, stack=('$56get_iter.24',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=58 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi58.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=FOR_ITER(arg=626, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi58.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=688, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi58.0', '$58for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=688 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=688, inst=LOAD_FAST(arg=4, lineno=191)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=690, inst=LOAD_FAST(arg=5, lineno=191)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$range_starts_out688.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=692, inst=BUILD_TUPLE(arg=2, lineno=191)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$range_starts_out688.0', '$range_ends_out690.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=694, inst=RETURN_VALUE(arg=None, lineno=191)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$692build_tuple.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=62 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi62.0', '$phi62.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=STORE_FAST(arg=7, lineno=144)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi62.0', '$phi62.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_FAST(arg=7, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi62.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi62.0', '$i64.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=COMPARE_OP(arg=4, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi62.0', '$i64.2', '$const66.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=100, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi62.0', '$68compare_op.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=72, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=100, stack=('$phi62.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=100 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi72.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=1, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_FAST(arg=7, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$target_index72.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$target_index72.1', '$i74.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$76binary_subscr.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$76binary_subscr.3', '$target_index78.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=LOAD_CONST(arg=3, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$76binary_subscr.3', '$target_index78.4', '$i80.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=BINARY_SUBTRACT(arg=None, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$76binary_subscr.3', '$target_index78.4', '$i80.5', '$const82.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$76binary_subscr.3', '$target_index78.4', '$84binary_subtract.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=0, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$76binary_subscr.3', '$86binary_subscr.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=100, lineno=145)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$88compare_op.9']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=('$phi72.0',), blockstack=(), npush=0), Edge(pc=100, stack=('$phi72.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=100 nstack_initial=1), State(pc_initial=92 nstack_initial=1), State(pc_initial=100 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi100.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_CONST(arg=5, lineno=148)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=STORE_FAST(arg=8, lineno=148)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0', '$const100.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=LOAD_GLOBAL(arg=4, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0', '$104load_global.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_GLOBAL(arg=2, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0', '$104load_global.2', '$to_j106.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=0, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0', '$104load_global.2', '$to_j106.3', '$108load_global.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=CALL_FUNCTION(arg=1, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0', '$104load_global.2', '$to_j106.3', '$108load_global.4', '$source_index110.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=CALL_FUNCTION(arg=2, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0', '$104load_global.2', '$to_j106.3', '$112call_function.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=GET_ITER(arg=None, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi100.0', '$114call_function.7']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=118, stack=('$phi100.0', '$116get_iter.8'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=100 nstack_initial=1), State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi92.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_GLOBAL(arg=5, lineno=146)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi92.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=146)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi92.0', '$92load_global.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=CALL_FUNCTION(arg=1, lineno=146)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi92.0', '$92load_global.1', '$const94.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=RAISE_VARARGS(arg=1, lineno=146)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi92.0', '$96call_function.3']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=100 nstack_initial=1), State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi118.0', '$phi118.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=FOR_ITER(arg=520, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi118.0', '$phi118.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=642, stack=('$phi118.0',), blockstack=(), npush=0), Edge(pc=122, stack=('$phi118.0', '$phi118.1', '$118for_iter.3'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=642 nstack_initial=1), State(pc_initial=122 nstack_initial=3)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi642.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=642, inst=LOAD_FAST(arg=8, lineno=184)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi642.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=644, inst=LOAD_CONST(arg=5, lineno=184)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi642.0', '$from_j642.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=646, inst=COMPARE_OP(arg=2, lineno=184)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi642.0', '$from_j642.1', '$const644.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=648, inst=POP_JUMP_IF_FALSE(arg=670, lineno=184)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi642.0', '$646compare_op.3']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=652, stack=('$phi642.0',), blockstack=(), npush=0), Edge(pc=670, stack=('$phi642.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=3), State(pc_initial=652 nstack_initial=1), State(pc_initial=670 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi122.0', '$phi122.1', '$phi122.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=STORE_FAST(arg=9, lineno=149)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi122.0', '$phi122.1', '$phi122.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=LOAD_FAST(arg=9, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi122.0', '$phi122.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=LOAD_CONST(arg=2, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi122.0', '$phi122.1', '$j124.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=COMPARE_OP(arg=4, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi122.0', '$phi122.1', '$j124.3', '$const126.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=POP_JUMP_IF_FALSE(arg=160, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi122.0', '$phi122.1', '$128compare_op.5']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=132, stack=('$phi122.0', '$phi122.1'), blockstack=(), npush=0), Edge(pc=160, stack=('$phi122.0', '$phi122.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=652 nstack_initial=1), State(pc_initial=670 nstack_initial=1), State(pc_initial=132 nstack_initial=2), State(pc_initial=160 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi652.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=652, inst=LOAD_CONST(arg=5, lineno=185)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=654, inst=LOAD_FAST(arg=4, lineno=185)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0', '$const652.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=185)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0', '$const652.1', '$range_starts_out654.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=658, inst=STORE_SUBSCR(arg=None, lineno=185)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0', '$const652.1', '$range_starts_out654.2', '$i656.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=660, inst=LOAD_CONST(arg=5, lineno=186)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=662, inst=LOAD_FAST(arg=5, lineno=186)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0', '$const660.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=664, inst=LOAD_FAST(arg=7, lineno=186)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0', '$const660.4', '$range_ends_out662.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=666, inst=STORE_SUBSCR(arg=None, lineno=186)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0', '$const660.4', '$range_ends_out662.5', '$i664.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=668, inst=JUMP_ABSOLUTE(arg=58, lineno=186)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi652.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=58, stack=('$phi652.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=670 nstack_initial=1), State(pc_initial=132 nstack_initial=2), State(pc_initial=160 nstack_initial=2), State(pc_initial=58 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi670.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=670, inst=LOAD_FAST(arg=8, lineno=188)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=672, inst=LOAD_FAST(arg=4, lineno=188)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0', '$from_j670.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=674, inst=LOAD_FAST(arg=7, lineno=188)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0', '$from_j670.1', '$range_starts_out672.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=676, inst=STORE_SUBSCR(arg=None, lineno=188)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0', '$from_j670.1', '$range_starts_out672.2', '$i674.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=678, inst=LOAD_FAST(arg=6, lineno=189)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=680, inst=LOAD_FAST(arg=5, lineno=189)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0', '$to_j678.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=682, inst=LOAD_FAST(arg=7, lineno=189)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0', '$to_j678.4', '$range_ends_out680.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=684, inst=STORE_SUBSCR(arg=None, lineno=189)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0', '$to_j678.4', '$range_ends_out680.5', '$i682.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=686, inst=JUMP_ABSOLUTE(arg=58, lineno=189)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi670.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=58, stack=('$phi670.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=132 nstack_initial=2), State(pc_initial=160 nstack_initial=2), State(pc_initial=58 nstack_initial=1), State(pc_initial=58 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi132.0', '$phi132.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_FAST(arg=0, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=LOAD_FAST(arg=9, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$source_index132.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=BINARY_SUBSCR(arg=None, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$source_index132.2', '$j134.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$136binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_FAST(arg=9, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$136binary_subscr.4', '$source_index138.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=LOAD_CONST(arg=3, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$136binary_subscr.4', '$source_index138.5', '$j140.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=BINARY_SUBTRACT(arg=None, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$136binary_subscr.4', '$source_index138.5', '$j140.6', '$const142.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=BINARY_SUBSCR(arg=None, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$136binary_subscr.4', '$source_index138.5', '$144binary_subtract.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=COMPARE_OP(arg=0, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$136binary_subscr.4', '$146binary_subscr.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=POP_JUMP_IF_FALSE(arg=160, lineno=150)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi132.0', '$phi132.1', '$148compare_op.10']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=152, stack=('$phi132.0', '$phi132.1'), blockstack=(), npush=0), Edge(pc=160, stack=('$phi132.0', '$phi132.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=160 nstack_initial=2), State(pc_initial=58 nstack_initial=1), State(pc_initial=58 nstack_initial=1), State(pc_initial=152 nstack_initial=2), State(pc_initial=160 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi160.0', '$phi160.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=LOAD_CONST(arg=7, lineno=152)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi160.0', '$phi160.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=STORE_FAST(arg=10, lineno=152)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi160.0', '$phi160.1', '$const160.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=2, lineno=153)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi160.0', '$phi160.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=LOAD_CONST(arg=8, lineno=153)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi160.0', '$phi160.1', '$target_freq164.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=COMPARE_OP(arg=8, lineno=153)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi160.0', '$phi160.1', '$target_freq164.3', '$const166.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=454, lineno=153)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi160.0', '$phi160.1', '$168compare_op.5']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=174, stack=('$phi160.0', '$phi160.1'), blockstack=(), npush=0), Edge(pc=454, stack=('$phi160.0', '$phi160.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=58 nstack_initial=1), State(pc_initial=58 nstack_initial=1), State(pc_initial=152 nstack_initial=2), State(pc_initial=160 nstack_initial=2), State(pc_initial=174 nstack_initial=2), State(pc_initial=454 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=58 nstack_initial=1), State(pc_initial=152 nstack_initial=2), State(pc_initial=160 nstack_initial=2), State(pc_initial=174 nstack_initial=2), State(pc_initial=454 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=152 nstack_initial=2), State(pc_initial=160 nstack_initial=2), State(pc_initial=174 nstack_initial=2), State(pc_initial=454 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi152.0', '$phi152.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=LOAD_GLOBAL(arg=5, lineno=151)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi152.0', '$phi152.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_CONST(arg=6, lineno=151)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi152.0', '$phi152.1', '$152load_global.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=CALL_FUNCTION(arg=1, lineno=151)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi152.0', '$phi152.1', '$152load_global.2', '$const154.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=RAISE_VARARGS(arg=1, lineno=151)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi152.0', '$phi152.1', '$156call_function.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=160 nstack_initial=2), State(pc_initial=174 nstack_initial=2), State(pc_initial=454 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=174 nstack_initial=2), State(pc_initial=454 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi174.0', '$phi174.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=LOAD_FAST(arg=3, lineno=154)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi174.0', '$phi174.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=POP_JUMP_IF_FALSE(arg=296, lineno=154)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi174.0', '$phi174.1', '$before174.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=180, stack=('$phi174.0', '$phi174.1'), blockstack=(), npush=0), Edge(pc=296, stack=('$phi174.0', '$phi174.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=454 nstack_initial=2), State(pc_initial=180 nstack_initial=2), State(pc_initial=296 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi454.0', '$phi454.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=454, inst=LOAD_FAST(arg=3, lineno=169)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi454.0', '$phi454.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=456, inst=POP_JUMP_IF_FALSE(arg=536, lineno=169)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi454.0', '$phi454.1', '$before454.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=460, stack=('$phi454.0', '$phi454.1'), blockstack=(), npush=0), Edge(pc=536, stack=('$phi454.0', '$phi454.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=180 nstack_initial=2), State(pc_initial=296 nstack_initial=2), State(pc_initial=460 nstack_initial=2), State(pc_initial=536 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi180.0', '$phi180.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=LOAD_FAST(arg=7, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi180.0', '$phi180.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=LOAD_CONST(arg=2, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi180.0', '$phi180.1', '$i180.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=COMPARE_OP(arg=2, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi180.0', '$phi180.1', '$i180.2', '$const182.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=POP_JUMP_IF_FALSE(arg=210, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi180.0', '$phi180.1', '$184compare_op.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=188, stack=('$phi180.0', '$phi180.1'), blockstack=(), npush=0), Edge(pc=210, stack=('$phi180.0', '$phi180.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=296 nstack_initial=2), State(pc_initial=460 nstack_initial=2), State(pc_initial=536 nstack_initial=2), State(pc_initial=188 nstack_initial=2), State(pc_initial=210 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi296.0', '$phi296.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=298, inst=LOAD_GLOBAL(arg=2, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1', '$i296.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=300, inst=LOAD_FAST(arg=1, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1', '$i296.2', '$298load_global.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=302, inst=CALL_FUNCTION(arg=1, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1', '$i296.2', '$298load_global.3', '$target_index300.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=304, inst=LOAD_CONST(arg=3, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1', '$i296.2', '$302call_function.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=306, inst=BINARY_SUBTRACT(arg=None, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1', '$i296.2', '$302call_function.5', '$const304.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=308, inst=COMPARE_OP(arg=2, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1', '$i296.2', '$306binary_subtract.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=310, inst=POP_JUMP_IF_FALSE(arg=338, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi296.0', '$phi296.1', '$308compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=314, stack=('$phi296.0', '$phi296.1'), blockstack=(), npush=0), Edge(pc=338, stack=('$phi296.0', '$phi296.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=536 nstack_initial=2), State(pc_initial=188 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi460.0', '$phi460.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=460, inst=LOAD_FAST(arg=1, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=462, inst=LOAD_FAST(arg=7, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$target_index460.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=464, inst=BINARY_SUBSCR(arg=None, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$target_index460.2', '$i462.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=466, inst=LOAD_FAST(arg=2, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$464binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=468, inst=BINARY_SUBTRACT(arg=None, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$464binary_subscr.4', '$target_freq466.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=470, inst=LOAD_FAST(arg=0, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$468binary_subtract.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=472, inst=LOAD_FAST(arg=9, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$468binary_subtract.6', '$source_index470.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=474, inst=BINARY_SUBSCR(arg=None, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$468binary_subtract.6', '$source_index470.7', '$j472.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=476, inst=DUP_TOP(arg=None, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$468binary_subtract.6', '$474binary_subscr.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=478, inst=ROT_THREE(arg=None, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$468binary_subtract.6', '$474binary_subscr.9', '$476dup_top.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=480, inst=COMPARE_OP(arg=0, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$476dup_top.10', '$468binary_subtract.6', '$474binary_subscr.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=482, inst=POP_JUMP_IF_FALSE(arg=500, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi460.0', '$phi460.1', '$476dup_top.10', '$480compare_op.11']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=486, stack=('$phi460.0', '$phi460.1', '$476dup_top.10'), blockstack=(), npush=0), Edge(pc=500, stack=('$phi460.0', '$phi460.1', '$476dup_top.10'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=536 nstack_initial=2), State(pc_initial=188 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=486 nstack_initial=3), State(pc_initial=500 nstack_initial=3)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi536.0', '$phi536.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=536, inst=LOAD_FAST(arg=1, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$target_index536.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=540, inst=BINARY_SUBSCR(arg=None, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$target_index536.2', '$i538.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=542, inst=LOAD_FAST(arg=0, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$540binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=544, inst=LOAD_FAST(arg=9, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$540binary_subscr.4', '$source_index542.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=546, inst=BINARY_SUBSCR(arg=None, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$540binary_subscr.4', '$source_index542.5', '$j544.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=548, inst=DUP_TOP(arg=None, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$540binary_subscr.4', '$546binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=550, inst=ROT_THREE(arg=None, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$540binary_subscr.4', '$546binary_subscr.7', '$548dup_top.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=552, inst=COMPARE_OP(arg=1, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$548dup_top.8', '$540binary_subscr.4', '$546binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=554, inst=POP_JUMP_IF_FALSE(arg=576, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi536.0', '$phi536.1', '$548dup_top.8', '$552compare_op.9']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=558, stack=('$phi536.0', '$phi536.1', '$548dup_top.8'), blockstack=(), npush=0), Edge(pc=576, stack=('$phi536.0', '$phi536.1', '$548dup_top.8'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=188 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=486 nstack_initial=3), State(pc_initial=500 nstack_initial=3), State(pc_initial=558 nstack_initial=3), State(pc_initial=576 nstack_initial=3)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi188.0', '$phi188.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=188, inst=LOAD_FAST(arg=0, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=190, inst=LOAD_FAST(arg=9, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1', '$source_index188.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=192, inst=BINARY_SUBSCR(arg=None, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1', '$source_index188.2', '$j190.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=194, inst=LOAD_FAST(arg=1, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1', '$192binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=196, inst=LOAD_FAST(arg=7, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1', '$192binary_subscr.4', '$target_index194.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1', '$192binary_subscr.4', '$target_index194.5', '$i196.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=200, inst=COMPARE_OP(arg=1, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1', '$192binary_subscr.4', '$198binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=202, inst=POP_JUMP_IF_FALSE(arg=210, lineno=155)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi188.0', '$phi188.1', '$200compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=204, stack=('$phi188.0', '$phi188.1'), blockstack=(), npush=0), Edge(pc=210, stack=('$phi188.0', '$phi188.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=210 nstack_initial=2), State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=486 nstack_initial=3), State(pc_initial=500 nstack_initial=3), State(pc_initial=558 nstack_initial=3), State(pc_initial=576 nstack_initial=3), State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi210.0', '$phi210.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=210, inst=LOAD_FAST(arg=7, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi210.0', '$phi210.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=212, inst=LOAD_CONST(arg=2, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi210.0', '$phi210.1', '$i210.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=214, inst=COMPARE_OP(arg=4, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi210.0', '$phi210.1', '$i210.2', '$const212.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=216, inst=POP_JUMP_IF_FALSE(arg=270, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi210.0', '$phi210.1', '$214compare_op.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=220, stack=('$phi210.0', '$phi210.1'), blockstack=(), npush=0), Edge(pc=270, stack=('$phi210.0', '$phi210.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=314 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=486 nstack_initial=3), State(pc_initial=500 nstack_initial=3), State(pc_initial=558 nstack_initial=3), State(pc_initial=576 nstack_initial=3), State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi314.0', '$phi314.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=314, inst=LOAD_FAST(arg=1, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=316, inst=LOAD_FAST(arg=7, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1', '$target_index314.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1', '$target_index314.2', '$i316.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=320, inst=LOAD_FAST(arg=0, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1', '$318binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=322, inst=LOAD_FAST(arg=9, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1', '$318binary_subscr.4', '$source_index320.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=324, inst=BINARY_SUBSCR(arg=None, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1', '$318binary_subscr.4', '$source_index320.5', '$j322.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=326, inst=COMPARE_OP(arg=1, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1', '$318binary_subscr.4', '$324binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=328, inst=POP_JUMP_IF_FALSE(arg=338, lineno=162)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi314.0', '$phi314.1', '$326compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=332, stack=('$phi314.0', '$phi314.1'), blockstack=(), npush=0), Edge(pc=338, stack=('$phi314.0', '$phi314.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=338 nstack_initial=2), State(pc_initial=486 nstack_initial=3), State(pc_initial=500 nstack_initial=3), State(pc_initial=558 nstack_initial=3), State(pc_initial=576 nstack_initial=3), State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi338.0', '$phi338.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=338, inst=LOAD_FAST(arg=7, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=340, inst=LOAD_GLOBAL(arg=2, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1', '$i338.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=342, inst=LOAD_FAST(arg=1, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1', '$i338.2', '$340load_global.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=344, inst=CALL_FUNCTION(arg=1, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1', '$i338.2', '$340load_global.3', '$target_index342.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=346, inst=LOAD_CONST(arg=3, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1', '$i338.2', '$344call_function.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=348, inst=BINARY_SUBTRACT(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1', '$i338.2', '$344call_function.5', '$const346.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=350, inst=COMPARE_OP(arg=0, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1', '$i338.2', '$348binary_subtract.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=352, inst=POP_JUMP_IF_FALSE(arg=406, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi338.0', '$phi338.1', '$350compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=356, stack=('$phi338.0', '$phi338.1'), blockstack=(), npush=0), Edge(pc=406, stack=('$phi338.0', '$phi338.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=486 nstack_initial=3), State(pc_initial=500 nstack_initial=3), State(pc_initial=558 nstack_initial=3), State(pc_initial=576 nstack_initial=3), State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi486.0', '$phi486.1', '$phi486.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=486, inst=LOAD_FAST(arg=1, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi486.0', '$phi486.1', '$phi486.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=488, inst=LOAD_FAST(arg=7, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi486.0', '$phi486.1', '$phi486.2', '$target_index486.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=490, inst=BINARY_SUBSCR(arg=None, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi486.0', '$phi486.1', '$phi486.2', '$target_index486.3', '$i488.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=492, inst=COMPARE_OP(arg=1, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi486.0', '$phi486.1', '$phi486.2', '$490binary_subscr.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=494, inst=POP_JUMP_IF_FALSE(arg=510, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi486.0', '$phi486.1', '$492compare_op.6']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=498, stack=('$phi486.0', '$phi486.1'), blockstack=(), npush=0), Edge(pc=510, stack=('$phi486.0', '$phi486.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=500 nstack_initial=3), State(pc_initial=558 nstack_initial=3), State(pc_initial=576 nstack_initial=3), State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi500.0', '$phi500.1', '$phi500.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=500, inst=POP_TOP(arg=None, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi500.0', '$phi500.1', '$phi500.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=502, inst=JUMP_FORWARD(arg=6, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi500.0', '$phi500.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=510, stack=('$phi500.0', '$phi500.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=558 nstack_initial=3), State(pc_initial=576 nstack_initial=3), State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi558.0', '$phi558.1', '$phi558.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=558, inst=LOAD_FAST(arg=1, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi558.0', '$phi558.1', '$phi558.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=560, inst=LOAD_FAST(arg=7, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi558.0', '$phi558.1', '$phi558.2', '$target_index558.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=562, inst=BINARY_SUBSCR(arg=None, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi558.0', '$phi558.1', '$phi558.2', '$target_index558.3', '$i560.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=564, inst=LOAD_FAST(arg=2, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi558.0', '$phi558.1', '$phi558.2', '$562binary_subscr.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=566, inst=BINARY_ADD(arg=None, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi558.0', '$phi558.1', '$phi558.2', '$562binary_subscr.5', '$target_freq564.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=568, inst=COMPARE_OP(arg=0, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi558.0', '$phi558.1', '$phi558.2', '$566binary_add.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=570, inst=POP_JUMP_IF_FALSE(arg=586, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi558.0', '$phi558.1', '$568compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=574, stack=('$phi558.0', '$phi558.1'), blockstack=(), npush=0), Edge(pc=586, stack=('$phi558.0', '$phi558.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=576 nstack_initial=3), State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi576.0', '$phi576.1', '$phi576.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=576, inst=POP_TOP(arg=None, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi576.0', '$phi576.1', '$phi576.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=578, inst=JUMP_FORWARD(arg=6, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi576.0', '$phi576.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=586, stack=('$phi576.0', '$phi576.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=204 nstack_initial=2), State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi204.0', '$phi204.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=204, inst=LOAD_CONST(arg=9, lineno=156)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi204.0', '$phi204.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=206, inst=STORE_FAST(arg=10, lineno=156)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi204.0', '$phi204.1', '$const204.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=208, inst=JUMP_FORWARD(arg=84, lineno=156)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi204.0', '$phi204.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=294, stack=('$phi204.0', '$phi204.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=210 nstack_initial=2), State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=220 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi220.0', '$phi220.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=220, inst=LOAD_FAST(arg=1, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=222, inst=LOAD_FAST(arg=7, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$target_index220.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=224, inst=LOAD_CONST(arg=3, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$target_index220.2', '$i222.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$target_index220.2', '$i222.3', '$const224.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=228, inst=BINARY_SUBSCR(arg=None, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$target_index220.2', '$226binary_subtract.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=230, inst=LOAD_FAST(arg=0, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$228binary_subscr.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$228binary_subscr.6', '$source_index230.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=234, inst=BINARY_SUBSCR(arg=None, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$228binary_subscr.6', '$source_index230.7', '$j232.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=236, inst=DUP_TOP(arg=None, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$228binary_subscr.6', '$234binary_subscr.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=238, inst=ROT_THREE(arg=None, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$228binary_subscr.6', '$234binary_subscr.9', '$236dup_top.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=240, inst=COMPARE_OP(arg=0, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$236dup_top.10', '$228binary_subscr.6', '$234binary_subscr.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=242, inst=POP_JUMP_IF_FALSE(arg=260, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi220.0', '$phi220.1', '$236dup_top.10', '$240compare_op.11']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=246, stack=('$phi220.0', '$phi220.1', '$236dup_top.10'), blockstack=(), npush=0), Edge(pc=260, stack=('$phi220.0', '$phi220.1', '$236dup_top.10'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=270 nstack_initial=2), State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi270.0', '$phi270.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=270, inst=LOAD_FAST(arg=0, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=272, inst=LOAD_FAST(arg=9, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1', '$source_index270.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1', '$source_index270.2', '$j272.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=276, inst=LOAD_FAST(arg=1, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1', '$274binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=278, inst=LOAD_FAST(arg=7, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1', '$274binary_subscr.4', '$target_index276.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=280, inst=BINARY_SUBSCR(arg=None, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1', '$274binary_subscr.4', '$target_index276.5', '$i278.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=282, inst=COMPARE_OP(arg=4, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1', '$274binary_subscr.4', '$280binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=284, inst=POP_JUMP_IF_FALSE(arg=452, lineno=159)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi270.0', '$phi270.1', '$282compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=288, stack=('$phi270.0', '$phi270.1'), blockstack=(), npush=0), Edge(pc=452, stack=('$phi270.0', '$phi270.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=332 nstack_initial=2), State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi332.0', '$phi332.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=332, inst=LOAD_CONST(arg=9, lineno=163)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi332.0', '$phi332.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=334, inst=STORE_FAST(arg=10, lineno=163)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi332.0', '$phi332.1', '$const332.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=336, inst=JUMP_FORWARD(arg=114, lineno=163)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi332.0', '$phi332.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=452, stack=('$phi332.0', '$phi332.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=338 nstack_initial=2), State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=356 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi356.0', '$phi356.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=356, inst=LOAD_FAST(arg=1, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=358, inst=LOAD_FAST(arg=7, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$target_index356.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=360, inst=BINARY_SUBSCR(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$target_index356.2', '$i358.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=362, inst=LOAD_FAST(arg=0, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$360binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=364, inst=LOAD_FAST(arg=9, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$360binary_subscr.4', '$source_index362.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=366, inst=BINARY_SUBSCR(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$360binary_subscr.4', '$source_index362.5', '$j364.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=368, inst=DUP_TOP(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$360binary_subscr.4', '$366binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=370, inst=ROT_THREE(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$360binary_subscr.4', '$366binary_subscr.7', '$368dup_top.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=372, inst=COMPARE_OP(arg=1, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$368dup_top.8', '$360binary_subscr.4', '$366binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=374, inst=POP_JUMP_IF_FALSE(arg=396, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi356.0', '$phi356.1', '$368dup_top.8', '$372compare_op.9']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=378, stack=('$phi356.0', '$phi356.1', '$368dup_top.8'), blockstack=(), npush=0), Edge(pc=396, stack=('$phi356.0', '$phi356.1', '$368dup_top.8'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=406 nstack_initial=2), State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi406.0', '$phi406.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=406, inst=LOAD_FAST(arg=7, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=408, inst=LOAD_GLOBAL(arg=2, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1', '$i406.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=410, inst=LOAD_FAST(arg=1, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1', '$i406.2', '$408load_global.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=412, inst=CALL_FUNCTION(arg=1, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1', '$i406.2', '$408load_global.3', '$target_index410.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=414, inst=LOAD_CONST(arg=3, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1', '$i406.2', '$412call_function.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=416, inst=BINARY_SUBTRACT(arg=None, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1', '$i406.2', '$412call_function.5', '$const414.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=418, inst=COMPARE_OP(arg=0, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1', '$i406.2', '$416binary_subtract.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=420, inst=POP_JUMP_IF_FALSE(arg=614, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi406.0', '$phi406.1', '$418compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=424, stack=('$phi406.0', '$phi406.1'), blockstack=(), npush=0), Edge(pc=614, stack=('$phi406.0', '$phi406.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=498 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi498.0', '$phi498.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=498, inst=JUMP_FORWARD(arg=4, lineno=170)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi498.0', '$phi498.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=504, stack=('$phi498.0', '$phi498.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=510 nstack_initial=2), State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi510.0', '$phi510.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=510, inst=LOAD_FAST(arg=0, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=512, inst=LOAD_FAST(arg=9, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1', '$source_index510.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=514, inst=BINARY_SUBSCR(arg=None, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1', '$source_index510.2', '$j512.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=516, inst=LOAD_FAST(arg=1, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1', '$514binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=518, inst=LOAD_FAST(arg=7, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1', '$514binary_subscr.4', '$target_index516.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=520, inst=BINARY_SUBSCR(arg=None, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1', '$514binary_subscr.4', '$target_index516.5', '$i518.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=522, inst=COMPARE_OP(arg=4, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1', '$514binary_subscr.4', '$520binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=524, inst=POP_JUMP_IF_FALSE(arg=614, lineno=172)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi510.0', '$phi510.1', '$522compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=528, stack=('$phi510.0', '$phi510.1'), blockstack=(), npush=0), Edge(pc=614, stack=('$phi510.0', '$phi510.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=510 nstack_initial=2), State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=574 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi574.0', '$phi574.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=574, inst=JUMP_FORWARD(arg=4, lineno=175)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi574.0', '$phi574.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=580, stack=('$phi574.0', '$phi574.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=586 nstack_initial=2), State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi586.0', '$phi586.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=586, inst=LOAD_FAST(arg=0, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=588, inst=LOAD_FAST(arg=9, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$source_index586.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=590, inst=BINARY_SUBSCR(arg=None, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$source_index586.2', '$j588.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=592, inst=LOAD_FAST(arg=1, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$590binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$590binary_subscr.4', '$target_index592.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=596, inst=BINARY_SUBSCR(arg=None, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$590binary_subscr.4', '$target_index592.5', '$i594.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=598, inst=LOAD_FAST(arg=2, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$590binary_subscr.4', '$596binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=600, inst=BINARY_ADD(arg=None, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$590binary_subscr.4', '$596binary_subscr.7', '$target_freq598.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=602, inst=COMPARE_OP(arg=5, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$590binary_subscr.4', '$600binary_add.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=604, inst=POP_JUMP_IF_FALSE(arg=614, lineno=177)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi586.0', '$phi586.1', '$602compare_op.10']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=608, stack=('$phi586.0', '$phi586.1'), blockstack=(), npush=0), Edge(pc=614, stack=('$phi586.0', '$phi586.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=586 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=294 nstack_initial=2), State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi294.0', '$phi294.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=294, inst=JUMP_FORWARD(arg=156, lineno=160)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi294.0', '$phi294.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=452, stack=('$phi294.0', '$phi294.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=246 nstack_initial=3), State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi246.0', '$phi246.1', '$phi246.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=246, inst=LOAD_FAST(arg=1, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi246.0', '$phi246.1', '$phi246.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi246.0', '$phi246.1', '$phi246.2', '$target_index246.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi246.0', '$phi246.1', '$phi246.2', '$target_index246.3', '$i248.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=252, inst=COMPARE_OP(arg=1, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi246.0', '$phi246.1', '$phi246.2', '$250binary_subscr.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=254, inst=POP_JUMP_IF_FALSE(arg=270, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi246.0', '$phi246.1', '$252compare_op.6']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=258, stack=('$phi246.0', '$phi246.1'), blockstack=(), npush=0), Edge(pc=270, stack=('$phi246.0', '$phi246.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=260 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi260.0', '$phi260.1', '$phi260.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=260, inst=POP_TOP(arg=None, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi260.0', '$phi260.1', '$phi260.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=262, inst=JUMP_FORWARD(arg=6, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi260.0', '$phi260.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=270, stack=('$phi260.0', '$phi260.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi288.0', '$phi288.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=288, inst=POP_TOP(arg=None, lineno=160)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi288.0', '$phi288.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=290, inst=JUMP_ABSOLUTE(arg=642, lineno=160)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi288.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=642, stack=('$phi288.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=452 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi452.0', '$phi452.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=452, inst=JUMP_FORWARD(arg=160, lineno=167)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi452.0', '$phi452.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=614, stack=('$phi452.0', '$phi452.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=452 nstack_initial=2), State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=378 nstack_initial=3), State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi378.0', '$phi378.1', '$phi378.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=378, inst=LOAD_FAST(arg=1, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi378.0', '$phi378.1', '$phi378.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=380, inst=LOAD_FAST(arg=7, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi378.0', '$phi378.1', '$phi378.2', '$target_index378.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=382, inst=LOAD_CONST(arg=3, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi378.0', '$phi378.1', '$phi378.2', '$target_index378.3', '$i380.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=384, inst=BINARY_ADD(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi378.0', '$phi378.1', '$phi378.2', '$target_index378.3', '$i380.4', '$const382.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=386, inst=BINARY_SUBSCR(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi378.0', '$phi378.1', '$phi378.2', '$target_index378.3', '$384binary_add.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=388, inst=COMPARE_OP(arg=0, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi378.0', '$phi378.1', '$phi378.2', '$386binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=390, inst=POP_JUMP_IF_FALSE(arg=406, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi378.0', '$phi378.1', '$388compare_op.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=394, stack=('$phi378.0', '$phi378.1'), blockstack=(), npush=0), Edge(pc=406, stack=('$phi378.0', '$phi378.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=396 nstack_initial=3), State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi396.0', '$phi396.1', '$phi396.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=396, inst=POP_TOP(arg=None, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi396.0', '$phi396.1', '$phi396.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=398, inst=JUMP_FORWARD(arg=6, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi396.0', '$phi396.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=406, stack=('$phi396.0', '$phi396.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=424 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi424.0', '$phi424.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=424, inst=LOAD_FAST(arg=0, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=426, inst=LOAD_FAST(arg=9, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$source_index424.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=428, inst=BINARY_SUBSCR(arg=None, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$source_index424.2', '$j426.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=430, inst=LOAD_FAST(arg=1, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$428binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=432, inst=LOAD_FAST(arg=7, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$428binary_subscr.4', '$target_index430.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=434, inst=LOAD_CONST(arg=3, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$428binary_subscr.4', '$target_index430.5', '$i432.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=436, inst=BINARY_ADD(arg=None, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$428binary_subscr.4', '$target_index430.5', '$i432.6', '$const434.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=438, inst=BINARY_SUBSCR(arg=None, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$428binary_subscr.4', '$target_index430.5', '$436binary_add.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=440, inst=COMPARE_OP(arg=5, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$428binary_subscr.4', '$438binary_subscr.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=442, inst=POP_JUMP_IF_FALSE(arg=614, lineno=166)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi424.0', '$phi424.1', '$440compare_op.10']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=446, stack=('$phi424.0', '$phi424.1'), blockstack=(), npush=0), Edge(pc=614, stack=('$phi424.0', '$phi424.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=614 nstack_initial=2), State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi614.0', '$phi614.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=614, inst=LOAD_FAST(arg=10, lineno=179)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi614.0', '$phi614.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=616, inst=POP_JUMP_IF_FALSE(arg=118, lineno=179)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi614.0', '$phi614.1', '$found614.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=618, stack=('$phi614.0', '$phi614.1'), blockstack=(), npush=0), Edge(pc=118, stack=('$phi614.0', '$phi614.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=504 nstack_initial=2), State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi504.0', '$phi504.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=504, inst=LOAD_CONST(arg=9, lineno=171)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi504.0', '$phi504.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=506, inst=STORE_FAST(arg=10, lineno=171)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi504.0', '$phi504.1', '$const504.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=508, inst=JUMP_FORWARD(arg=24, lineno=171)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi504.0', '$phi504.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=534, stack=('$phi504.0', '$phi504.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=528 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi528.0', '$phi528.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=528, inst=POP_TOP(arg=None, lineno=173)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi528.0', '$phi528.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=530, inst=JUMP_ABSOLUTE(arg=642, lineno=173)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi528.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=642, stack=('$phi528.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=614 nstack_initial=2), State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=580 nstack_initial=2), State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi580.0', '$phi580.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=580, inst=LOAD_CONST(arg=9, lineno=176)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi580.0', '$phi580.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=582, inst=STORE_FAST(arg=10, lineno=176)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi580.0', '$phi580.1', '$const580.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=584, inst=JUMP_FORWARD(arg=28, lineno=176)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi580.0', '$phi580.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=614, stack=('$phi580.0', '$phi580.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=608 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi608.0', '$phi608.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=608, inst=POP_TOP(arg=None, lineno=178)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi608.0', '$phi608.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=610, inst=JUMP_ABSOLUTE(arg=642, lineno=178)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi608.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=642, stack=('$phi608.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=614 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=452 nstack_initial=2), State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=258 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi258.0', '$phi258.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=258, inst=JUMP_FORWARD(arg=4, lineno=157)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi258.0', '$phi258.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=264, stack=('$phi258.0', '$phi258.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=270 nstack_initial=2), State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=270 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=614 nstack_initial=2), State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=394 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi394.0', '$phi394.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=394, inst=JUMP_FORWARD(arg=4, lineno=164)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi394.0', '$phi394.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=400, stack=('$phi394.0', '$phi394.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=406 nstack_initial=2), State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=406 nstack_initial=2), State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=446 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi446.0', '$phi446.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=446, inst=POP_TOP(arg=None, lineno=167)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi446.0', '$phi446.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=448, inst=JUMP_ABSOLUTE(arg=642, lineno=167)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi446.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=642, stack=('$phi446.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=614 nstack_initial=2), State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=618 nstack_initial=2), State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi618.0', '$phi618.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=618, inst=LOAD_FAST(arg=8, lineno=180)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi618.0', '$phi618.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=620, inst=LOAD_CONST(arg=5, lineno=180)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi618.0', '$phi618.1', '$from_j618.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=622, inst=COMPARE_OP(arg=2, lineno=180)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi618.0', '$phi618.1', '$from_j618.2', '$const620.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=624, inst=POP_JUMP_IF_FALSE(arg=632, lineno=180)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi618.0', '$phi618.1', '$622compare_op.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=628, stack=('$phi618.0', '$phi618.1'), blockstack=(), npush=0), Edge(pc=632, stack=('$phi618.0', '$phi618.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=118 nstack_initial=2), State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=534 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi534.0', '$phi534.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=534, inst=JUMP_FORWARD(arg=78, lineno=173)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi534.0', '$phi534.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=614, stack=('$phi534.0', '$phi534.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=642 nstack_initial=1), State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=614 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=642 nstack_initial=1), State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=264 nstack_initial=2), State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi264.0', '$phi264.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=264, inst=LOAD_CONST(arg=9, lineno=158)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi264.0', '$phi264.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=266, inst=STORE_FAST(arg=10, lineno=158)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi264.0', '$phi264.1', '$const264.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=268, inst=JUMP_FORWARD(arg=24, lineno=158)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi264.0', '$phi264.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=294, stack=('$phi264.0', '$phi264.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=294 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi400.0', '$phi400.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=400, inst=LOAD_CONST(arg=9, lineno=165)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi400.0', '$phi400.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=402, inst=STORE_FAST(arg=10, lineno=165)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi400.0', '$phi400.1', '$const400.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=404, inst=JUMP_FORWARD(arg=46, lineno=165)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi400.0', '$phi400.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=452, stack=('$phi400.0', '$phi400.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=642 nstack_initial=1), State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=452 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=628 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=452 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi628.0', '$phi628.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=628, inst=LOAD_FAST(arg=9, lineno=181)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi628.0', '$phi628.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=630, inst=STORE_FAST(arg=8, lineno=181)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi628.0', '$phi628.1', '$j628.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=632, stack=('$phi628.0', '$phi628.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=632 nstack_initial=2), State(pc_initial=614 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=632 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi632.0', '$phi632.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=632, inst=LOAD_FAST(arg=9, lineno=182)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi632.0', '$phi632.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=634, inst=LOAD_CONST(arg=3, lineno=182)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi632.0', '$phi632.1', '$j632.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=636, inst=BINARY_ADD(arg=None, lineno=182)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi632.0', '$phi632.1', '$j632.2', '$const634.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=638, inst=STORE_FAST(arg=6, lineno=182)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi632.0', '$phi632.1', '$636binary_add.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=640, inst=JUMP_ABSOLUTE(arg=118, lineno=182)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi632.0', '$phi632.1']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=118, stack=('$phi632.0', '$phi632.1'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=614 nstack_initial=2), State(pc_initial=294 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=294 nstack_initial=2), State(pc_initial=452 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=452 nstack_initial=2), State(pc_initial=632 nstack_initial=2), State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=632 nstack_initial=2), State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=118 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=1): {'$phi58.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=72 nstack_initial=1): set(),
             State(pc_initial=92 nstack_initial=1): set(),
             State(pc_initial=100 nstack_initial=1): set(),
             State(pc_initial=118 nstack_initial=2): {'$phi118.1'},
             State(pc_initial=122 nstack_initial=3): {'$phi122.2'},
             State(pc_initial=132 nstack_initial=2): set(),
             State(pc_initial=152 nstack_initial=2): set(),
             State(pc_initial=160 nstack_initial=2): set(),
             State(pc_initial=174 nstack_initial=2): set(),
             State(pc_initial=180 nstack_initial=2): set(),
             State(pc_initial=188 nstack_initial=2): set(),
             State(pc_initial=204 nstack_initial=2): set(),
             State(pc_initial=210 nstack_initial=2): set(),
             State(pc_initial=220 nstack_initial=2): set(),
             State(pc_initial=246 nstack_initial=3): {'$phi246.2'},
             State(pc_initial=258 nstack_initial=2): set(),
             State(pc_initial=260 nstack_initial=3): set(),
             State(pc_initial=264 nstack_initial=2): set(),
             State(pc_initial=270 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=294 nstack_initial=2): set(),
             State(pc_initial=296 nstack_initial=2): set(),
             State(pc_initial=314 nstack_initial=2): set(),
             State(pc_initial=332 nstack_initial=2): set(),
             State(pc_initial=338 nstack_initial=2): set(),
             State(pc_initial=356 nstack_initial=2): set(),
             State(pc_initial=378 nstack_initial=3): {'$phi378.2'},
             State(pc_initial=394 nstack_initial=2): set(),
             State(pc_initial=396 nstack_initial=3): set(),
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=406 nstack_initial=2): set(),
             State(pc_initial=424 nstack_initial=2): set(),
             State(pc_initial=446 nstack_initial=2): set(),
             State(pc_initial=452 nstack_initial=2): set(),
             State(pc_initial=454 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=486 nstack_initial=3): {'$phi486.2'},
             State(pc_initial=498 nstack_initial=2): set(),
             State(pc_initial=500 nstack_initial=3): set(),
             State(pc_initial=504 nstack_initial=2): set(),
             State(pc_initial=510 nstack_initial=2): set(),
             State(pc_initial=528 nstack_initial=2): set(),
             State(pc_initial=534 nstack_initial=2): set(),
             State(pc_initial=536 nstack_initial=2): set(),
             State(pc_initial=558 nstack_initial=3): {'$phi558.2'},
             State(pc_initial=574 nstack_initial=2): set(),
             State(pc_initial=576 nstack_initial=3): set(),
             State(pc_initial=580 nstack_initial=2): set(),
             State(pc_initial=586 nstack_initial=2): set(),
             State(pc_initial=608 nstack_initial=2): set(),
             State(pc_initial=614 nstack_initial=2): set(),
             State(pc_initial=618 nstack_initial=2): set(),
             State(pc_initial=628 nstack_initial=2): set(),
             State(pc_initial=632 nstack_initial=2): set(),
             State(pc_initial=642 nstack_initial=1): set(),
             State(pc_initial=652 nstack_initial=1): set(),
             State(pc_initial=670 nstack_initial=1): set(),
             State(pc_initial=688 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {'$phi118.1': State(pc_initial=100 nstack_initial=1),
 '$phi122.2': State(pc_initial=118 nstack_initial=2),
 '$phi246.2': State(pc_initial=220 nstack_initial=2),
 '$phi260.2': State(pc_initial=220 nstack_initial=2),
 '$phi378.2': State(pc_initial=356 nstack_initial=2),
 '$phi396.2': State(pc_initial=356 nstack_initial=2),
 '$phi486.2': State(pc_initial=460 nstack_initial=2),
 '$phi500.2': State(pc_initial=460 nstack_initial=2),
 '$phi558.2': State(pc_initial=536 nstack_initial=2),
 '$phi576.2': State(pc_initial=536 nstack_initial=2),
 '$phi58.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.1': State(pc_initial=58 nstack_initial=1)}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi100.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2)),
                           ('$phi72.0', State(pc_initial=72 nstack_initial=1))},
             '$phi118.0': {('$phi100.0',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi614.0',
                            State(pc_initial=614 nstack_initial=2)),
                           ('$phi632.0',
                            State(pc_initial=632 nstack_initial=2))},
             '$phi118.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi614.1',
                            State(pc_initial=614 nstack_initial=2)),
                           ('$phi632.1',
                            State(pc_initial=632 nstack_initial=2))},
             '$phi122.0': {('$phi118.0',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi122.1': {('$phi118.1',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi132.0': {('$phi122.0',
                            State(pc_initial=122 nstack_initial=3))},
             '$phi132.1': {('$phi122.1',
                            State(pc_initial=122 nstack_initial=3))},
             '$phi152.0': {('$phi132.0',
                            State(pc_initial=132 nstack_initial=2))},
             '$phi152.1': {('$phi132.1',
                            State(pc_initial=132 nstack_initial=2))},
             '$phi160.0': {('$phi122.0',
                            State(pc_initial=122 nstack_initial=3)),
                           ('$phi132.0',
                            State(pc_initial=132 nstack_initial=2))},
             '$phi160.1': {('$phi122.1',
                            State(pc_initial=122 nstack_initial=3)),
                           ('$phi132.1',
                            State(pc_initial=132 nstack_initial=2))},
             '$phi174.0': {('$phi160.0',
                            State(pc_initial=160 nstack_initial=2))},
             '$phi174.1': {('$phi160.1',
                            State(pc_initial=160 nstack_initial=2))},
             '$phi180.0': {('$phi174.0',
                            State(pc_initial=174 nstack_initial=2))},
             '$phi180.1': {('$phi174.1',
                            State(pc_initial=174 nstack_initial=2))},
             '$phi188.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi188.1': {('$phi180.1',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi204.0': {('$phi188.0',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi204.1': {('$phi188.1',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi210.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi188.0',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi210.1': {('$phi180.1',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi188.1',
                            State(pc_initial=188 nstack_initial=2))},
             '$phi220.0': {('$phi210.0',
                            State(pc_initial=210 nstack_initial=2))},
             '$phi220.1': {('$phi210.1',
                            State(pc_initial=210 nstack_initial=2))},
             '$phi246.0': {('$phi220.0',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi246.1': {('$phi220.1',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi246.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi258.0': {('$phi246.0',
                            State(pc_initial=246 nstack_initial=3))},
             '$phi258.1': {('$phi246.1',
                            State(pc_initial=246 nstack_initial=3))},
             '$phi260.0': {('$phi220.0',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi260.1': {('$phi220.1',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi260.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi264.0': {('$phi258.0',
                            State(pc_initial=258 nstack_initial=2))},
             '$phi264.1': {('$phi258.1',
                            State(pc_initial=258 nstack_initial=2))},
             '$phi270.0': {('$phi210.0',
                            State(pc_initial=210 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=3)),
                           ('$phi260.0',
                            State(pc_initial=260 nstack_initial=3))},
             '$phi270.1': {('$phi210.1',
                            State(pc_initial=210 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=3)),
                           ('$phi260.1',
                            State(pc_initial=260 nstack_initial=3))},
             '$phi288.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=2))},
             '$phi288.1': {('$phi270.1',
                            State(pc_initial=270 nstack_initial=2))},
             '$phi294.0': {('$phi204.0',
                            State(pc_initial=204 nstack_initial=2)),
                           ('$phi264.0',
                            State(pc_initial=264 nstack_initial=2))},
             '$phi294.1': {('$phi204.1',
                            State(pc_initial=204 nstack_initial=2)),
                           ('$phi264.1',
                            State(pc_initial=264 nstack_initial=2))},
             '$phi296.0': {('$phi174.0',
                            State(pc_initial=174 nstack_initial=2))},
             '$phi296.1': {('$phi174.1',
                            State(pc_initial=174 nstack_initial=2))},
             '$phi314.0': {('$phi296.0',
                            State(pc_initial=296 nstack_initial=2))},
             '$phi314.1': {('$phi296.1',
                            State(pc_initial=296 nstack_initial=2))},
             '$phi332.0': {('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi332.1': {('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi338.0': {('$phi296.0',
                            State(pc_initial=296 nstack_initial=2)),
                           ('$phi314.0',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi338.1': {('$phi296.1',
                            State(pc_initial=296 nstack_initial=2)),
                           ('$phi314.1',
                            State(pc_initial=314 nstack_initial=2))},
             '$phi356.0': {('$phi338.0',
                            State(pc_initial=338 nstack_initial=2))},
             '$phi356.1': {('$phi338.1',
                            State(pc_initial=338 nstack_initial=2))},
             '$phi378.0': {('$phi356.0',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi378.1': {('$phi356.1',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi378.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi394.0': {('$phi378.0',
                            State(pc_initial=378 nstack_initial=3))},
             '$phi394.1': {('$phi378.1',
                            State(pc_initial=378 nstack_initial=3))},
             '$phi396.0': {('$phi356.0',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi396.1': {('$phi356.1',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi396.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi400.0': {('$phi394.0',
                            State(pc_initial=394 nstack_initial=2))},
             '$phi400.1': {('$phi394.1',
                            State(pc_initial=394 nstack_initial=2))},
             '$phi406.0': {('$phi338.0',
                            State(pc_initial=338 nstack_initial=2)),
                           ('$phi378.0',
                            State(pc_initial=378 nstack_initial=3)),
                           ('$phi396.0',
                            State(pc_initial=396 nstack_initial=3))},
             '$phi406.1': {('$phi338.1',
                            State(pc_initial=338 nstack_initial=2)),
                           ('$phi378.1',
                            State(pc_initial=378 nstack_initial=3)),
                           ('$phi396.1',
                            State(pc_initial=396 nstack_initial=3))},
             '$phi424.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2))},
             '$phi424.1': {('$phi406.1',
                            State(pc_initial=406 nstack_initial=2))},
             '$phi446.0': {('$phi424.0',
                            State(pc_initial=424 nstack_initial=2))},
             '$phi446.1': {('$phi424.1',
                            State(pc_initial=424 nstack_initial=2))},
             '$phi452.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=2)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=2)),
                           ('$phi332.0',
                            State(pc_initial=332 nstack_initial=2)),
                           ('$phi400.0',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi452.1': {('$phi270.1',
                            State(pc_initial=270 nstack_initial=2)),
                           ('$phi294.1',
                            State(pc_initial=294 nstack_initial=2)),
                           ('$phi332.1',
                            State(pc_initial=332 nstack_initial=2)),
                           ('$phi400.1',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi454.0': {('$phi160.0',
                            State(pc_initial=160 nstack_initial=2))},
             '$phi454.1': {('$phi160.1',
                            State(pc_initial=160 nstack_initial=2))},
             '$phi460.0': {('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi460.1': {('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi486.0': {('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi486.1': {('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi486.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi498.0': {('$phi486.0',
                            State(pc_initial=486 nstack_initial=3))},
             '$phi498.1': {('$phi486.1',
                            State(pc_initial=486 nstack_initial=3))},
             '$phi500.0': {('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi500.1': {('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi500.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi504.0': {('$phi498.0',
                            State(pc_initial=498 nstack_initial=2))},
             '$phi504.1': {('$phi498.1',
                            State(pc_initial=498 nstack_initial=2))},
             '$phi510.0': {('$phi486.0',
                            State(pc_initial=486 nstack_initial=3)),
                           ('$phi500.0',
                            State(pc_initial=500 nstack_initial=3))},
             '$phi510.1': {('$phi486.1',
                            State(pc_initial=486 nstack_initial=3)),
                           ('$phi500.1',
                            State(pc_initial=500 nstack_initial=3))},
             '$phi528.0': {('$phi510.0',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi528.1': {('$phi510.1',
                            State(pc_initial=510 nstack_initial=2))},
             '$phi534.0': {('$phi504.0',
                            State(pc_initial=504 nstack_initial=2))},
             '$phi534.1': {('$phi504.1',
                            State(pc_initial=504 nstack_initial=2))},
             '$phi536.0': {('$phi454.0',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi536.1': {('$phi454.1',
                            State(pc_initial=454 nstack_initial=2))},
             '$phi558.0': {('$phi536.0',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi558.1': {('$phi536.1',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi558.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi574.0': {('$phi558.0',
                            State(pc_initial=558 nstack_initial=3))},
             '$phi574.1': {('$phi558.1',
                            State(pc_initial=558 nstack_initial=3))},
             '$phi576.0': {('$phi536.0',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi576.1': {('$phi536.1',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi576.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi58.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi652.0', State(pc_initial=652 nstack_initial=1)),
                          ('$phi670.0',
                           State(pc_initial=670 nstack_initial=1))},
             '$phi580.0': {('$phi574.0',
                            State(pc_initial=574 nstack_initial=2))},
             '$phi580.1': {('$phi574.1',
                            State(pc_initial=574 nstack_initial=2))},
             '$phi586.0': {('$phi558.0',
                            State(pc_initial=558 nstack_initial=3)),
                           ('$phi576.0',
                            State(pc_initial=576 nstack_initial=3))},
             '$phi586.1': {('$phi558.1',
                            State(pc_initial=558 nstack_initial=3)),
                           ('$phi576.1',
                            State(pc_initial=576 nstack_initial=3))},
             '$phi608.0': {('$phi586.0',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi608.1': {('$phi586.1',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi614.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi614.1': {('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi618.0': {('$phi614.0',
                            State(pc_initial=614 nstack_initial=2))},
             '$phi618.1': {('$phi614.1',
                            State(pc_initial=614 nstack_initial=2))},
             '$phi62.0': {('$phi58.0', State(pc_initial=58 nstack_initial=1))},
             '$phi62.1': {('$58for_iter.2',
                           State(pc_initial=58 nstack_initial=1))},
             '$phi628.0': {('$phi618.0',
                            State(pc_initial=618 nstack_initial=2))},
             '$phi628.1': {('$phi618.1',
                            State(pc_initial=618 nstack_initial=2))},
             '$phi632.0': {('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi632.1': {('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi642.0': {('$phi118.0',
                            State(pc_initial=118 nstack_initial=2)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2)),
                           ('$phi446.0',
                            State(pc_initial=446 nstack_initial=2)),
                           ('$phi528.0',
                            State(pc_initial=528 nstack_initial=2)),
                           ('$phi608.0',
                            State(pc_initial=608 nstack_initial=2))},
             '$phi652.0': {('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi670.0': {('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi72.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi92.0': {('$phi72.0', State(pc_initial=72 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi100.0': {('$phi58.0', State(pc_initial=58 nstack_initial=1))},
             '$phi118.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi118.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi122.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi122.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi132.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi132.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi152.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi152.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi160.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi160.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi174.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi174.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi180.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi180.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi188.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi188.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi204.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi204.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi210.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi210.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi220.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi220.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi246.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi246.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi246.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi258.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi258.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi260.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi260.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi260.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi264.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi264.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi270.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi270.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi288.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi288.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi294.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi294.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi296.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi296.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi314.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi314.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi332.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi332.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi338.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi338.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi356.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi356.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi378.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi378.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi378.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi394.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi394.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi396.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi396.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi396.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi400.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi400.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi406.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi406.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi424.0': {('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi424.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi446.0': {('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi446.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi452.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi452.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi454.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi454.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi460.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi460.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi486.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi486.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi486.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi498.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi498.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi500.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi500.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi500.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi504.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi504.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi510.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi510.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi528.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi528.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi534.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi534.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi536.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi536.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi558.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi558.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi558.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi574.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi574.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi576.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi576.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi576.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi58.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi642.0',
                           State(pc_initial=642 nstack_initial=1))},
             '$phi580.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi580.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi586.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi586.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.1',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi608.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi608.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.1',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.1',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.1',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.1',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.1',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi614.0': {('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi614.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi618.0': {('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi618.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi618.1',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi62.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi642.0',
                           State(pc_initial=642 nstack_initial=1))},
             '$phi62.1': {('$58for_iter.2',
                           State(pc_initial=58 nstack_initial=1))},
             '$phi628.0': {('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi628.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi628.1',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi632.0': {('$phi58.0', State(pc_initial=58 nstack_initial=1))},
             '$phi632.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi642.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi652.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi670.0': {('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2)),
                           ('$phi618.0',
                            State(pc_initial=618 nstack_initial=2)),
                           ('$phi628.0',
                            State(pc_initial=628 nstack_initial=2))},
             '$phi72.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi642.0',
                           State(pc_initial=642 nstack_initial=1))},
             '$phi92.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi642.0',
                           State(pc_initial=642 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi100.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi118.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi118.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi122.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi122.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi132.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi132.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi152.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi152.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi160.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi160.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi174.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi174.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi180.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi180.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi188.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi188.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi204.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi204.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi210.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi210.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi220.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi220.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi246.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi246.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi246.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi258.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi258.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi260.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi260.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi260.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi264.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi264.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi270.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi270.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi288.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi288.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi294.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi294.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi296.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi296.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi314.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi314.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi332.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi332.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi338.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi338.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi356.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi356.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi378.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi378.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi378.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi394.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi394.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi396.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi396.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi396.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi400.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi400.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi406.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi406.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi424.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi424.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi446.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi446.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1)),
                           ('$phi406.1',
                            State(pc_initial=406 nstack_initial=2))},
             '$phi452.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi452.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi454.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi454.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi460.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi460.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi486.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi486.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi486.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi498.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi498.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi500.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi500.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi500.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi504.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi504.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi510.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi510.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi528.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi528.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi534.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi534.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi536.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi536.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi558.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi558.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi558.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi574.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi574.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi576.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi576.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi576.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi58.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi406.0', State(pc_initial=406 nstack_initial=2)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=2)),
                          ('$phi452.0', State(pc_initial=452 nstack_initial=2)),
                          ('$phi510.0', State(pc_initial=510 nstack_initial=2)),
                          ('$phi534.0', State(pc_initial=534 nstack_initial=2)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=1)),
                          ('$phi580.0', State(pc_initial=580 nstack_initial=2)),
                          ('$phi586.0', State(pc_initial=586 nstack_initial=2)),
                          ('$phi618.0', State(pc_initial=618 nstack_initial=2)),
                          ('$phi628.0',
                           State(pc_initial=628 nstack_initial=2))},
             '$phi580.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi580.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi586.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi586.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi608.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi608.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi614.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi614.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi618.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi618.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi62.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi406.0', State(pc_initial=406 nstack_initial=2)),
                          ('$phi424.0', State(pc_initial=424 nstack_initial=2)),
                          ('$phi452.0', State(pc_initial=452 nstack_initial=2)),
                          ('$phi510.0', State(pc_initial=510 nstack_initial=2)),
                          ('$phi534.0', State(pc_initial=534 nstack_initial=2)),
                          ('$phi580.0', State(pc_initial=580 nstack_initial=2)),
                          ('$phi586.0', State(pc_initial=586 nstack_initial=2)),
                          ('$phi618.0', State(pc_initial=618 nstack_initial=2)),
                          ('$phi628.0',
                           State(pc_initial=628 nstack_initial=2))},
             '$phi62.1': {('$58for_iter.2',
                           State(pc_initial=58 nstack_initial=1))},
             '$phi628.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi628.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi632.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi406.0',
                            State(pc_initial=406 nstack_initial=2)),
                           ('$phi424.0',
                            State(pc_initial=424 nstack_initial=2)),
                           ('$phi452.0',
                            State(pc_initial=452 nstack_initial=2)),
                           ('$phi510.0',
                            State(pc_initial=510 nstack_initial=2)),
                           ('$phi534.0',
                            State(pc_initial=534 nstack_initial=2)),
                           ('$phi580.0',
                            State(pc_initial=580 nstack_initial=2)),
                           ('$phi586.0',
                            State(pc_initial=586 nstack_initial=2))},
             '$phi632.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi642.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi642.0',
                            State(pc_initial=642 nstack_initial=1))},
             '$phi652.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi670.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi100.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi118.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi118.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi122.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi122.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi132.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi132.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi152.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi160.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi160.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi174.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi174.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi180.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi188.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi188.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi204.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi210.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi210.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi220.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi220.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi246.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi246.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi246.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi258.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi258.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi260.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi260.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi260.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi264.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi264.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi270.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi270.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi288.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi288.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi294.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi294.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi296.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi314.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi314.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi332.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi332.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi338.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi338.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi356.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi356.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi378.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi378.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi378.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi394.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi394.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi396.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi396.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi400.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi400.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi406.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi406.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi424.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi424.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi446.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi446.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi452.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi452.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi454.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi454.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi460.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi460.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi486.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi486.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi486.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi498.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi498.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi500.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi500.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi500.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi504.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi504.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi510.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi510.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi528.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi528.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi534.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi534.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi536.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi536.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi558.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi558.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi558.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi574.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi574.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi576.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi576.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi576.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi58.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi580.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi580.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi586.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi586.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi608.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi608.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi614.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi614.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi618.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi618.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi62.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$58for_iter.2',
                           State(pc_initial=58 nstack_initial=1))},
             '$phi628.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi628.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi632.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi632.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi642.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi652.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi670.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi100.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi118.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi118.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi122.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi122.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi122.2': {('$118for_iter.3',
                            State(pc_initial=118 nstack_initial=2))},
             '$phi132.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi132.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi152.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi152.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi160.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi160.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi174.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi174.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi180.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi188.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi188.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi204.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi204.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi210.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi210.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi220.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi220.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi246.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi246.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi246.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi258.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi258.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi260.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi260.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi260.2': {('$236dup_top.10',
                            State(pc_initial=220 nstack_initial=2))},
             '$phi264.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi264.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi270.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi270.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi288.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi288.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi294.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi294.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi296.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi314.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi314.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi332.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi332.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi338.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi338.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi356.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi356.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi378.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi378.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi378.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi394.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi394.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi396.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi396.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi396.2': {('$368dup_top.8',
                            State(pc_initial=356 nstack_initial=2))},
             '$phi400.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi400.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi406.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi406.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi424.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi424.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi446.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi446.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi452.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi452.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi454.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi454.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi460.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi460.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi486.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi486.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi486.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi498.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi498.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi500.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi500.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi500.2': {('$476dup_top.10',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi504.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi504.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi510.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi510.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi528.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi528.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi534.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi534.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi536.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi536.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi558.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi558.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi558.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi574.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi574.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi576.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi576.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi576.2': {('$548dup_top.8',
                            State(pc_initial=536 nstack_initial=2))},
             '$phi58.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi580.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi580.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi586.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi586.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi608.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi608.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi614.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi614.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi618.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi618.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi62.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.1': {('$58for_iter.2',
                           State(pc_initial=58 nstack_initial=1))},
             '$phi628.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi628.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi632.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi632.1': {('$116get_iter.8',
                            State(pc_initial=100 nstack_initial=1))},
             '$phi642.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi652.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi670.0': {('$56get_iter.24',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$56get_iter.24',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi118.1': {('$116get_iter.8', State(pc_initial=100 nstack_initial=1))},
 '$phi122.2': {('$118for_iter.3', State(pc_initial=118 nstack_initial=2))},
 '$phi246.2': {('$236dup_top.10', State(pc_initial=220 nstack_initial=2))},
 '$phi378.2': {('$368dup_top.8', State(pc_initial=356 nstack_initial=2))},
 '$phi486.2': {('$476dup_top.10', State(pc_initial=460 nstack_initial=2))},
 '$phi558.2': {('$548dup_top.8', State(pc_initial=536 nstack_initial=2))},
 '$phi58.0': {('$56get_iter.24', State(pc_initial=0 nstack_initial=0))},
 '$phi62.1': {('$58for_iter.2', State(pc_initial=58 nstack_initial=1))}}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi58.0': '$56get_iter.24'},
             State(pc_initial=58 nstack_initial=1): {'$phi62.1': '$58for_iter.2'},
             State(pc_initial=100 nstack_initial=1): {'$phi118.1': '$116get_iter.8'},
             State(pc_initial=118 nstack_initial=2): {'$phi122.2': '$118for_iter.3'},
             State(pc_initial=220 nstack_initial=2): {'$phi246.2': '$236dup_top.10'},
             State(pc_initial=356 nstack_initial=2): {'$phi378.2': '$368dup_top.8'},
             State(pc_initial=460 nstack_initial=2): {'$phi486.2': '$476dup_top.10'},
             State(pc_initial=536 nstack_initial=2): {'$phi558.2': '$548dup_top.8'}})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$6load_global.2'}), (8, {'res': '$target_index8.3'}), (10, {'func': '$6load_global.2', 'args': ['$target_index8.3'], 'res': '$10call_function.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_attr.6'}), (16, {'res': '$const16.7'}), (18, {'func': '$4load_attr.1', 'args': ['$10call_function.4', '$14load_attr.6'], 'names': '$const16.7', 'res': '$18call_function_kw.8'}), (20, {'value': '$18call_function_kw.8'}), (22, {'res': '$22load_global.9'}), (24, {'item': '$22load_global.9', 'res': '$24load_attr.10'}), (26, {'res': '$26load_global.11'}), (28, {'res': '$target_index28.12'}), (30, {'func': '$26load_global.11', 'args': ['$target_index28.12'], 'res': '$30call_function.13'}), (32, {'res': '$32load_global.14'}), (34, {'item': '$32load_global.14', 'res': '$34load_attr.15'}), (36, {'res': '$const36.16'}), (38, {'func': '$24load_attr.10', 'args': ['$30call_function.13', '$34load_attr.15'], 'names': '$const36.16', 'res': '$38call_function_kw.17'}), (40, {'value': '$38call_function_kw.17'}), (42, {'res': '$const42.18'}), (44, {'value': '$const42.18'}), (46, {'res': '$46load_global.19'}), (48, {'res': '$48load_global.20'}), (50, {'res': '$target_index50.21'}), (52, {'func': '$48load_global.20', 'args': ['$target_index50.21'], 'res': '$52call_function.22'}), (54, {'func': '$46load_global.19', 'args': ['$52call_function.22'], 'res': '$54call_function.23'}), (56, {'value': '$54call_function.23', 'res': '$56get_iter.24'})), outgoing_phis={'$phi58.0': '$56get_iter.24'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$56get_iter.24',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=58 nstack_initial=1):
AdaptBlockInfo(insts=((58, {'iterator': '$phi58.0', 'pair': '$58for_iter.1', 'indval': '$58for_iter.2', 'pred': '$58for_iter.3'}),), outgoing_phis={'$phi62.1': '$58for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={688: (), 62: ('$phi58.0', '$58for_iter.2')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$i64.2'}), (66, {'res': '$const66.3'}), (68, {'lhs': '$i64.2', 'rhs': '$const66.3', 'res': '$68compare_op.4'}), (70, {'pred': '$68compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$phi62.0',), 100: ('$phi62.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'res': '$target_index72.1'}), (74, {'res': '$i74.2'}), (76, {'index': '$i74.2', 'target': '$target_index72.1', 'res': '$76binary_subscr.3'}), (78, {'res': '$target_index78.4'}), (80, {'res': '$i80.5'}), (82, {'res': '$const82.6'}), (84, {'lhs': '$i80.5', 'rhs': '$const82.6', 'res': '$84binary_subtract.7'}), (86, {'index': '$84binary_subtract.7', 'target': '$target_index78.4', 'res': '$86binary_subscr.8'}), (88, {'lhs': '$76binary_subscr.3', 'rhs': '$86binary_subscr.8', 'res': '$88compare_op.9'}), (90, {'pred': '$88compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$phi72.0',), 100: ('$phi72.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$92load_global.1'}), (94, {'res': '$const94.2'}), (96, {'func': '$92load_global.1', 'args': ['$const94.2'], 'res': '$96call_function.3'}), (98, {'exc': '$96call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=100 nstack_initial=1):
AdaptBlockInfo(insts=((100, {'res': '$const100.1'}), (102, {'value': '$const100.1'}), (104, {'res': '$104load_global.2'}), (106, {'res': '$to_j106.3'}), (108, {'res': '$108load_global.4'}), (110, {'res': '$source_index110.5'}), (112, {'func': '$108load_global.4', 'args': ['$source_index110.5'], 'res': '$112call_function.6'}), (114, {'func': '$104load_global.2', 'args': ['$to_j106.3', '$112call_function.6'], 'res': '$114call_function.7'}), (116, {'value': '$114call_function.7', 'res': '$116get_iter.8'})), outgoing_phis={'$phi118.1': '$116get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ('$phi100.0', '$116get_iter.8')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=118 nstack_initial=2):
AdaptBlockInfo(insts=((118, {'iterator': '$phi118.1', 'pair': '$118for_iter.2', 'indval': '$118for_iter.3', 'pred': '$118for_iter.4'}),), outgoing_phis={'$phi122.2': '$118for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={642: ('$phi118.0',), 122: ('$phi118.0', '$phi118.1', '$118for_iter.3')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=3):
AdaptBlockInfo(insts=((122, {'value': '$phi122.2'}), (124, {'res': '$j124.3'}), (126, {'res': '$const126.4'}), (128, {'lhs': '$j124.3', 'rhs': '$const126.4', 'res': '$128compare_op.5'}), (130, {'pred': '$128compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={132: ('$phi122.0', '$phi122.1'), 160: ('$phi122.0', '$phi122.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=132 nstack_initial=2):
AdaptBlockInfo(insts=((132, {'res': '$source_index132.2'}), (134, {'res': '$j134.3'}), (136, {'index': '$j134.3', 'target': '$source_index132.2', 'res': '$136binary_subscr.4'}), (138, {'res': '$source_index138.5'}), (140, {'res': '$j140.6'}), (142, {'res': '$const142.7'}), (144, {'lhs': '$j140.6', 'rhs': '$const142.7', 'res': '$144binary_subtract.8'}), (146, {'index': '$144binary_subtract.8', 'target': '$source_index138.5', 'res': '$146binary_subscr.9'}), (148, {'lhs': '$136binary_subscr.4', 'rhs': '$146binary_subscr.9', 'res': '$148compare_op.10'}), (150, {'pred': '$148compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={152: ('$phi132.0', '$phi132.1'), 160: ('$phi132.0', '$phi132.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=152 nstack_initial=2):
AdaptBlockInfo(insts=((152, {'res': '$152load_global.2'}), (154, {'res': '$const154.3'}), (156, {'func': '$152load_global.2', 'args': ['$const154.3'], 'res': '$156call_function.4'}), (158, {'exc': '$156call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=160 nstack_initial=2):
AdaptBlockInfo(insts=((160, {'res': '$const160.2'}), (162, {'value': '$const160.2'}), (164, {'res': '$target_freq164.3'}), (166, {'res': '$const166.4'}), (168, {'lhs': '$target_freq164.3', 'rhs': '$const166.4', 'res': '$168compare_op.5'}), (170, {'pred': '$168compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: ('$phi160.0', '$phi160.1'), 454: ('$phi160.0', '$phi160.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=174 nstack_initial=2):
AdaptBlockInfo(insts=((174, {'res': '$before174.2'}), (176, {'pred': '$before174.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={180: ('$phi174.0', '$phi174.1'), 296: ('$phi174.0', '$phi174.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'res': '$i180.2'}), (182, {'res': '$const182.3'}), (184, {'lhs': '$i180.2', 'rhs': '$const182.3', 'res': '$184compare_op.4'}), (186, {'pred': '$184compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: ('$phi180.0', '$phi180.1'), 210: ('$phi180.0', '$phi180.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=188 nstack_initial=2):
AdaptBlockInfo(insts=((188, {'res': '$source_index188.2'}), (190, {'res': '$j190.3'}), (192, {'index': '$j190.3', 'target': '$source_index188.2', 'res': '$192binary_subscr.4'}), (194, {'res': '$target_index194.5'}), (196, {'res': '$i196.6'}), (198, {'index': '$i196.6', 'target': '$target_index194.5', 'res': '$198binary_subscr.7'}), (200, {'lhs': '$192binary_subscr.4', 'rhs': '$198binary_subscr.7', 'res': '$200compare_op.8'}), (202, {'pred': '$200compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={204: ('$phi188.0', '$phi188.1'), 210: ('$phi188.0', '$phi188.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=204 nstack_initial=2):
AdaptBlockInfo(insts=((204, {'res': '$const204.2'}), (206, {'value': '$const204.2'}), (208, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi204.0', '$phi204.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=210 nstack_initial=2):
AdaptBlockInfo(insts=((210, {'res': '$i210.2'}), (212, {'res': '$const212.3'}), (214, {'lhs': '$i210.2', 'rhs': '$const212.3', 'res': '$214compare_op.4'}), (216, {'pred': '$214compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ('$phi210.0', '$phi210.1'), 270: ('$phi210.0', '$phi210.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=220 nstack_initial=2):
AdaptBlockInfo(insts=((220, {'res': '$target_index220.2'}), (222, {'res': '$i222.3'}), (224, {'res': '$const224.4'}), (226, {'lhs': '$i222.3', 'rhs': '$const224.4', 'res': '$226binary_subtract.5'}), (228, {'index': '$226binary_subtract.5', 'target': '$target_index220.2', 'res': '$228binary_subscr.6'}), (230, {'res': '$source_index230.7'}), (232, {'res': '$j232.8'}), (234, {'index': '$j232.8', 'target': '$source_index230.7', 'res': '$234binary_subscr.9'}), (236, {'orig': ['$234binary_subscr.9'], 'duped': ['$236dup_top.10']}), (240, {'lhs': '$228binary_subscr.6', 'rhs': '$234binary_subscr.9', 'res': '$240compare_op.11'}), (242, {'pred': '$240compare_op.11'})), outgoing_phis={'$phi246.2': '$236dup_top.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: ('$phi220.0', '$phi220.1', '$236dup_top.10'), 260: ('$phi220.0', '$phi220.1', '$236dup_top.10')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=246 nstack_initial=3):
AdaptBlockInfo(insts=((246, {'res': '$target_index246.3'}), (248, {'res': '$i248.4'}), (250, {'index': '$i248.4', 'target': '$target_index246.3', 'res': '$250binary_subscr.5'}), (252, {'lhs': '$phi246.2', 'rhs': '$250binary_subscr.5', 'res': '$252compare_op.6'}), (254, {'pred': '$252compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={258: ('$phi246.0', '$phi246.1'), 270: ('$phi246.0', '$phi246.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=258 nstack_initial=2):
AdaptBlockInfo(insts=((258, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={264: ('$phi258.0', '$phi258.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=260 nstack_initial=3):
AdaptBlockInfo(insts=((262, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={270: ('$phi260.0', '$phi260.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=264 nstack_initial=2):
AdaptBlockInfo(insts=((264, {'res': '$const264.2'}), (266, {'value': '$const264.2'}), (268, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi264.0', '$phi264.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=270 nstack_initial=2):
AdaptBlockInfo(insts=((270, {'res': '$source_index270.2'}), (272, {'res': '$j272.3'}), (274, {'index': '$j272.3', 'target': '$source_index270.2', 'res': '$274binary_subscr.4'}), (276, {'res': '$target_index276.5'}), (278, {'res': '$i278.6'}), (280, {'index': '$i278.6', 'target': '$target_index276.5', 'res': '$280binary_subscr.7'}), (282, {'lhs': '$274binary_subscr.4', 'rhs': '$280binary_subscr.7', 'res': '$282compare_op.8'}), (284, {'pred': '$282compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={288: ('$phi270.0', '$phi270.1'), 452: ('$phi270.0', '$phi270.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((290, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={642: ('$phi288.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=294 nstack_initial=2):
AdaptBlockInfo(insts=((294, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={452: ('$phi294.0', '$phi294.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=296 nstack_initial=2):
AdaptBlockInfo(insts=((296, {'res': '$i296.2'}), (298, {'res': '$298load_global.3'}), (300, {'res': '$target_index300.4'}), (302, {'func': '$298load_global.3', 'args': ['$target_index300.4'], 'res': '$302call_function.5'}), (304, {'res': '$const304.6'}), (306, {'lhs': '$302call_function.5', 'rhs': '$const304.6', 'res': '$306binary_subtract.7'}), (308, {'lhs': '$i296.2', 'rhs': '$306binary_subtract.7', 'res': '$308compare_op.8'}), (310, {'pred': '$308compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={314: ('$phi296.0', '$phi296.1'), 338: ('$phi296.0', '$phi296.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=314 nstack_initial=2):
AdaptBlockInfo(insts=((314, {'res': '$target_index314.2'}), (316, {'res': '$i316.3'}), (318, {'index': '$i316.3', 'target': '$target_index314.2', 'res': '$318binary_subscr.4'}), (320, {'res': '$source_index320.5'}), (322, {'res': '$j322.6'}), (324, {'index': '$j322.6', 'target': '$source_index320.5', 'res': '$324binary_subscr.7'}), (326, {'lhs': '$318binary_subscr.4', 'rhs': '$324binary_subscr.7', 'res': '$326compare_op.8'}), (328, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={332: ('$phi314.0', '$phi314.1'), 338: ('$phi314.0', '$phi314.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=332 nstack_initial=2):
AdaptBlockInfo(insts=((332, {'res': '$const332.2'}), (334, {'value': '$const332.2'}), (336, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={452: ('$phi332.0', '$phi332.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=338 nstack_initial=2):
AdaptBlockInfo(insts=((338, {'res': '$i338.2'}), (340, {'res': '$340load_global.3'}), (342, {'res': '$target_index342.4'}), (344, {'func': '$340load_global.3', 'args': ['$target_index342.4'], 'res': '$344call_function.5'}), (346, {'res': '$const346.6'}), (348, {'lhs': '$344call_function.5', 'rhs': '$const346.6', 'res': '$348binary_subtract.7'}), (350, {'lhs': '$i338.2', 'rhs': '$348binary_subtract.7', 'res': '$350compare_op.8'}), (352, {'pred': '$350compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={356: ('$phi338.0', '$phi338.1'), 406: ('$phi338.0', '$phi338.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=356 nstack_initial=2):
AdaptBlockInfo(insts=((356, {'res': '$target_index356.2'}), (358, {'res': '$i358.3'}), (360, {'index': '$i358.3', 'target': '$target_index356.2', 'res': '$360binary_subscr.4'}), (362, {'res': '$source_index362.5'}), (364, {'res': '$j364.6'}), (366, {'index': '$j364.6', 'target': '$source_index362.5', 'res': '$366binary_subscr.7'}), (368, {'orig': ['$366binary_subscr.7'], 'duped': ['$368dup_top.8']}), (372, {'lhs': '$360binary_subscr.4', 'rhs': '$366binary_subscr.7', 'res': '$372compare_op.9'}), (374, {'pred': '$372compare_op.9'})), outgoing_phis={'$phi378.2': '$368dup_top.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={378: ('$phi356.0', '$phi356.1', '$368dup_top.8'), 396: ('$phi356.0', '$phi356.1', '$368dup_top.8')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=378 nstack_initial=3):
AdaptBlockInfo(insts=((378, {'res': '$target_index378.3'}), (380, {'res': '$i380.4'}), (382, {'res': '$const382.5'}), (384, {'lhs': '$i380.4', 'rhs': '$const382.5', 'res': '$384binary_add.6'}), (386, {'index': '$384binary_add.6', 'target': '$target_index378.3', 'res': '$386binary_subscr.7'}), (388, {'lhs': '$phi378.2', 'rhs': '$386binary_subscr.7', 'res': '$388compare_op.8'}), (390, {'pred': '$388compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={394: ('$phi378.0', '$phi378.1'), 406: ('$phi378.0', '$phi378.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=394 nstack_initial=2):
AdaptBlockInfo(insts=((394, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={400: ('$phi394.0', '$phi394.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=396 nstack_initial=3):
AdaptBlockInfo(insts=((398, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={406: ('$phi396.0', '$phi396.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((400, {'res': '$const400.2'}), (402, {'value': '$const400.2'}), (404, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={452: ('$phi400.0', '$phi400.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=406 nstack_initial=2):
AdaptBlockInfo(insts=((406, {'res': '$i406.2'}), (408, {'res': '$408load_global.3'}), (410, {'res': '$target_index410.4'}), (412, {'func': '$408load_global.3', 'args': ['$target_index410.4'], 'res': '$412call_function.5'}), (414, {'res': '$const414.6'}), (416, {'lhs': '$412call_function.5', 'rhs': '$const414.6', 'res': '$416binary_subtract.7'}), (418, {'lhs': '$i406.2', 'rhs': '$416binary_subtract.7', 'res': '$418compare_op.8'}), (420, {'pred': '$418compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={424: ('$phi406.0', '$phi406.1'), 614: ('$phi406.0', '$phi406.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=424 nstack_initial=2):
AdaptBlockInfo(insts=((424, {'res': '$source_index424.2'}), (426, {'res': '$j426.3'}), (428, {'index': '$j426.3', 'target': '$source_index424.2', 'res': '$428binary_subscr.4'}), (430, {'res': '$target_index430.5'}), (432, {'res': '$i432.6'}), (434, {'res': '$const434.7'}), (436, {'lhs': '$i432.6', 'rhs': '$const434.7', 'res': '$436binary_add.8'}), (438, {'index': '$436binary_add.8', 'target': '$target_index430.5', 'res': '$438binary_subscr.9'}), (440, {'lhs': '$428binary_subscr.4', 'rhs': '$438binary_subscr.9', 'res': '$440compare_op.10'}), (442, {'pred': '$440compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={446: ('$phi424.0', '$phi424.1'), 614: ('$phi424.0', '$phi424.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=446 nstack_initial=2):
AdaptBlockInfo(insts=((448, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={642: ('$phi446.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=452 nstack_initial=2):
AdaptBlockInfo(insts=((452, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={614: ('$phi452.0', '$phi452.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=454 nstack_initial=2):
AdaptBlockInfo(insts=((454, {'res': '$before454.2'}), (456, {'pred': '$before454.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={460: ('$phi454.0', '$phi454.1'), 536: ('$phi454.0', '$phi454.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {'res': '$target_index460.2'}), (462, {'res': '$i462.3'}), (464, {'index': '$i462.3', 'target': '$target_index460.2', 'res': '$464binary_subscr.4'}), (466, {'res': '$target_freq466.5'}), (468, {'lhs': '$464binary_subscr.4', 'rhs': '$target_freq466.5', 'res': '$468binary_subtract.6'}), (470, {'res': '$source_index470.7'}), (472, {'res': '$j472.8'}), (474, {'index': '$j472.8', 'target': '$source_index470.7', 'res': '$474binary_subscr.9'}), (476, {'orig': ['$474binary_subscr.9'], 'duped': ['$476dup_top.10']}), (480, {'lhs': '$468binary_subtract.6', 'rhs': '$474binary_subscr.9', 'res': '$480compare_op.11'}), (482, {'pred': '$480compare_op.11'})), outgoing_phis={'$phi486.2': '$476dup_top.10'}, blockstack=(), active_try_block=None, outgoing_edgepushed={486: ('$phi460.0', '$phi460.1', '$476dup_top.10'), 500: ('$phi460.0', '$phi460.1', '$476dup_top.10')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=486 nstack_initial=3):
AdaptBlockInfo(insts=((486, {'res': '$target_index486.3'}), (488, {'res': '$i488.4'}), (490, {'index': '$i488.4', 'target': '$target_index486.3', 'res': '$490binary_subscr.5'}), (492, {'lhs': '$phi486.2', 'rhs': '$490binary_subscr.5', 'res': '$492compare_op.6'}), (494, {'pred': '$492compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={498: ('$phi486.0', '$phi486.1'), 510: ('$phi486.0', '$phi486.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=498 nstack_initial=2):
AdaptBlockInfo(insts=((498, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={504: ('$phi498.0', '$phi498.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=500 nstack_initial=3):
AdaptBlockInfo(insts=((502, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={510: ('$phi500.0', '$phi500.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=504 nstack_initial=2):
AdaptBlockInfo(insts=((504, {'res': '$const504.2'}), (506, {'value': '$const504.2'}), (508, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={534: ('$phi504.0', '$phi504.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=510 nstack_initial=2):
AdaptBlockInfo(insts=((510, {'res': '$source_index510.2'}), (512, {'res': '$j512.3'}), (514, {'index': '$j512.3', 'target': '$source_index510.2', 'res': '$514binary_subscr.4'}), (516, {'res': '$target_index516.5'}), (518, {'res': '$i518.6'}), (520, {'index': '$i518.6', 'target': '$target_index516.5', 'res': '$520binary_subscr.7'}), (522, {'lhs': '$514binary_subscr.4', 'rhs': '$520binary_subscr.7', 'res': '$522compare_op.8'}), (524, {'pred': '$522compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={528: ('$phi510.0', '$phi510.1'), 614: ('$phi510.0', '$phi510.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=528 nstack_initial=2):
AdaptBlockInfo(insts=((530, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={642: ('$phi528.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=534 nstack_initial=2):
AdaptBlockInfo(insts=((534, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={614: ('$phi534.0', '$phi534.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=536 nstack_initial=2):
AdaptBlockInfo(insts=((536, {'res': '$target_index536.2'}), (538, {'res': '$i538.3'}), (540, {'index': '$i538.3', 'target': '$target_index536.2', 'res': '$540binary_subscr.4'}), (542, {'res': '$source_index542.5'}), (544, {'res': '$j544.6'}), (546, {'index': '$j544.6', 'target': '$source_index542.5', 'res': '$546binary_subscr.7'}), (548, {'orig': ['$546binary_subscr.7'], 'duped': ['$548dup_top.8']}), (552, {'lhs': '$540binary_subscr.4', 'rhs': '$546binary_subscr.7', 'res': '$552compare_op.9'}), (554, {'pred': '$552compare_op.9'})), outgoing_phis={'$phi558.2': '$548dup_top.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={558: ('$phi536.0', '$phi536.1', '$548dup_top.8'), 576: ('$phi536.0', '$phi536.1', '$548dup_top.8')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=558 nstack_initial=3):
AdaptBlockInfo(insts=((558, {'res': '$target_index558.3'}), (560, {'res': '$i560.4'}), (562, {'index': '$i560.4', 'target': '$target_index558.3', 'res': '$562binary_subscr.5'}), (564, {'res': '$target_freq564.6'}), (566, {'lhs': '$562binary_subscr.5', 'rhs': '$target_freq564.6', 'res': '$566binary_add.7'}), (568, {'lhs': '$phi558.2', 'rhs': '$566binary_add.7', 'res': '$568compare_op.8'}), (570, {'pred': '$568compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={574: ('$phi558.0', '$phi558.1'), 586: ('$phi558.0', '$phi558.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=574 nstack_initial=2):
AdaptBlockInfo(insts=((574, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={580: ('$phi574.0', '$phi574.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=576 nstack_initial=3):
AdaptBlockInfo(insts=((578, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={586: ('$phi576.0', '$phi576.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=580 nstack_initial=2):
AdaptBlockInfo(insts=((580, {'res': '$const580.2'}), (582, {'value': '$const580.2'}), (584, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={614: ('$phi580.0', '$phi580.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=586 nstack_initial=2):
AdaptBlockInfo(insts=((586, {'res': '$source_index586.2'}), (588, {'res': '$j588.3'}), (590, {'index': '$j588.3', 'target': '$source_index586.2', 'res': '$590binary_subscr.4'}), (592, {'res': '$target_index592.5'}), (594, {'res': '$i594.6'}), (596, {'index': '$i594.6', 'target': '$target_index592.5', 'res': '$596binary_subscr.7'}), (598, {'res': '$target_freq598.8'}), (600, {'lhs': '$596binary_subscr.7', 'rhs': '$target_freq598.8', 'res': '$600binary_add.9'}), (602, {'lhs': '$590binary_subscr.4', 'rhs': '$600binary_add.9', 'res': '$602compare_op.10'}), (604, {'pred': '$602compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={608: ('$phi586.0', '$phi586.1'), 614: ('$phi586.0', '$phi586.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=608 nstack_initial=2):
AdaptBlockInfo(insts=((610, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={642: ('$phi608.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=614 nstack_initial=2):
AdaptBlockInfo(insts=((614, {'res': '$found614.2'}), (616, {'pred': '$found614.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={618: ('$phi614.0', '$phi614.1'), 118: ('$phi614.0', '$phi614.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=618 nstack_initial=2):
AdaptBlockInfo(insts=((618, {'res': '$from_j618.2'}), (620, {'res': '$const620.3'}), (622, {'lhs': '$from_j618.2', 'rhs': '$const620.3', 'res': '$622compare_op.4'}), (624, {'pred': '$622compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={628: ('$phi618.0', '$phi618.1'), 632: ('$phi618.0', '$phi618.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=628 nstack_initial=2):
AdaptBlockInfo(insts=((628, {'res': '$j628.2'}), (630, {'value': '$j628.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={632: ('$phi628.0', '$phi628.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=632 nstack_initial=2):
AdaptBlockInfo(insts=((632, {'res': '$j632.2'}), (634, {'res': '$const634.3'}), (636, {'lhs': '$j632.2', 'rhs': '$const634.3', 'res': '$636binary_add.4'}), (638, {'value': '$636binary_add.4'}), (640, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: ('$phi632.0', '$phi632.1')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=642 nstack_initial=1):
AdaptBlockInfo(insts=((642, {'res': '$from_j642.1'}), (644, {'res': '$const644.2'}), (646, {'lhs': '$from_j642.1', 'rhs': '$const644.2', 'res': '$646compare_op.3'}), (648, {'pred': '$646compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={652: ('$phi642.0',), 670: ('$phi642.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=652 nstack_initial=1):
AdaptBlockInfo(insts=((652, {'res': '$const652.1'}), (654, {'res': '$range_starts_out654.2'}), (656, {'res': '$i656.3'}), (658, {'target': '$range_starts_out654.2', 'index': '$i656.3', 'value': '$const652.1'}), (660, {'res': '$const660.4'}), (662, {'res': '$range_ends_out662.5'}), (664, {'res': '$i664.6'}), (666, {'target': '$range_ends_out662.5', 'index': '$i664.6', 'value': '$const660.4'}), (668, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$phi652.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=670 nstack_initial=1):
AdaptBlockInfo(insts=((670, {'res': '$from_j670.1'}), (672, {'res': '$range_starts_out672.2'}), (674, {'res': '$i674.3'}), (676, {'target': '$range_starts_out672.2', 'index': '$i674.3', 'value': '$from_j670.1'}), (678, {'res': '$to_j678.4'}), (680, {'res': '$range_ends_out680.5'}), (682, {'res': '$i682.6'}), (684, {'target': '$range_ends_out680.5', 'index': '$i682.6', 'value': '$to_j678.4'}), (686, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ('$phi670.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=688 nstack_initial=0):
AdaptBlockInfo(insts=((688, {'res': '$range_starts_out688.0'}), (690, {'res': '$range_ends_out690.1'}), (692, {'items': ['$range_starts_out688.0', '$range_ends_out690.1'], 'res': '$692build_tuple.2'}), (694, {'retval': '$692build_tuple.2', 'castval': '$694return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    source_index = arg(0, name=source_index) ['source_index']
    target_index = arg(1, name=target_index) ['target_index']
    target_freq = arg(2, name=target_freq)   ['target_freq']
    before = arg(3, name=before)             ['before']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $6load_global.2 = global(len: <built-in function len>) ['$6load_global.2']
    $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None) ['$10call_function.4', '$6load_global.2', 'target_index']
    $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_attr.6 = getattr(value=$12load_global.5, attr=int_) ['$12load_global.5', '$14load_attr.6']
    range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None) ['$10call_function.4', '$14load_attr.6', '$4load_attr.1', 'range_starts_out']
    $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$22load_global.9']
    $24load_attr.10 = getattr(value=$22load_global.9, attr=empty) ['$22load_global.9', '$24load_attr.10']
    $26load_global.11 = global(len: <built-in function len>) ['$26load_global.11']
    $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None) ['$26load_global.11', '$30call_function.13', 'target_index']
    $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$32load_global.14']
    $34load_attr.15 = getattr(value=$32load_global.14, attr=int_) ['$32load_global.14', '$34load_attr.15']
    range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None) ['$24load_attr.10', '$30call_function.13', '$34load_attr.15', 'range_ends_out']
    to_j = const(int, 0)                     ['to_j']
    $46load_global.19 = global(range: <class 'range'>) ['$46load_global.19']
    $48load_global.20 = global(len: <built-in function len>) ['$48load_global.20']
    $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None) ['$48load_global.20', '$52call_function.22', 'target_index']
    $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None) ['$46load_global.19', '$52call_function.22', '$54call_function.23']
    $56get_iter.24 = getiter(value=$54call_function.23) ['$54call_function.23', '$56get_iter.24']
    $phi58.0 = $56get_iter.24                ['$56get_iter.24', '$phi58.0']
    jump 58                                  []
label 58:
    $58for_iter.1 = iternext(value=$phi58.0) ['$58for_iter.1', '$phi58.0']
    $58for_iter.2 = pair_first(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.2']
    $58for_iter.3 = pair_second(value=$58for_iter.1) ['$58for_iter.1', '$58for_iter.3']
    $phi62.1 = $58for_iter.2                 ['$58for_iter.2', '$phi62.1']
    branch $58for_iter.3, 62, 688            ['$58for_iter.3']
label 62:
    i = $phi62.1                             ['$phi62.1', 'i']
    $const66.3 = const(int, 0)               ['$const66.3']
    $68compare_op.4 = i > $const66.3         ['$68compare_op.4', '$const66.3', 'i']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None) ['$68compare_op.4', '$70pred', 'bool70']
    branch $70pred, 72, 100                  ['$70pred']
label 72:
    $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$76binary_subscr.3', 'i', 'target_index']
    $const82.6 = const(int, 1)               ['$const82.6']
    $84binary_subtract.7 = i - $const82.6    ['$84binary_subtract.7', '$const82.6', 'i']
    $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>) ['$84binary_subtract.7', '$86binary_subscr.8', 'target_index']
    $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8 ['$76binary_subscr.3', '$86binary_subscr.8', '$88compare_op.9']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None) ['$88compare_op.9', '$90pred', 'bool90']
    branch $90pred, 92, 100                  ['$90pred']
label 92:
    $92load_global.1 = global(ValueError: <class 'ValueError'>) ['$92load_global.1']
    $const94.2 = const(str, Target index must be increasing) ['$const94.2']
    $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None) ['$92load_global.1', '$96call_function.3', '$const94.2']
    raise $96call_function.3                 ['$96call_function.3']
label 100:
    from_j = const(int, -1)                  ['from_j']
    $104load_global.2 = global(range: <class 'range'>) ['$104load_global.2']
    $108load_global.4 = global(len: <built-in function len>) ['$108load_global.4']
    $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None) ['$108load_global.4', '$112call_function.6', 'source_index']
    $114call_function.7 = call $104load_global.2(to_j, $112call_function.6, func=$104load_global.2, args=[Var(to_j, nb.py:143), Var($112call_function.6, nb.py:149)], kws=(), vararg=None) ['$104load_global.2', '$112call_function.6', '$114call_function.7', 'to_j']
    $116get_iter.8 = getiter(value=$114call_function.7) ['$114call_function.7', '$116get_iter.8']
    $phi118.1 = $116get_iter.8               ['$116get_iter.8', '$phi118.1']
    jump 118                                 []
label 118:
    $118for_iter.2 = iternext(value=$phi118.1) ['$118for_iter.2', '$phi118.1']
    $118for_iter.3 = pair_first(value=$118for_iter.2) ['$118for_iter.2', '$118for_iter.3']
    $118for_iter.4 = pair_second(value=$118for_iter.2) ['$118for_iter.2', '$118for_iter.4']
    $phi122.2 = $118for_iter.3               ['$118for_iter.3', '$phi122.2']
    branch $118for_iter.4, 122, 642          ['$118for_iter.4']
label 122:
    j = $phi122.2                            ['$phi122.2', 'j']
    $const126.4 = const(int, 0)              ['$const126.4']
    $128compare_op.5 = j > $const126.4       ['$128compare_op.5', '$const126.4', 'j']
    bool130 = global(bool: <class 'bool'>)   ['bool130']
    $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None) ['$128compare_op.5', '$130pred', 'bool130']
    branch $130pred, 132, 160                ['$130pred']
label 132:
    $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$136binary_subscr.4', 'j', 'source_index']
    $const142.7 = const(int, 1)              ['$const142.7']
    $144binary_subtract.8 = j - $const142.7  ['$144binary_subtract.8', '$const142.7', 'j']
    $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>) ['$144binary_subtract.8', '$146binary_subscr.9', 'source_index']
    $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9 ['$136binary_subscr.4', '$146binary_subscr.9', '$148compare_op.10']
    bool150 = global(bool: <class 'bool'>)   ['bool150']
    $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None) ['$148compare_op.10', '$150pred', 'bool150']
    branch $150pred, 152, 160                ['$150pred']
label 152:
    $152load_global.2 = global(ValueError: <class 'ValueError'>) ['$152load_global.2']
    $const154.3 = const(str, Array index must be increasing) ['$const154.3']
    $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None) ['$152load_global.2', '$156call_function.4', '$const154.3']
    raise $156call_function.4                ['$156call_function.4']
label 160:
    found = const(bool, False)               ['found']
    $const166.4 = const(NoneType, None)      ['$const166.4']
    $168compare_op.5 = target_freq is $const166.4 ['$168compare_op.5', '$const166.4', 'target_freq']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None) ['$168compare_op.5', '$170pred', 'bool170']
    branch $170pred, 174, 454                ['$170pred']
label 174:
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None) ['$176pred', 'before', 'bool176']
    branch $176pred, 180, 296                ['$176pred']
label 180:
    $const182.3 = const(int, 0)              ['$const182.3']
    $184compare_op.4 = i == $const182.3      ['$184compare_op.4', '$const182.3', 'i']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None) ['$184compare_op.4', '$186pred', 'bool186']
    branch $186pred, 188, 210                ['$186pred']
label 188:
    $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$192binary_subscr.4', 'j', 'source_index']
    $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$198binary_subscr.7', 'i', 'target_index']
    $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7 ['$192binary_subscr.4', '$198binary_subscr.7', '$200compare_op.8']
    bool202 = global(bool: <class 'bool'>)   ['bool202']
    $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None) ['$200compare_op.8', '$202pred', 'bool202']
    branch $202pred, 204, 210                ['$202pred']
label 204:
    found = const(bool, True)                ['found']
    jump 294                                 []
label 210:
    $const212.3 = const(int, 0)              ['$const212.3']
    $214compare_op.4 = i > $const212.3       ['$214compare_op.4', '$const212.3', 'i']
    bool216 = global(bool: <class 'bool'>)   ['bool216']
    $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None) ['$214compare_op.4', '$216pred', 'bool216']
    branch $216pred, 220, 270                ['$216pred']
label 220:
    $const224.4 = const(int, 1)              ['$const224.4']
    $226binary_subtract.5 = i - $const224.4  ['$226binary_subtract.5', '$const224.4', 'i']
    $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>) ['$226binary_subtract.5', '$228binary_subscr.6', 'target_index']
    $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$234binary_subscr.9', 'j', 'source_index']
    $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9 ['$228binary_subscr.6', '$234binary_subscr.9', '$240compare_op.11']
    bool242 = global(bool: <class 'bool'>)   ['bool242']
    $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None) ['$240compare_op.11', '$242pred', 'bool242']
    $phi246.2 = $234binary_subscr.9          ['$234binary_subscr.9', '$phi246.2']
    branch $242pred, 246, 260                ['$242pred']
label 246:
    $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$250binary_subscr.5', 'i', 'target_index']
    $252compare_op.6 = $phi246.2 <= $250binary_subscr.5 ['$250binary_subscr.5', '$252compare_op.6', '$phi246.2']
    bool254 = global(bool: <class 'bool'>)   ['bool254']
    $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None) ['$252compare_op.6', '$254pred', 'bool254']
    branch $254pred, 258, 270                ['$254pred']
label 258:
    jump 264                                 []
label 260:
    jump 270                                 []
label 264:
    found = const(bool, True)                ['found']
    jump 294                                 []
label 270:
    $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$274binary_subscr.4', 'j', 'source_index']
    $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$280binary_subscr.7', 'i', 'target_index']
    $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7 ['$274binary_subscr.4', '$280binary_subscr.7', '$282compare_op.8']
    bool284 = global(bool: <class 'bool'>)   ['bool284']
    $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None) ['$282compare_op.8', '$284pred', 'bool284']
    branch $284pred, 288, 452                ['$284pred']
label 288:
    jump 642                                 []
label 294:
    jump 452                                 []
label 296:
    $298load_global.3 = global(len: <built-in function len>) ['$298load_global.3']
    $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None) ['$298load_global.3', '$302call_function.5', 'target_index']
    $const304.6 = const(int, 1)              ['$const304.6']
    $306binary_subtract.7 = $302call_function.5 - $const304.6 ['$302call_function.5', '$306binary_subtract.7', '$const304.6']
    $308compare_op.8 = i == $306binary_subtract.7 ['$306binary_subtract.7', '$308compare_op.8', 'i']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None) ['$308compare_op.8', '$310pred', 'bool310']
    branch $310pred, 314, 338                ['$310pred']
label 314:
    $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$318binary_subscr.4', 'i', 'target_index']
    $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$324binary_subscr.7', 'j', 'source_index']
    $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7 ['$318binary_subscr.4', '$324binary_subscr.7', '$326compare_op.8']
    bool328 = global(bool: <class 'bool'>)   ['bool328']
    $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None) ['$326compare_op.8', '$328pred', 'bool328']
    branch $328pred, 332, 338                ['$328pred']
label 332:
    found = const(bool, True)                ['found']
    jump 452                                 []
label 338:
    $340load_global.3 = global(len: <built-in function len>) ['$340load_global.3']
    $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None) ['$340load_global.3', '$344call_function.5', 'target_index']
    $const346.6 = const(int, 1)              ['$const346.6']
    $348binary_subtract.7 = $344call_function.5 - $const346.6 ['$344call_function.5', '$348binary_subtract.7', '$const346.6']
    $350compare_op.8 = i < $348binary_subtract.7 ['$348binary_subtract.7', '$350compare_op.8', 'i']
    bool352 = global(bool: <class 'bool'>)   ['bool352']
    $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None) ['$350compare_op.8', '$352pred', 'bool352']
    branch $352pred, 356, 406                ['$352pred']
label 356:
    $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$360binary_subscr.4', 'i', 'target_index']
    $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$366binary_subscr.7', 'j', 'source_index']
    $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7 ['$360binary_subscr.4', '$366binary_subscr.7', '$372compare_op.9']
    bool374 = global(bool: <class 'bool'>)   ['bool374']
    $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None) ['$372compare_op.9', '$374pred', 'bool374']
    $phi378.2 = $366binary_subscr.7          ['$366binary_subscr.7', '$phi378.2']
    branch $374pred, 378, 396                ['$374pred']
label 378:
    $const382.5 = const(int, 1)              ['$const382.5']
    $384binary_add.6 = i + $const382.5       ['$384binary_add.6', '$const382.5', 'i']
    $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>) ['$384binary_add.6', '$386binary_subscr.7', 'target_index']
    $388compare_op.8 = $phi378.2 < $386binary_subscr.7 ['$386binary_subscr.7', '$388compare_op.8', '$phi378.2']
    bool390 = global(bool: <class 'bool'>)   ['bool390']
    $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None) ['$388compare_op.8', '$390pred', 'bool390']
    branch $390pred, 394, 406                ['$390pred']
label 394:
    jump 400                                 []
label 396:
    jump 406                                 []
label 400:
    found = const(bool, True)                ['found']
    jump 452                                 []
label 406:
    $408load_global.3 = global(len: <built-in function len>) ['$408load_global.3']
    $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None) ['$408load_global.3', '$412call_function.5', 'target_index']
    $const414.6 = const(int, 1)              ['$const414.6']
    $416binary_subtract.7 = $412call_function.5 - $const414.6 ['$412call_function.5', '$416binary_subtract.7', '$const414.6']
    $418compare_op.8 = i < $416binary_subtract.7 ['$416binary_subtract.7', '$418compare_op.8', 'i']
    bool420 = global(bool: <class 'bool'>)   ['bool420']
    $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None) ['$418compare_op.8', '$420pred', 'bool420']
    branch $420pred, 424, 614                ['$420pred']
label 424:
    $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$428binary_subscr.4', 'j', 'source_index']
    $const434.7 = const(int, 1)              ['$const434.7']
    $436binary_add.8 = i + $const434.7       ['$436binary_add.8', '$const434.7', 'i']
    $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>) ['$436binary_add.8', '$438binary_subscr.9', 'target_index']
    $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9 ['$428binary_subscr.4', '$438binary_subscr.9', '$440compare_op.10']
    bool442 = global(bool: <class 'bool'>)   ['bool442']
    $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None) ['$440compare_op.10', '$442pred', 'bool442']
    branch $442pred, 446, 614                ['$442pred']
label 446:
    jump 642                                 []
label 452:
    jump 614                                 []
label 454:
    bool456 = global(bool: <class 'bool'>)   ['bool456']
    $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None) ['$456pred', 'before', 'bool456']
    branch $456pred, 460, 536                ['$456pred']
label 460:
    $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$464binary_subscr.4', 'i', 'target_index']
    $468binary_subtract.6 = $464binary_subscr.4 - target_freq ['$464binary_subscr.4', '$468binary_subtract.6', 'target_freq']
    $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$474binary_subscr.9', 'j', 'source_index']
    $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9 ['$468binary_subtract.6', '$474binary_subscr.9', '$480compare_op.11']
    bool482 = global(bool: <class 'bool'>)   ['bool482']
    $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None) ['$480compare_op.11', '$482pred', 'bool482']
    $phi486.2 = $474binary_subscr.9          ['$474binary_subscr.9', '$phi486.2']
    branch $482pred, 486, 500                ['$482pred']
label 486:
    $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$490binary_subscr.5', 'i', 'target_index']
    $492compare_op.6 = $phi486.2 <= $490binary_subscr.5 ['$490binary_subscr.5', '$492compare_op.6', '$phi486.2']
    bool494 = global(bool: <class 'bool'>)   ['bool494']
    $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None) ['$492compare_op.6', '$494pred', 'bool494']
    branch $494pred, 498, 510                ['$494pred']
label 498:
    jump 504                                 []
label 500:
    jump 510                                 []
label 504:
    found = const(bool, True)                ['found']
    jump 534                                 []
label 510:
    $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$514binary_subscr.4', 'j', 'source_index']
    $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$520binary_subscr.7', 'i', 'target_index']
    $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7 ['$514binary_subscr.4', '$520binary_subscr.7', '$522compare_op.8']
    bool524 = global(bool: <class 'bool'>)   ['bool524']
    $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None) ['$522compare_op.8', '$524pred', 'bool524']
    branch $524pred, 528, 614                ['$524pred']
label 528:
    jump 642                                 []
label 534:
    jump 614                                 []
label 536:
    $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$540binary_subscr.4', 'i', 'target_index']
    $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$546binary_subscr.7', 'j', 'source_index']
    $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7 ['$540binary_subscr.4', '$546binary_subscr.7', '$552compare_op.9']
    bool554 = global(bool: <class 'bool'>)   ['bool554']
    $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None) ['$552compare_op.9', '$554pred', 'bool554']
    $phi558.2 = $546binary_subscr.7          ['$546binary_subscr.7', '$phi558.2']
    branch $554pred, 558, 576                ['$554pred']
label 558:
    $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$562binary_subscr.5', 'i', 'target_index']
    $566binary_add.7 = $562binary_subscr.5 + target_freq ['$562binary_subscr.5', '$566binary_add.7', 'target_freq']
    $568compare_op.8 = $phi558.2 < $566binary_add.7 ['$566binary_add.7', '$568compare_op.8', '$phi558.2']
    bool570 = global(bool: <class 'bool'>)   ['bool570']
    $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None) ['$568compare_op.8', '$570pred', 'bool570']
    branch $570pred, 574, 586                ['$570pred']
label 574:
    jump 580                                 []
label 576:
    jump 586                                 []
label 580:
    found = const(bool, True)                ['found']
    jump 614                                 []
label 586:
    $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>) ['$590binary_subscr.4', 'j', 'source_index']
    $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>) ['$596binary_subscr.7', 'i', 'target_index']
    $600binary_add.9 = $596binary_subscr.7 + target_freq ['$596binary_subscr.7', '$600binary_add.9', 'target_freq']
    $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9 ['$590binary_subscr.4', '$600binary_add.9', '$602compare_op.10']
    bool604 = global(bool: <class 'bool'>)   ['bool604']
    $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None) ['$602compare_op.10', '$604pred', 'bool604']
    branch $604pred, 608, 614                ['$604pred']
label 608:
    jump 642                                 []
label 614:
    bool616 = global(bool: <class 'bool'>)   ['bool616']
    $616pred = call bool616(found, func=bool616, args=(Var(found, nb.py:152),), kws=(), vararg=None) ['$616pred', 'bool616', 'found']
    branch $616pred, 618, 118                ['$616pred']
label 618:
    $const620.3 = const(int, -1)             ['$const620.3']
    $622compare_op.4 = from_j == $const620.3 ['$622compare_op.4', '$const620.3', 'from_j']
    bool624 = global(bool: <class 'bool'>)   ['bool624']
    $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None) ['$622compare_op.4', '$624pred', 'bool624']
    branch $624pred, 628, 632                ['$624pred']
label 628:
    from_j = j                               ['from_j', 'j']
    jump 632                                 []
label 632:
    $const634.3 = const(int, 1)              ['$const634.3']
    to_j = j + $const634.3                   ['$const634.3', 'j', 'to_j']
    jump 118                                 []
label 642:
    $const644.2 = const(int, -1)             ['$const644.2']
    $646compare_op.3 = from_j == $const644.2 ['$646compare_op.3', '$const644.2', 'from_j']
    bool648 = global(bool: <class 'bool'>)   ['bool648']
    $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None) ['$646compare_op.3', '$648pred', 'bool648']
    branch $648pred, 652, 670                ['$648pred']
label 652:
    $const652.1 = const(int, -1)             ['$const652.1']
    range_starts_out[i] = $const652.1        ['$const652.1', 'i', 'range_starts_out']
    $const660.4 = const(int, -1)             ['$const660.4']
    range_ends_out[i] = $const660.4          ['$const660.4', 'i', 'range_ends_out']
    jump 58                                  []
label 670:
    range_starts_out[i] = from_j             ['from_j', 'i', 'range_starts_out']
    range_ends_out[i] = to_j                 ['i', 'range_ends_out', 'to_j']
    jump 58                                  []
label 688:
    $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)]) ['$692build_tuple.2', 'range_ends_out', 'range_starts_out']
    $694return_value.3 = cast(value=$692build_tuple.2) ['$692build_tuple.2', '$694return_value.3']
    return $694return_value.3                ['$694return_value.3']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: source_index = arg(0, name=source_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_index = arg(1, name=target_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_freq = arg(2, name=target_freq)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: before = arg(3, name=before)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_global.2 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.6 = getattr(value=$12load_global.5, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_attr.15 = getattr(value=$32load_global.14, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46load_global.19 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_global.20 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $56get_iter.24 = getiter(value=$54call_function.23)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi58.0 = $56get_iter.24
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.1 = iternext(value=$phi58.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.2 = pair_first(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.3 = pair_second(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi62.1 = $58for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $58for_iter.3, 62, 688
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 62
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi62.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.4 = i > $const66.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 100
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const82.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $84binary_subtract.7 = i - $const82.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 100
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.2 = const(str, Target index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Target index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $104load_global.2 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $108load_global.4 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114call_function.7 = call $104load_global.2(to_j, $112call_function.6, func=$104load_global.2, args=[Var(to_j, nb.py:143), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $116get_iter.8 = getiter(value=$114call_function.7)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi118.1 = $116get_iter.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 118
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.2 = iternext(value=$phi118.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi122.2 = $118for_iter.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $118for_iter.4, 122, 642
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: j = $phi122.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const126.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $128compare_op.5 = j > $const126.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool130 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $130pred, 132, 160
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 132
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const142.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $144binary_subtract.8 = j - $const142.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool150 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $150pred, 152, 160
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 152
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $152load_global.2 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const154.3 = const(str, Array index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Array index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 160
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const166.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $168compare_op.5 = target_freq is $const166.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool170 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $170pred, 174, 454
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 174
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool176 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $176pred, 180, 296
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 180
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const182.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $184compare_op.4 = i == $const182.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool186 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $186pred, 188, 210
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 188
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool202 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $202pred, 204, 210
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 204
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 210
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const212.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $214compare_op.4 = i > $const212.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool216 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $216pred, 220, 270
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 220
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const224.4 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $226binary_subtract.5 = i - $const224.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool242 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi246.2 = $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $242pred, 246, 260
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 246
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $252compare_op.6 = $phi246.2 <= $250binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool254 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $254pred, 258, 270
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 258
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 264
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 260
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 270
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 264
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 270
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool284 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $284pred, 288, 452
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 288
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 294
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 296
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $298load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const304.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $306binary_subtract.7 = $302call_function.5 - $const304.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $308compare_op.8 = i == $306binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool310 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $310pred, 314, 338
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 314
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool328 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $328pred, 332, 338
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 332
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 338
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $340load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const346.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $348binary_subtract.7 = $344call_function.5 - $const346.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $350compare_op.8 = i < $348binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool352 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $352pred, 356, 406
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 356
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool374 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi378.2 = $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $374pred, 378, 396
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 378
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const382.5 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $384binary_add.6 = i + $const382.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $388compare_op.8 = $phi378.2 < $386binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool390 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $390pred, 394, 406
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 394
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 400
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 396
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 406
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 400
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 406
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $408load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const414.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $416binary_subtract.7 = $412call_function.5 - $const414.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $418compare_op.8 = i < $416binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool420 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $420pred, 424, 614
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 424
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const434.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $436binary_add.8 = i + $const434.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool442 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $442pred, 446, 614
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 446
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 452
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 454
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool456 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $456pred, 460, 536
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 460
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $468binary_subtract.6 = $464binary_subscr.4 - target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool482 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi486.2 = $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $482pred, 486, 500
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 486
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $492compare_op.6 = $phi486.2 <= $490binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool494 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $494pred, 498, 510
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 498
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 504
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 500
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 510
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 504
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 534
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 510
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool524 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $524pred, 528, 614
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 528
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 534
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 536
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool554 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi558.2 = $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $554pred, 558, 576
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 558
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $566binary_add.7 = $562binary_subscr.5 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $568compare_op.8 = $phi558.2 < $566binary_add.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool570 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $570pred, 574, 586
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 574
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 580
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 576
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 586
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 580
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 586
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $600binary_add.9 = $596binary_subscr.7 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool604 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $604pred, 608, 614
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 608
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 614
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool616 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $616pred = call bool616(found, func=bool616, args=(Var(found, nb.py:152),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $616pred, 618, 689
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 618
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const620.3 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool624 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $624pred, 628, 632
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 628
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 632
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 632
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const634.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 689
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 642
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const644.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool648 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $648pred, 652, 670
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 652
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const652.1 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = $const652.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const660.4 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = $const660.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 670
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = to_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 688
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $694return_value.3 = cast(value=$692build_tuple.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $694return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 689
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 690
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$104load_global.2': [<numba.core.ir.Assign object at 0x7fbc94bfb6d0>],
             '$108load_global.4': [<numba.core.ir.Assign object at 0x7fbc94bfb970>],
             '$10call_function.4': [<numba.core.ir.Assign object at 0x7fbc94f87df0>],
             '$112call_function.6': [<numba.core.ir.Assign object at 0x7fbc94bfbc40>],
             '$114call_function.7': [<numba.core.ir.Assign object at 0x7fbc94bfbdc0>],
             '$116get_iter.8': [<numba.core.ir.Assign object at 0x7fbc94bfbf10>],
             '$118for_iter.2': [<numba.core.ir.Assign object at 0x7fbc94c081f0>],
             '$118for_iter.3': [<numba.core.ir.Assign object at 0x7fbc94c08310>],
             '$118for_iter.4': [<numba.core.ir.Assign object at 0x7fbc94c08430>],
             '$128compare_op.5': [<numba.core.ir.Assign object at 0x7fbc94c08af0>],
             '$12load_global.5': [<numba.core.ir.Assign object at 0x7fbc94f87730>],
             '$130pred': [<numba.core.ir.Assign object at 0x7fbc94c08d90>],
             '$136binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94bf6250>],
             '$144binary_subtract.8': [<numba.core.ir.Assign object at 0x7fbc94bf6790>],
             '$146binary_subscr.9': [<numba.core.ir.Assign object at 0x7fbc94bf6910>],
             '$148compare_op.10': [<numba.core.ir.Assign object at 0x7fbc94bf6a90>],
             '$14load_attr.6': [<numba.core.ir.Assign object at 0x7fbc94bd0130>],
             '$150pred': [<numba.core.ir.Assign object at 0x7fbc94bf6d30>],
             '$152load_global.2': [<numba.core.ir.Assign object at 0x7fbc94bf6e50>],
             '$156call_function.4': [<numba.core.ir.Assign object at 0x7fbc94beb1c0>],
             '$168compare_op.5': [<numba.core.ir.Assign object at 0x7fbc94beb9d0>],
             '$170pred': [<numba.core.ir.Assign object at 0x7fbc94bebc70>],
             '$176pred': [<numba.core.ir.Assign object at 0x7fbc94bdd0d0>],
             '$184compare_op.4': [<numba.core.ir.Assign object at 0x7fbc94bdd5b0>],
             '$186pred': [<numba.core.ir.Assign object at 0x7fbc94bdd850>],
             '$192binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94bddcd0>],
             '$198binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94bf00d0>],
             '$200compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94bf0250>],
             '$202pred': [<numba.core.ir.Assign object at 0x7fbc94bf04f0>],
             '$214compare_op.4': [<numba.core.ir.Assign object at 0x7fbc94bf0bb0>],
             '$216pred': [<numba.core.ir.Assign object at 0x7fbc94bf0e50>],
             '$226binary_subtract.5': [<numba.core.ir.Assign object at 0x7fbc94be7490>],
             '$228binary_subscr.6': [<numba.core.ir.Assign object at 0x7fbc94be7610>],
             '$22load_global.9': [<numba.core.ir.Assign object at 0x7fbc94bd0730>],
             '$234binary_subscr.9': [<numba.core.ir.Assign object at 0x7fbc94be79d0>],
             '$240compare_op.11': [<numba.core.ir.Assign object at 0x7fbc94be7c70>],
             '$242pred': [<numba.core.ir.Assign object at 0x7fbc94be7f10>],
             '$24load_attr.10': [<numba.core.ir.Assign object at 0x7fbc94bd08b0>],
             '$250binary_subscr.5': [<numba.core.ir.Assign object at 0x7fbc94fa4310>],
             '$252compare_op.6': [<numba.core.ir.Assign object at 0x7fbc94fa4490>],
             '$254pred': [<numba.core.ir.Assign object at 0x7fbc94fa4730>],
             '$26load_global.11': [<numba.core.ir.Assign object at 0x7fbc94bd0a30>],
             '$274binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94f9c190>],
             '$280binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94f9c550>],
             '$282compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94f9c6d0>],
             '$284pred': [<numba.core.ir.Assign object at 0x7fbc94f9c970>],
             '$298load_global.3': [<numba.core.ir.Assign object at 0x7fbc94f9ceb0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fbc94f87190>],
             '$302call_function.5': [<numba.core.ir.Assign object at 0x7fbc94fb01c0>],
             '$306binary_subtract.7': [<numba.core.ir.Assign object at 0x7fbc94fb0490>],
             '$308compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94fb0610>],
             '$30call_function.13': [<numba.core.ir.Assign object at 0x7fbc94bd0d00>],
             '$310pred': [<numba.core.ir.Assign object at 0x7fbc94fb08b0>],
             '$318binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94fb0cd0>],
             '$324binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94fb80d0>],
             '$326compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94fb8250>],
             '$328pred': [<numba.core.ir.Assign object at 0x7fbc94fb84f0>],
             '$32load_global.14': [<numba.core.ir.Assign object at 0x7fbc94bd0e50>],
             '$340load_global.3': [<numba.core.ir.Assign object at 0x7fbc94fb8a30>],
             '$344call_function.5': [<numba.core.ir.Assign object at 0x7fbc94fb8d00>],
             '$348binary_subtract.7': [<numba.core.ir.Assign object at 0x7fbc94fb8fd0>],
             '$34load_attr.15': [<numba.core.ir.Assign object at 0x7fbc94bd0fd0>],
             '$350compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94f96190>],
             '$352pred': [<numba.core.ir.Assign object at 0x7fbc94f96430>],
             '$360binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94f96850>],
             '$366binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94f96c10>],
             '$372compare_op.9': [<numba.core.ir.Assign object at 0x7fbc94f96eb0>],
             '$374pred': [<numba.core.ir.Assign object at 0x7fbc94f8d190>],
             '$384binary_add.6': [<numba.core.ir.Assign object at 0x7fbc94f8d6d0>],
             '$386binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94f8d850>],
             '$388compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94f8d9d0>],
             '$390pred': [<numba.core.ir.Assign object at 0x7fbc94f8dc70>],
             '$408load_global.3': [<numba.core.ir.Assign object at 0x7fbc94fae5b0>],
             '$412call_function.5': [<numba.core.ir.Assign object at 0x7fbc94fae880>],
             '$416binary_subtract.7': [<numba.core.ir.Assign object at 0x7fbc94faeb50>],
             '$418compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94faecd0>],
             '$420pred': [<numba.core.ir.Assign object at 0x7fbc94faef70>],
             '$428binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94f943d0>],
             '$436binary_add.8': [<numba.core.ir.Assign object at 0x7fbc94f94910>],
             '$438binary_subscr.9': [<numba.core.ir.Assign object at 0x7fbc94f94a90>],
             '$440compare_op.10': [<numba.core.ir.Assign object at 0x7fbc94f94c10>],
             '$442pred': [<numba.core.ir.Assign object at 0x7fbc94f94eb0>],
             '$456pred': [<numba.core.ir.Assign object at 0x7fbc94fa0550>],
             '$464binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94fa09d0>],
             '$468binary_subtract.6': [<numba.core.ir.Assign object at 0x7fbc94fa0c70>],
             '$46load_global.19': [<numba.core.ir.Assign object at 0x7fbc94c068b0>],
             '$474binary_subscr.9': [<numba.core.ir.Assign object at 0x7fbc94fa9070>],
             '$480compare_op.11': [<numba.core.ir.Assign object at 0x7fbc94fa9310>],
             '$482pred': [<numba.core.ir.Assign object at 0x7fbc94fa95b0>],
             '$48load_global.20': [<numba.core.ir.Assign object at 0x7fbc94c06a30>],
             '$490binary_subscr.5': [<numba.core.ir.Assign object at 0x7fbc94fa9910>],
             '$492compare_op.6': [<numba.core.ir.Assign object at 0x7fbc94fa9a90>],
             '$494pred': [<numba.core.ir.Assign object at 0x7fbc94fa9d30>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7fbc94f87bb0>],
             '$514binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94fbe790>],
             '$520binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94fbeb50>],
             '$522compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94fbecd0>],
             '$524pred': [<numba.core.ir.Assign object at 0x7fbc94fbef70>],
             '$52call_function.22': [<numba.core.ir.Assign object at 0x7fbc94c06d00>],
             '$540binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94fb4640>],
             '$546binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94fb4a00>],
             '$54call_function.23': [<numba.core.ir.Assign object at 0x7fbc94c06e80>],
             '$552compare_op.9': [<numba.core.ir.Assign object at 0x7fbc94fb4ca0>],
             '$554pred': [<numba.core.ir.Assign object at 0x7fbc94fb4f40>],
             '$562binary_subscr.5': [<numba.core.ir.Assign object at 0x7fbc94fc6340>],
             '$566binary_add.7': [<numba.core.ir.Assign object at 0x7fbc94fc65e0>],
             '$568compare_op.8': [<numba.core.ir.Assign object at 0x7fbc94fc6760>],
             '$56get_iter.24': [<numba.core.ir.Assign object at 0x7fbc94c06fd0>],
             '$570pred': [<numba.core.ir.Assign object at 0x7fbc94fc6a00>],
             '$58for_iter.1': [<numba.core.ir.Assign object at 0x7fbc94c03190>],
             '$58for_iter.2': [<numba.core.ir.Assign object at 0x7fbc94c032b0>],
             '$58for_iter.3': [<numba.core.ir.Assign object at 0x7fbc94c033d0>],
             '$590binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc94fc2400>],
             '$596binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94fc27c0>],
             '$600binary_add.9': [<numba.core.ir.Assign object at 0x7fbc94fc2a60>],
             '$602compare_op.10': [<numba.core.ir.Assign object at 0x7fbc94fc2be0>],
             '$604pred': [<numba.core.ir.Assign object at 0x7fbc94fc2e80>],
             '$616pred': [<numba.core.ir.Assign object at 0x7fbc95052340>],
             '$622compare_op.4': [<numba.core.ir.Assign object at 0x7fbc95052820>],
             '$624pred': [<numba.core.ir.Assign object at 0x7fbc95052ac0>],
             '$646compare_op.3': [<numba.core.ir.Assign object at 0x7fbc9504e7c0>],
             '$648pred': [<numba.core.ir.Assign object at 0x7fbc9504ea60>],
             '$68compare_op.4': [<numba.core.ir.Assign object at 0x7fbc94c03a90>],
             '$692build_tuple.2': [<numba.core.ir.Assign object at 0x7fbc95058fd0>],
             '$694return_value.3': [<numba.core.ir.Assign object at 0x7fbc95054160>],
             '$6load_global.2': [<numba.core.ir.Assign object at 0x7fbc94f87850>],
             '$70pred': [<numba.core.ir.Assign object at 0x7fbc94c03d30>],
             '$76binary_subscr.3': [<numba.core.ir.Assign object at 0x7fbc94bfe1f0>],
             '$84binary_subtract.7': [<numba.core.ir.Assign object at 0x7fbc94bfe730>],
             '$86binary_subscr.8': [<numba.core.ir.Assign object at 0x7fbc94bfe8b0>],
             '$88compare_op.9': [<numba.core.ir.Assign object at 0x7fbc94bfea30>],
             '$90pred': [<numba.core.ir.Assign object at 0x7fbc94bfecd0>],
             '$92load_global.1': [<numba.core.ir.Assign object at 0x7fbc94bfedf0>],
             '$96call_function.3': [<numba.core.ir.Assign object at 0x7fbc94bfb160>],
             '$const126.4': [<numba.core.ir.Assign object at 0x7fbc94c08970>],
             '$const142.7': [<numba.core.ir.Assign object at 0x7fbc94bf6610>],
             '$const154.3': [<numba.core.ir.Assign object at 0x7fbc94bf6fd0>],
             '$const166.4': [<numba.core.ir.Assign object at 0x7fbc94beb850>],
             '$const182.3': [<numba.core.ir.Assign object at 0x7fbc94bdd430>],
             '$const212.3': [<numba.core.ir.Assign object at 0x7fbc94bf0a30>],
             '$const224.4': [<numba.core.ir.Assign object at 0x7fbc94be7310>],
             '$const304.6': [<numba.core.ir.Assign object at 0x7fbc94fb0310>],
             '$const346.6': [<numba.core.ir.Assign object at 0x7fbc94fb8e50>],
             '$const382.5': [<numba.core.ir.Assign object at 0x7fbc94f8d550>],
             '$const414.6': [<numba.core.ir.Assign object at 0x7fbc94fae9d0>],
             '$const434.7': [<numba.core.ir.Assign object at 0x7fbc94f94790>],
             '$const620.3': [<numba.core.ir.Assign object at 0x7fbc950526a0>],
             '$const634.3': [<numba.core.ir.Assign object at 0x7fbc9504e100>],
             '$const644.2': [<numba.core.ir.Assign object at 0x7fbc9504e640>],
             '$const652.1': [<numba.core.ir.Assign object at 0x7fbc9504eca0>],
             '$const66.3': [<numba.core.ir.Assign object at 0x7fbc94c03910>],
             '$const660.4': [<numba.core.ir.Assign object at 0x7fbc95058160>],
             '$const82.6': [<numba.core.ir.Assign object at 0x7fbc94bfe5b0>],
             '$const94.2': [<numba.core.ir.Assign object at 0x7fbc94bfef70>],
             '$phi118.1': [<numba.core.ir.Assign object at 0x7fbc94bfb580>],
             '$phi122.2': [<numba.core.ir.Assign object at 0x7fbc94c08100>],
             '$phi246.2': [<numba.core.ir.Assign object at 0x7fbc94be70a0>],
             '$phi378.2': [<numba.core.ir.Assign object at 0x7fbc94f966d0>],
             '$phi486.2': [<numba.core.ir.Assign object at 0x7fbc94fa0850>],
             '$phi558.2': [<numba.core.ir.Assign object at 0x7fbc94fb4490>],
             '$phi58.0': [<numba.core.ir.Assign object at 0x7fbc94bd0310>],
             '$phi62.1': [<numba.core.ir.Assign object at 0x7fbc94c030a0>],
             'before': [<numba.core.ir.Assign object at 0x7fbc94f87280>],
             'bool130': [<numba.core.ir.Assign object at 0x7fbc94c08c70>],
             'bool150': [<numba.core.ir.Assign object at 0x7fbc94bf6c10>],
             'bool170': [<numba.core.ir.Assign object at 0x7fbc94bebb50>],
             'bool176': [<numba.core.ir.Assign object at 0x7fbc94bebf70>],
             'bool186': [<numba.core.ir.Assign object at 0x7fbc94bdd730>],
             'bool202': [<numba.core.ir.Assign object at 0x7fbc94bf03d0>],
             'bool216': [<numba.core.ir.Assign object at 0x7fbc94bf0d30>],
             'bool242': [<numba.core.ir.Assign object at 0x7fbc94be7df0>],
             'bool254': [<numba.core.ir.Assign object at 0x7fbc94fa4610>],
             'bool284': [<numba.core.ir.Assign object at 0x7fbc94f9c850>],
             'bool310': [<numba.core.ir.Assign object at 0x7fbc94fb0790>],
             'bool328': [<numba.core.ir.Assign object at 0x7fbc94fb83d0>],
             'bool352': [<numba.core.ir.Assign object at 0x7fbc94f96310>],
             'bool374': [<numba.core.ir.Assign object at 0x7fbc94f8d070>],
             'bool390': [<numba.core.ir.Assign object at 0x7fbc94f8db50>],
             'bool420': [<numba.core.ir.Assign object at 0x7fbc94faee50>],
             'bool442': [<numba.core.ir.Assign object at 0x7fbc94f94d90>],
             'bool456': [<numba.core.ir.Assign object at 0x7fbc94fa0430>],
             'bool482': [<numba.core.ir.Assign object at 0x7fbc94fa9490>],
             'bool494': [<numba.core.ir.Assign object at 0x7fbc94fa9c10>],
             'bool524': [<numba.core.ir.Assign object at 0x7fbc94fbee50>],
             'bool554': [<numba.core.ir.Assign object at 0x7fbc94fb4e20>],
             'bool570': [<numba.core.ir.Assign object at 0x7fbc94fc68e0>],
             'bool604': [<numba.core.ir.Assign object at 0x7fbc94fc2d60>],
             'bool616': [<numba.core.ir.Assign object at 0x7fbc95052220>],
             'bool624': [<numba.core.ir.Assign object at 0x7fbc950529a0>],
             'bool648': [<numba.core.ir.Assign object at 0x7fbc9504e940>],
             'bool70': [<numba.core.ir.Assign object at 0x7fbc94c03c10>],
             'bool90': [<numba.core.ir.Assign object at 0x7fbc94bfebb0>],
             'found': [<numba.core.ir.Assign object at 0x7fbc94beb490>,
                       <numba.core.ir.Assign object at 0x7fbc94bf0610>,
                       <numba.core.ir.Assign object at 0x7fbc94fa4c10>,
                       <numba.core.ir.Assign object at 0x7fbc94fb8610>,
                       <numba.core.ir.Assign object at 0x7fbc94fae190>,
                       <numba.core.ir.Assign object at 0x7fbc94fbe250>,
                       <numba.core.ir.Assign object at 0x7fbc94fc6e80>],
             'from_j': [<numba.core.ir.Assign object at 0x7fbc94bfb430>,
                        <numba.core.ir.Assign object at 0x7fbc95052d60>],
             'i': [<numba.core.ir.Assign object at 0x7fbc94c03670>],
             'j': [<numba.core.ir.Assign object at 0x7fbc94c086d0>],
             'range_ends_out': [<numba.core.ir.Assign object at 0x7fbc94c064c0>],
             'range_starts_out': [<numba.core.ir.Assign object at 0x7fbc94bd05e0>],
             'source_index': [<numba.core.ir.Assign object at 0x7fbc94f87370>],
             'target_freq': [<numba.core.ir.Assign object at 0x7fbc94f874f0>],
             'target_index': [<numba.core.ir.Assign object at 0x7fbc94f877f0>],
             'to_j': [<numba.core.ir.Assign object at 0x7fbc94c06610>,
                      <numba.core.ir.Assign object at 0x7fbc9504e280>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators {'found', 'to_j', 'from_j'}
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var found
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: source_index = arg(0, name=source_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_index = arg(1, name=target_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_freq = arg(2, name=target_freq)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: before = arg(3, name=before)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_global.2 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.6 = getattr(value=$12load_global.5, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_attr.15 = getattr(value=$32load_global.14, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46load_global.19 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_global.20 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $56get_iter.24 = getiter(value=$54call_function.23)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi58.0 = $56get_iter.24
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.1 = iternext(value=$phi58.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.2 = pair_first(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.3 = pair_second(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi62.1 = $58for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $58for_iter.3, 62, 688
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 62
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi62.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.4 = i > $const66.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const82.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $84binary_subtract.7 = i - $const82.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.2 = const(str, Target index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Target index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $104load_global.2 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $108load_global.4 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114call_function.7 = call $104load_global.2(to_j, $112call_function.6, func=$104load_global.2, args=[Var(to_j, nb.py:143), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $116get_iter.8 = getiter(value=$114call_function.7)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi118.1 = $116get_iter.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 118
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.2 = iternext(value=$phi118.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi122.2 = $118for_iter.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $118for_iter.4, 122, 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: j = $phi122.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const126.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $128compare_op.5 = j > $const126.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool130 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $130pred, 132, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 132
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const142.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $144binary_subtract.8 = j - $const142.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool150 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $150pred, 152, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 152
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $152load_global.2 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const154.3 = const(str, Array index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Array index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 160
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: found
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const166.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $168compare_op.5 = target_freq is $const166.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool170 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $170pred, 174, 454
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 174
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool176 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $176pred, 180, 296
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 180
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const182.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $184compare_op.4 = i == $const182.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool186 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $186pred, 188, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 188
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool202 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $202pred, 204, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 204
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: found.1 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 210
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const212.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $214compare_op.4 = i > $const212.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool216 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $216pred, 220, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 220
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const224.4 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $226binary_subtract.5 = i - $const224.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool242 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi246.2 = $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $242pred, 246, 260
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 246
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $252compare_op.6 = $phi246.2 <= $250binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool254 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $254pred, 258, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 258
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 264
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 260
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 264
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: found.2 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 270
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool284 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $284pred, 288, 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 288
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 294
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 296
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $298load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const304.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $306binary_subtract.7 = $302call_function.5 - $const304.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $308compare_op.8 = i == $306binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool310 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $310pred, 314, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 314
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool328 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $328pred, 332, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 332
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: found.3 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 338
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $340load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const346.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $348binary_subtract.7 = $344call_function.5 - $const346.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $350compare_op.8 = i < $348binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool352 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $352pred, 356, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 356
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool374 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi378.2 = $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $374pred, 378, 396
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 378
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const382.5 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $384binary_add.6 = i + $const382.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $388compare_op.8 = $phi378.2 < $386binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool390 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $390pred, 394, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 394
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 400
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 396
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 400
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: found.4 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 406
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $408load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const414.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $416binary_subtract.7 = $412call_function.5 - $const414.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $418compare_op.8 = i < $416binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool420 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $420pred, 424, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 424
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const434.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $436binary_add.8 = i + $const434.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool442 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $442pred, 446, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 446
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 452
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 454
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool456 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $456pred, 460, 536
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 460
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $468binary_subtract.6 = $464binary_subscr.4 - target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool482 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi486.2 = $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $482pred, 486, 500
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 486
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $492compare_op.6 = $phi486.2 <= $490binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool494 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $494pred, 498, 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 498
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 504
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 500
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 504
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: found.5 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 534
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 510
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool524 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $524pred, 528, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 528
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 534
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 536
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool554 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi558.2 = $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $554pred, 558, 576
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 558
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $566binary_add.7 = $562binary_subscr.5 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $568compare_op.8 = $phi558.2 < $566binary_add.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool570 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $570pred, 574, 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 574
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 580
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 576
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 580
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: found.6 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 586
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $600binary_add.9 = $596binary_subscr.7 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool604 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $604pred, 608, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 608
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 614
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool616 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $616pred = call bool616(found, func=bool616, args=(Var(found, nb.py:152),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $616pred, 618, 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 618
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const620.3 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool624 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $624pred, 628, 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 628
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 632
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const634.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 642
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const644.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool648 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $648pred, 652, 670
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 652
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const652.1 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = $const652.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const660.4 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = $const660.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 670
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = to_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 688
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $694return_value.3 = cast(value=$692build_tuple.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $694return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 689
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 690
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc95052400>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {160: [<numba.core.ir.Assign object at 0x7fbc94b72f40>],
             204: [<numba.core.ir.Assign object at 0x7fbc94b7c8e0>],
             264: [<numba.core.ir.Assign object at 0x7fbc94b0c2e0>],
             332: [<numba.core.ir.Assign object at 0x7fbc94b0ccd0>],
             400: [<numba.core.ir.Assign object at 0x7fbc94b15760>],
             504: [<numba.core.ir.Assign object at 0x7fbc94b1f700>],
             580: [<numba.core.ir.Assign object at 0x7fbc94f53ac0>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: source_index = arg(0, name=source_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_index = arg(1, name=target_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_freq = arg(2, name=target_freq)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: before = arg(3, name=before)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_global.2 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.6 = getattr(value=$12load_global.5, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_attr.15 = getattr(value=$32load_global.14, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46load_global.19 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_global.20 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $56get_iter.24 = getiter(value=$54call_function.23)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi58.0 = $56get_iter.24
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.1 = iternext(value=$phi58.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.2 = pair_first(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.3 = pair_second(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi62.1 = $58for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $58for_iter.3, 62, 688
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 62
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi62.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.4 = i > $const66.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const82.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $84binary_subtract.7 = i - $const82.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.2 = const(str, Target index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Target index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $104load_global.2 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $108load_global.4 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114call_function.7 = call $104load_global.2(to_j, $112call_function.6, func=$104load_global.2, args=[Var(to_j, nb.py:143), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $116get_iter.8 = getiter(value=$114call_function.7)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi118.1 = $116get_iter.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 118
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.2 = iternext(value=$phi118.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi122.2 = $118for_iter.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $118for_iter.4, 122, 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: j = $phi122.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const126.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $128compare_op.5 = j > $const126.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool130 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $130pred, 132, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 132
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const142.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $144binary_subtract.8 = j - $const142.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool150 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $150pred, 152, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 152
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $152load_global.2 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const154.3 = const(str, Array index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Array index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 160
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const166.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $168compare_op.5 = target_freq is $const166.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool170 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $170pred, 174, 454
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 174
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool176 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $176pred, 180, 296
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 180
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const182.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $184compare_op.4 = i == $const182.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool186 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $186pred, 188, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 188
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool202 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $202pred, 204, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 204
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.1 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 210
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const212.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $214compare_op.4 = i > $const212.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool216 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $216pred, 220, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 220
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const224.4 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $226binary_subtract.5 = i - $const224.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool242 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi246.2 = $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $242pred, 246, 260
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 246
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $252compare_op.6 = $phi246.2 <= $250binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool254 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $254pred, 258, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 258
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 264
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 260
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 264
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.2 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 270
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool284 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $284pred, 288, 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 288
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 294
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 296
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $298load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const304.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $306binary_subtract.7 = $302call_function.5 - $const304.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $308compare_op.8 = i == $306binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool310 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $310pred, 314, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 314
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool328 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $328pred, 332, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 332
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.3 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 338
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $340load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const346.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $348binary_subtract.7 = $344call_function.5 - $const346.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $350compare_op.8 = i < $348binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool352 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $352pred, 356, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 356
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool374 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi378.2 = $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $374pred, 378, 396
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 378
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const382.5 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $384binary_add.6 = i + $const382.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $388compare_op.8 = $phi378.2 < $386binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool390 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $390pred, 394, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 394
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 400
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 396
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 400
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.4 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 406
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $408load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const414.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $416binary_subtract.7 = $412call_function.5 - $const414.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $418compare_op.8 = i < $416binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool420 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $420pred, 424, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 424
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const434.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $436binary_add.8 = i + $const434.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool442 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $442pred, 446, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 446
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 452
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 454
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool456 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $456pred, 460, 536
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 460
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $468binary_subtract.6 = $464binary_subscr.4 - target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool482 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi486.2 = $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $482pred, 486, 500
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 486
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $492compare_op.6 = $phi486.2 <= $490binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool494 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $494pred, 498, 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 498
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 504
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 500
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 504
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.5 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 534
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 510
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool524 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $524pred, 528, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 528
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 534
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 536
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool554 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi558.2 = $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $554pred, 558, 576
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 558
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $566binary_add.7 = $562binary_subscr.5 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $568compare_op.8 = $phi558.2 < $566binary_add.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool570 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $570pred, 574, 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 574
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 580
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 576
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 580
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.6 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 586
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $600binary_add.9 = $596binary_subscr.7 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool604 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $604pred, 608, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 608
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 614
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool616 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $616pred = call bool616(found, func=bool616, args=(Var(found, nb.py:152),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='found' stmt=$616pred = call bool616(found, func=bool616, args=(Var(found, nb.py:152),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 614
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node found.7 = phi(incoming_values=[], incoming_blocks=[]) at 614
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 452
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 452
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node found.8 = phi(incoming_values=[], incoming_blocks=[]) at 452
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 294
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 294
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node found.9 = phi(incoming_values=[], incoming_blocks=[]) at 294
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 264
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.2 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 204
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.1 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.9 = phi(incoming_values=[Var(found.2, nb.py:158), Var(found.1, nb.py:156)], incoming_blocks=[264, 204])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 332
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.3 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 400
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.4 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 270
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 270
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 210 from label 270
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 210
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 210
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 180 from label 210
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 180
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 180
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 174 from label 180
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 174
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 174
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 174
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.8 = phi(incoming_values=[Var(found.9, nb.py:179), Var(found.3, nb.py:163), Var(found.4, nb.py:165), Var(found, nb.py:152)], incoming_blocks=[294, 332, 400, 270])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 580
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.6 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 424
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 424
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 406 from label 424
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 406
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 406
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 338 from label 406
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 338
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 338
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 296 from label 338
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 296
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 296
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 174 from label 296
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 174
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 174
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 174
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 586
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 586
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 536 from label 586
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 536
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 536
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 454 from label 536
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 454
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 454
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 454
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 534
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 534
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 504 from label 534
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 504
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found.5 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 406
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 406
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 338 from label 406
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 338
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 338
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 296 from label 338
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 296
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 296
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 174 from label 296
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 174
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 174
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 174
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 510
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 510
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 460 from label 510
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 460
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 460
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 454 from label 460
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 454
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 454
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 454
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $616pred = call bool616(found.7, func=bool616, args=(Var(found.7, nb.py:179),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $616pred, 618, 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 618
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const620.3 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool624 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $624pred, 628, 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 628
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 632
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const634.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 642
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const644.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool648 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $648pred, 652, 670
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 652
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const652.1 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = $const652.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const660.4 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = $const660.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 670
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = to_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 688
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $694return_value.3 = cast(value=$692build_tuple.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $694return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 689
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 690
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34100>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var to_j
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: source_index = arg(0, name=source_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_index = arg(1, name=target_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_freq = arg(2, name=target_freq)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: before = arg(3, name=before)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_global.2 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.6 = getattr(value=$12load_global.5, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_attr.15 = getattr(value=$32load_global.14, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: to_j
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46load_global.19 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_global.20 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $56get_iter.24 = getiter(value=$54call_function.23)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi58.0 = $56get_iter.24
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.1 = iternext(value=$phi58.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.2 = pair_first(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.3 = pair_second(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi62.1 = $58for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $58for_iter.3, 62, 688
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 62
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi62.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.4 = i > $const66.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const82.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $84binary_subtract.7 = i - $const82.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.2 = const(str, Target index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Target index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $104load_global.2 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $108load_global.4 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114call_function.7 = call $104load_global.2(to_j, $112call_function.6, func=$104load_global.2, args=[Var(to_j, nb.py:143), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $116get_iter.8 = getiter(value=$114call_function.7)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi118.1 = $116get_iter.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 118
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.2 = iternext(value=$phi118.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi122.2 = $118for_iter.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $118for_iter.4, 122, 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: j = $phi122.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const126.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $128compare_op.5 = j > $const126.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool130 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $130pred, 132, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 132
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const142.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $144binary_subtract.8 = j - $const142.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool150 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $150pred, 152, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 152
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $152load_global.2 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const154.3 = const(str, Array index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Array index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 160
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const166.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $168compare_op.5 = target_freq is $const166.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool170 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $170pred, 174, 454
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 174
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool176 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $176pred, 180, 296
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 180
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const182.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $184compare_op.4 = i == $const182.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool186 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $186pred, 188, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 188
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool202 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $202pred, 204, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 204
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.1 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 210
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const212.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $214compare_op.4 = i > $const212.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool216 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $216pred, 220, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 220
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const224.4 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $226binary_subtract.5 = i - $const224.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool242 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi246.2 = $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $242pred, 246, 260
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 246
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $252compare_op.6 = $phi246.2 <= $250binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool254 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $254pred, 258, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 258
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 264
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 260
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 264
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.2 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 270
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool284 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $284pred, 288, 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 288
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 294
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.9 = phi(incoming_values=[Var(found.2, nb.py:158), Var(found.1, nb.py:156)], incoming_blocks=[264, 204])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 296
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $298load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const304.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $306binary_subtract.7 = $302call_function.5 - $const304.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $308compare_op.8 = i == $306binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool310 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $310pred, 314, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 314
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool328 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $328pred, 332, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 332
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.3 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 338
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $340load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const346.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $348binary_subtract.7 = $344call_function.5 - $const346.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $350compare_op.8 = i < $348binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool352 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $352pred, 356, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 356
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool374 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi378.2 = $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $374pred, 378, 396
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 378
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const382.5 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $384binary_add.6 = i + $const382.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $388compare_op.8 = $phi378.2 < $386binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool390 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $390pred, 394, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 394
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 400
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 396
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 400
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.4 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 406
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $408load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const414.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $416binary_subtract.7 = $412call_function.5 - $const414.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $418compare_op.8 = i < $416binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool420 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $420pred, 424, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 424
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const434.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $436binary_add.8 = i + $const434.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool442 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $442pred, 446, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 446
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 452
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.8 = phi(incoming_values=[Var(found.9, nb.py:179), Var(found.3, nb.py:163), Var(found.4, nb.py:165), Var(found, nb.py:152)], incoming_blocks=[294, 332, 400, 270])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 454
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool456 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $456pred, 460, 536
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 460
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $468binary_subtract.6 = $464binary_subscr.4 - target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool482 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi486.2 = $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $482pred, 486, 500
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 486
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $492compare_op.6 = $phi486.2 <= $490binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool494 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $494pred, 498, 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 498
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 504
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 500
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 504
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.5 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 534
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 510
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool524 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $524pred, 528, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 528
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 534
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 536
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool554 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi558.2 = $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $554pred, 558, 576
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 558
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $566binary_add.7 = $562binary_subscr.5 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $568compare_op.8 = $phi558.2 < $566binary_add.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool570 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $570pred, 574, 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 574
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 580
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 576
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 580
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.6 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 586
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $600binary_add.9 = $596binary_subscr.7 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool604 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $604pred, 608, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 608
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 614
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.7 = phi(incoming_values=[Var(found.8, nb.py:179), Var(found.6, nb.py:176), Var(found, nb.py:152), Var(found, nb.py:152), Var(found.5, nb.py:171), Var(found, nb.py:152), Var(found, nb.py:152)], incoming_blocks=[452, 580, 424, 586, 534, 406, 510])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool616 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $616pred = call bool616(found.7, func=bool616, args=(Var(found.7, nb.py:179),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $616pred, 618, 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 618
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const620.3 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool624 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $624pred, 628, 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 628
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 632
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const634.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: to_j.1 = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 642
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const644.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool648 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $648pred, 652, 670
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 652
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const652.1 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = $const652.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const660.4 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = $const660.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 670
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = to_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 688
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $694return_value.3 = cast(value=$692build_tuple.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $694return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 689
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 690
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94f8be80>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbc94b29f10>],
             632: [<numba.core.ir.Assign object at 0x7fbc94aba1f0>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: source_index = arg(0, name=source_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_index = arg(1, name=target_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_freq = arg(2, name=target_freq)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: before = arg(3, name=before)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_global.2 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.6 = getattr(value=$12load_global.5, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_attr.15 = getattr(value=$32load_global.14, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46load_global.19 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_global.20 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $56get_iter.24 = getiter(value=$54call_function.23)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi58.0 = $56get_iter.24
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.1 = iternext(value=$phi58.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.2 = pair_first(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.3 = pair_second(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi62.1 = $58for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $58for_iter.3, 62, 688
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 62
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi62.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.4 = i > $const66.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const82.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $84binary_subtract.7 = i - $const82.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.2 = const(str, Target index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Target index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $104load_global.2 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $108load_global.4 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114call_function.7 = call $104load_global.2(to_j, $112call_function.6, func=$104load_global.2, args=[Var(to_j, nb.py:143), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='to_j' stmt=$114call_function.7 = call $104load_global.2(to_j, $112call_function.6, func=$104load_global.2, args=[Var(to_j, nb.py:143), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 100
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 62 from label 100
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 62
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 62
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 58 from label 62
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 58
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 58
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node to_j.2 = phi(incoming_values=[], incoming_blocks=[]) at 58
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 690
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 690
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 642 from label 690
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 642
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 642
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 642
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 118
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node to_j.3 = phi(incoming_values=[], incoming_blocks=[]) at 118
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 689
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 689
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node to_j.4 = phi(incoming_values=[], incoming_blocks=[]) at 689
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 632
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def to_j.1 = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 614
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 614
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 614
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 160
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 122 from label 160
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 122
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 122
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 122
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def to_j.3 = phi(incoming_values=[], incoming_blocks=[])
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def to_j.4 = phi(incoming_values=[Var(to_j.1, nb.py:182), Var(to_j.3, nb.py:148)], incoming_blocks=[632, 614])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 100
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 100
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 62 from label 100
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 62
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 62
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 58 from label 62
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 58
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def to_j.2 = phi(incoming_values=[Var(to_j, nb.py:143)], incoming_blocks=[0])
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def to_j.3 = phi(incoming_values=[Var(to_j.4, nb.py:148), Var(to_j.2, nb.py:148)], incoming_blocks=[689, 100])
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $114call_function.7 = call $104load_global.2(to_j.2, $112call_function.6, func=$104load_global.2, args=[Var(to_j.2, nb.py:148), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $116get_iter.8 = getiter(value=$114call_function.7)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi118.1 = $116get_iter.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 118
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.2 = iternext(value=$phi118.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi122.2 = $118for_iter.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $118for_iter.4, 122, 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: j = $phi122.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const126.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $128compare_op.5 = j > $const126.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool130 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $130pred, 132, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 132
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const142.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $144binary_subtract.8 = j - $const142.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool150 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $150pred, 152, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 152
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $152load_global.2 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const154.3 = const(str, Array index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Array index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 160
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const166.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $168compare_op.5 = target_freq is $const166.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool170 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $170pred, 174, 454
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 174
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool176 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $176pred, 180, 296
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 180
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const182.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $184compare_op.4 = i == $const182.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool186 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $186pred, 188, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 188
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool202 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $202pred, 204, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 204
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.1 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 210
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const212.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $214compare_op.4 = i > $const212.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool216 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $216pred, 220, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 220
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const224.4 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $226binary_subtract.5 = i - $const224.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool242 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi246.2 = $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $242pred, 246, 260
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 246
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $252compare_op.6 = $phi246.2 <= $250binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool254 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $254pred, 258, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 258
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 264
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 260
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 264
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.2 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 270
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool284 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $284pred, 288, 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 288
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 294
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.9 = phi(incoming_values=[Var(found.2, nb.py:158), Var(found.1, nb.py:156)], incoming_blocks=[264, 204])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 296
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $298load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const304.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $306binary_subtract.7 = $302call_function.5 - $const304.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $308compare_op.8 = i == $306binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool310 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $310pred, 314, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 314
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool328 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $328pred, 332, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 332
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.3 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 338
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $340load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const346.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $348binary_subtract.7 = $344call_function.5 - $const346.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $350compare_op.8 = i < $348binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool352 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $352pred, 356, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 356
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool374 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi378.2 = $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $374pred, 378, 396
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 378
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const382.5 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $384binary_add.6 = i + $const382.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $388compare_op.8 = $phi378.2 < $386binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool390 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $390pred, 394, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 394
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 400
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 396
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 400
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.4 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 406
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $408load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const414.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $416binary_subtract.7 = $412call_function.5 - $const414.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $418compare_op.8 = i < $416binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool420 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $420pred, 424, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 424
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const434.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $436binary_add.8 = i + $const434.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool442 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $442pred, 446, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 446
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 452
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.8 = phi(incoming_values=[Var(found.9, nb.py:179), Var(found.3, nb.py:163), Var(found.4, nb.py:165), Var(found, nb.py:152)], incoming_blocks=[294, 332, 400, 270])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 454
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool456 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $456pred, 460, 536
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 460
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $468binary_subtract.6 = $464binary_subscr.4 - target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool482 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi486.2 = $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $482pred, 486, 500
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 486
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $492compare_op.6 = $phi486.2 <= $490binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool494 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $494pred, 498, 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 498
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 504
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 500
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 504
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.5 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 534
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 510
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool524 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $524pred, 528, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 528
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 534
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 536
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool554 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi558.2 = $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $554pred, 558, 576
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 558
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $566binary_add.7 = $562binary_subscr.5 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $568compare_op.8 = $phi558.2 < $566binary_add.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool570 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $570pred, 574, 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 574
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 580
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 576
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 580
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.6 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 586
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $600binary_add.9 = $596binary_subscr.7 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool604 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $604pred, 608, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 608
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 614
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.7 = phi(incoming_values=[Var(found.8, nb.py:179), Var(found.6, nb.py:176), Var(found, nb.py:152), Var(found, nb.py:152), Var(found.5, nb.py:171), Var(found, nb.py:152), Var(found, nb.py:152)], incoming_blocks=[452, 580, 424, 586, 534, 406, 510])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool616 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $616pred = call bool616(found.7, func=bool616, args=(Var(found.7, nb.py:179),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $616pred, 618, 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 618
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const620.3 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool624 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $624pred, 628, 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 628
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 632
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const634.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.1 = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 642
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const644.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool648 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $648pred, 652, 670
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 652
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const652.1 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = $const652.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const660.4 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = $const660.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 670
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = to_j
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='to_j' stmt=range_ends_out[i] = to_j
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 670
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 642 from label 670
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 642
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 642
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 642
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: range_ends_out[i] = to_j.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 688
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $694return_value.3 = cast(value=$692build_tuple.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $694return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 689
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 690
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b02970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var from_j
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: source_index = arg(0, name=source_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_index = arg(1, name=target_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_freq = arg(2, name=target_freq)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: before = arg(3, name=before)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_global.2 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.6 = getattr(value=$12load_global.5, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_attr.15 = getattr(value=$32load_global.14, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46load_global.19 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_global.20 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $56get_iter.24 = getiter(value=$54call_function.23)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi58.0 = $56get_iter.24
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.2 = phi(incoming_values=[Var(to_j, nb.py:143), Var(to_j.3, nb.py:148)], incoming_blocks=[0, 690])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.1 = iternext(value=$phi58.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.2 = pair_first(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.3 = pair_second(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi62.1 = $58for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $58for_iter.3, 62, 688
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 62
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi62.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.4 = i > $const66.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const82.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $84binary_subtract.7 = i - $const82.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.2 = const(str, Target index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Target index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: from_j
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $104load_global.2 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $108load_global.4 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114call_function.7 = call $104load_global.2(to_j.2, $112call_function.6, func=$104load_global.2, args=[Var(to_j.2, nb.py:148), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $116get_iter.8 = getiter(value=$114call_function.7)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi118.1 = $116get_iter.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 118
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.3 = phi(incoming_values=[Var(to_j.4, nb.py:148), Var(to_j.2, nb.py:148)], incoming_blocks=[689, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.2 = iternext(value=$phi118.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi122.2 = $118for_iter.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $118for_iter.4, 122, 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: j = $phi122.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const126.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $128compare_op.5 = j > $const126.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool130 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $130pred, 132, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 132
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const142.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $144binary_subtract.8 = j - $const142.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool150 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $150pred, 152, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 152
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $152load_global.2 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const154.3 = const(str, Array index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Array index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 160
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const166.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $168compare_op.5 = target_freq is $const166.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool170 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $170pred, 174, 454
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 174
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool176 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $176pred, 180, 296
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 180
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const182.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $184compare_op.4 = i == $const182.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool186 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $186pred, 188, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 188
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool202 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $202pred, 204, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 204
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.1 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 210
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const212.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $214compare_op.4 = i > $const212.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool216 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $216pred, 220, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 220
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const224.4 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $226binary_subtract.5 = i - $const224.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool242 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi246.2 = $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $242pred, 246, 260
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 246
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $252compare_op.6 = $phi246.2 <= $250binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool254 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $254pred, 258, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 258
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 264
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 260
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 264
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.2 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 270
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool284 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $284pred, 288, 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 288
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 294
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.9 = phi(incoming_values=[Var(found.2, nb.py:158), Var(found.1, nb.py:156)], incoming_blocks=[264, 204])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 296
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $298load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const304.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $306binary_subtract.7 = $302call_function.5 - $const304.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $308compare_op.8 = i == $306binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool310 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $310pred, 314, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 314
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool328 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $328pred, 332, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 332
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.3 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 338
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $340load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const346.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $348binary_subtract.7 = $344call_function.5 - $const346.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $350compare_op.8 = i < $348binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool352 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $352pred, 356, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 356
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool374 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi378.2 = $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $374pred, 378, 396
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 378
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const382.5 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $384binary_add.6 = i + $const382.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $388compare_op.8 = $phi378.2 < $386binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool390 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $390pred, 394, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 394
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 400
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 396
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 400
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.4 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 406
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $408load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const414.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $416binary_subtract.7 = $412call_function.5 - $const414.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $418compare_op.8 = i < $416binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool420 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $420pred, 424, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 424
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const434.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $436binary_add.8 = i + $const434.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool442 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $442pred, 446, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 446
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 452
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.8 = phi(incoming_values=[Var(found.9, nb.py:179), Var(found.3, nb.py:163), Var(found.4, nb.py:165), Var(found, nb.py:152)], incoming_blocks=[294, 332, 400, 270])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 454
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool456 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $456pred, 460, 536
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 460
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $468binary_subtract.6 = $464binary_subscr.4 - target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool482 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi486.2 = $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $482pred, 486, 500
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 486
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $492compare_op.6 = $phi486.2 <= $490binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool494 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $494pred, 498, 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 498
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 504
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 500
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 504
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.5 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 534
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 510
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool524 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $524pred, 528, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 528
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 534
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 536
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool554 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi558.2 = $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $554pred, 558, 576
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 558
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $566binary_add.7 = $562binary_subscr.5 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $568compare_op.8 = $phi558.2 < $566binary_add.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool570 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $570pred, 574, 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 574
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 580
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 576
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 580
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.6 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 586
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $600binary_add.9 = $596binary_subscr.7 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool604 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $604pred, 608, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 608
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 614
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.7 = phi(incoming_values=[Var(found.8, nb.py:179), Var(found.6, nb.py:176), Var(found, nb.py:152), Var(found, nb.py:152), Var(found.5, nb.py:171), Var(found, nb.py:152), Var(found, nb.py:152)], incoming_blocks=[452, 580, 424, 586, 534, 406, 510])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool616 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $616pred = call bool616(found.7, func=bool616, args=(Var(found.7, nb.py:179),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $616pred, 618, 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 618
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const620.3 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool624 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $624pred, 628, 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 628
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = j
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: from_j.1 = j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 632
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const634.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.1 = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 642
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const644.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool648 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $648pred, 652, 670
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 652
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const652.1 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = $const652.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const660.4 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = $const660.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 670
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = to_j.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 688
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $694return_value.3 = cast(value=$692build_tuple.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $694return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 689
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.4 = phi(incoming_values=[Var(to_j.1, nb.py:182), Var(to_j.3, nb.py:148)], incoming_blocks=[632, 614])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 690
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94aba970>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {100: [<numba.core.ir.Assign object at 0x7fbc94a9c460>],
             628: [<numba.core.ir.Assign object at 0x7fbc94a3fdf0>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: source_index = arg(0, name=source_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_index = arg(1, name=target_index)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: target_freq = arg(2, name=target_freq)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: before = arg(3, name=before)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_global.2 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_function.4 = call $6load_global.2(target_index, func=$6load_global.2, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.6 = getattr(value=$12load_global.5, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out = call $4load_attr.1($10call_function.4, func=$4load_attr.1, args=[Var($10call_function.4, nb.py:140)], kws=[('dtype', Var($14load_attr.6, nb.py:140))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_global.9 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_attr.10 = getattr(value=$22load_global.9, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(target_index, func=$26load_global.11, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32load_global.14 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_attr.15 = getattr(value=$32load_global.14, attr=int_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out = call $24load_attr.10($30call_function.13, func=$24load_attr.10, args=[Var($30call_function.13, nb.py:141)], kws=[('dtype', Var($34load_attr.15, nb.py:141))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46load_global.19 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_global.20 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52call_function.22 = call $48load_global.20(target_index, func=$48load_global.20, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.23 = call $46load_global.19($52call_function.22, func=$46load_global.19, args=[Var($52call_function.22, nb.py:144)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $56get_iter.24 = getiter(value=$54call_function.23)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi58.0 = $56get_iter.24
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.2 = phi(incoming_values=[Var(to_j, nb.py:143), Var(to_j.3, nb.py:148)], incoming_blocks=[0, 690])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.1 = iternext(value=$phi58.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.2 = pair_first(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $58for_iter.3 = pair_second(value=$58for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi62.1 = $58for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $58for_iter.3, 62, 688
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 62
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi62.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.4 = i > $const66.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.4, func=bool70, args=(Var($68compare_op.4, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76binary_subscr.3 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const82.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $84binary_subtract.7 = i - $const82.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $86binary_subscr.8 = getitem(value=target_index, index=$84binary_subtract.7, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.9 = $76binary_subscr.3 < $86binary_subscr.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.9, func=bool90, args=(Var($88compare_op.9, nb.py:145),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 100
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.2 = const(str, Target index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96call_function.3 = call $92load_global.1($const94.2, func=$92load_global.1, args=[Var($const94.2, nb.py:146)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Target index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $104load_global.2 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $108load_global.4 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $112call_function.6 = call $108load_global.4(source_index, func=$108load_global.4, args=[Var(source_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114call_function.7 = call $104load_global.2(to_j.2, $112call_function.6, func=$104load_global.2, args=[Var(to_j.2, nb.py:148), Var($112call_function.6, nb.py:149)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $116get_iter.8 = getiter(value=$114call_function.7)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi118.1 = $116get_iter.8
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 118
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.3 = phi(incoming_values=[Var(to_j.4, nb.py:148), Var(to_j.2, nb.py:148)], incoming_blocks=[689, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.2 = iternext(value=$phi118.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.3 = pair_first(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $118for_iter.4 = pair_second(value=$118for_iter.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi122.2 = $118for_iter.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $118for_iter.4, 122, 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: j = $phi122.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const126.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $128compare_op.5 = j > $const126.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool130 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $130pred = call bool130($128compare_op.5, func=bool130, args=(Var($128compare_op.5, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $130pred, 132, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 132
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const142.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $144binary_subtract.8 = j - $const142.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $146binary_subscr.9 = getitem(value=source_index, index=$144binary_subtract.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $148compare_op.10 = $136binary_subscr.4 < $146binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool150 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $150pred = call bool150($148compare_op.10, func=bool150, args=(Var($148compare_op.10, nb.py:150),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $150pred, 152, 160
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 152
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $152load_global.2 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const154.3 = const(str, Array index must be increasing)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156call_function.4 = call $152load_global.2($const154.3, func=$152load_global.2, args=[Var($const154.3, nb.py:151)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('Array index must be increasing')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 160
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found = const(bool, False)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const166.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $168compare_op.5 = target_freq is $const166.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool170 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $170pred = call bool170($168compare_op.5, func=bool170, args=(Var($168compare_op.5, nb.py:153),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $170pred, 174, 454
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 174
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool176 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $176pred = call bool176(before, func=bool176, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $176pred, 180, 296
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 180
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const182.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $184compare_op.4 = i == $const182.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool186 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $186pred = call bool186($184compare_op.4, func=bool186, args=(Var($184compare_op.4, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $186pred, 188, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 188
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $192binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $198binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $200compare_op.8 = $192binary_subscr.4 <= $198binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool202 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $202pred = call bool202($200compare_op.8, func=bool202, args=(Var($200compare_op.8, nb.py:155),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $202pred, 204, 210
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 204
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.1 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 210
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const212.3 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $214compare_op.4 = i > $const212.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool216 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $216pred = call bool216($214compare_op.4, func=bool216, args=(Var($214compare_op.4, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $216pred, 220, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 220
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const224.4 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $226binary_subtract.5 = i - $const224.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $228binary_subscr.6 = getitem(value=target_index, index=$226binary_subtract.5, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $234binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $240compare_op.11 = $228binary_subscr.6 < $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool242 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $242pred = call bool242($240compare_op.11, func=bool242, args=(Var($240compare_op.11, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi246.2 = $234binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $242pred, 246, 260
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 246
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $250binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $252compare_op.6 = $phi246.2 <= $250binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool254 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $254pred = call bool254($252compare_op.6, func=bool254, args=(Var($252compare_op.6, nb.py:157),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $254pred, 258, 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 258
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 264
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 260
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 270
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 264
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.2 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 294
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 270
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $274binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $280binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $282compare_op.8 = $274binary_subscr.4 > $280binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool284 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $284pred = call bool284($282compare_op.8, func=bool284, args=(Var($282compare_op.8, nb.py:159),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $284pred, 288, 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 288
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 294
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.9 = phi(incoming_values=[Var(found.2, nb.py:158), Var(found.1, nb.py:156)], incoming_blocks=[264, 204])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 296
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $298load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $302call_function.5 = call $298load_global.3(target_index, func=$298load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const304.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $306binary_subtract.7 = $302call_function.5 - $const304.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $308compare_op.8 = i == $306binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool310 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $310pred = call bool310($308compare_op.8, func=bool310, args=(Var($308compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $310pred, 314, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 314
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $318binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $324binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $326compare_op.8 = $318binary_subscr.4 <= $324binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool328 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $328pred = call bool328($326compare_op.8, func=bool328, args=(Var($326compare_op.8, nb.py:162),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $328pred, 332, 338
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 332
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.3 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 338
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $340load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $344call_function.5 = call $340load_global.3(target_index, func=$340load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const346.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $348binary_subtract.7 = $344call_function.5 - $const346.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $350compare_op.8 = i < $348binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool352 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $352pred = call bool352($350compare_op.8, func=bool352, args=(Var($350compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $352pred, 356, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 356
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $360binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $366binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $372compare_op.9 = $360binary_subscr.4 <= $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool374 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $374pred = call bool374($372compare_op.9, func=bool374, args=(Var($372compare_op.9, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi378.2 = $366binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $374pred, 378, 396
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 378
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const382.5 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $384binary_add.6 = i + $const382.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $386binary_subscr.7 = getitem(value=target_index, index=$384binary_add.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $388compare_op.8 = $phi378.2 < $386binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool390 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $390pred = call bool390($388compare_op.8, func=bool390, args=(Var($388compare_op.8, nb.py:164),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $390pred, 394, 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 394
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 400
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 396
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 406
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 400
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.4 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 452
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 406
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $408load_global.3 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $412call_function.5 = call $408load_global.3(target_index, func=$408load_global.3, args=[Var(target_index, nb.py:140)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const414.6 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $416binary_subtract.7 = $412call_function.5 - $const414.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $418compare_op.8 = i < $416binary_subtract.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool420 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $420pred = call bool420($418compare_op.8, func=bool420, args=(Var($418compare_op.8, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $420pred, 424, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 424
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $428binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const434.7 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $436binary_add.8 = i + $const434.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $438binary_subscr.9 = getitem(value=target_index, index=$436binary_add.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $440compare_op.10 = $428binary_subscr.4 >= $438binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool442 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $442pred = call bool442($440compare_op.10, func=bool442, args=(Var($440compare_op.10, nb.py:166),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $442pred, 446, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 446
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 452
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.8 = phi(incoming_values=[Var(found.9, nb.py:179), Var(found.3, nb.py:163), Var(found.4, nb.py:165), Var(found, nb.py:152)], incoming_blocks=[294, 332, 400, 270])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 454
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool456 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $456pred = call bool456(before, func=bool456, args=(Var(before, nb.py:140),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $456pred, 460, 536
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 460
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $464binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $468binary_subtract.6 = $464binary_subscr.4 - target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $474binary_subscr.9 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $480compare_op.11 = $468binary_subtract.6 < $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool482 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $482pred = call bool482($480compare_op.11, func=bool482, args=(Var($480compare_op.11, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi486.2 = $474binary_subscr.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $482pred, 486, 500
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 486
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $490binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $492compare_op.6 = $phi486.2 <= $490binary_subscr.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool494 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $494pred = call bool494($492compare_op.6, func=bool494, args=(Var($492compare_op.6, nb.py:170),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $494pred, 498, 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 498
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 504
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 500
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 510
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 504
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.5 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 534
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 510
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $514binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $520binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $522compare_op.8 = $514binary_subscr.4 > $520binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool524 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $524pred = call bool524($522compare_op.8, func=bool524, args=(Var($522compare_op.8, nb.py:172),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $524pred, 528, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 528
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 534
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 536
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $540binary_subscr.4 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $546binary_subscr.7 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $552compare_op.9 = $540binary_subscr.4 <= $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool554 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $554pred = call bool554($552compare_op.9, func=bool554, args=(Var($552compare_op.9, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi558.2 = $546binary_subscr.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $554pred, 558, 576
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 558
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $562binary_subscr.5 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $566binary_add.7 = $562binary_subscr.5 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $568compare_op.8 = $phi558.2 < $566binary_add.7
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool570 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $570pred = call bool570($568compare_op.8, func=bool570, args=(Var($568compare_op.8, nb.py:175),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $570pred, 574, 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 574
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 580
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 576
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 586
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 580
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.6 = const(bool, True)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 586
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $590binary_subscr.4 = getitem(value=source_index, index=j, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $596binary_subscr.7 = getitem(value=target_index, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $600binary_add.9 = $596binary_subscr.7 + target_freq
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $602compare_op.10 = $590binary_subscr.4 >= $600binary_add.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool604 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $604pred = call bool604($602compare_op.10, func=bool604, args=(Var($602compare_op.10, nb.py:177),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $604pred, 608, 614
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 608
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 642
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 614
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: found.7 = phi(incoming_values=[Var(found.8, nb.py:179), Var(found.6, nb.py:176), Var(found, nb.py:152), Var(found, nb.py:152), Var(found.5, nb.py:171), Var(found, nb.py:152), Var(found, nb.py:152)], incoming_blocks=[452, 580, 424, 586, 534, 406, 510])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool616 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $616pred = call bool616(found.7, func=bool616, args=(Var(found.7, nb.py:179),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $616pred, 618, 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 618
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const620.3 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='from_j' stmt=$622compare_op.4 = from_j == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 618
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 614 from label 618
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 614
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 614
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 614
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 160
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 122 from label 160
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 122
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 122
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 122
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 118
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node from_j.2 = phi(incoming_values=[], incoming_blocks=[]) at 118
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 689
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 689
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node from_j.3 = phi(incoming_values=[], incoming_blocks=[]) at 689
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 632
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 632
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node from_j.4 = phi(incoming_values=[], incoming_blocks=[]) at 632
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 618
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 618
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 614 from label 618
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 614
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 614
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 614
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 160
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 122 from label 160
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 122
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 122
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 122
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def from_j.2 = phi(incoming_values=[], incoming_blocks=[])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 628
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def from_j.1 = j
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def from_j.4 = phi(incoming_values=[Var(from_j.2, nb.py:180), Var(from_j.1, nb.py:181)], incoming_blocks=[618, 628])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 614
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 614
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 160 from label 614
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 160
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 160
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 122 from label 160
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 122
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 122
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 122
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def from_j.2 = phi(incoming_values=[], incoming_blocks=[])
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def from_j.3 = phi(incoming_values=[Var(from_j.4, nb.py:180), Var(from_j.2, nb.py:180)], incoming_blocks=[632, 614])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 100
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def from_j = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $622compare_op.4 = from_j.2 == $const620.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool624 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $624pred = call bool624($622compare_op.4, func=bool624, args=(Var($622compare_op.4, nb.py:180),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $624pred, 628, 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 628
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_j.1 = j
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 632
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 632
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const634.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.1 = j + $const634.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 689
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 642
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const644.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='from_j' stmt=$646compare_op.3 = from_j == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 642
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 642
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $646compare_op.3 = from_j.2 == $const644.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool648 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $648pred = call bool648($646compare_op.3, func=bool648, args=(Var($646compare_op.3, nb.py:184),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $648pred, 652, 670
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 652
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const652.1 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = $const652.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const660.4 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = $const660.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 670
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='from_j' stmt=range_starts_out[i] = from_j
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 670
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 642 from label 670
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 642
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 642
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 118 from label 642
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 118
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: range_starts_out[i] = from_j.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends_out[i] = to_j.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 690
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 688
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $692build_tuple.2 = build_tuple(items=[Var(range_starts_out, nb.py:140), Var(range_ends_out, nb.py:141)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $694return_value.3 = cast(value=$692build_tuple.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $694return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 689
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_j.4 = phi(incoming_values=[Var(to_j.1, nb.py:182), Var(to_j.3, nb.py:148)], incoming_blocks=[632, 614])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 118
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 690
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94a84df0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 58
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=468)
           2	LOAD_GLOBAL(arg=0, lineno=468)
           4	LOAD_ATTR(arg=1, lineno=468)
           6	LOAD_FAST(arg=1, lineno=468)
           8	LOAD_ATTR(arg=2, lineno=468)
          10	LOAD_CONST(arg=1, lineno=468)
          12	BINARY_SUBSCR(arg=None, lineno=468)
          14	LOAD_FAST(arg=0, lineno=468)
          16	LOAD_ATTR(arg=2, lineno=468)
          18	LOAD_CONST(arg=2, lineno=468)
          20	BINARY_SUBSCR(arg=None, lineno=468)
          22	BUILD_TUPLE(arg=2, lineno=468)
          24	LOAD_GLOBAL(arg=0, lineno=468)
          26	LOAD_ATTR(arg=3, lineno=468)
          28	LOAD_CONST(arg=3, lineno=468)
          30	CALL_FUNCTION_KW(arg=2, lineno=468)
          32	STORE_FAST(arg=5, lineno=468)
          34	LOAD_GLOBAL(arg=4, lineno=469)
          36	LOAD_FAST(arg=0, lineno=469)
          38	LOAD_ATTR(arg=2, lineno=469)
          40	LOAD_CONST(arg=2, lineno=469)
          42	BINARY_SUBSCR(arg=None, lineno=469)
          44	CALL_FUNCTION(arg=1, lineno=469)
          46	GET_ITER(arg=None, lineno=469)
>         48	FOR_ITER(arg=48, lineno=469)
          50	STORE_FAST(arg=6, lineno=469)
          52	LOAD_GLOBAL(arg=5, lineno=470)
          54	LOAD_FAST(arg=0, lineno=470)
          56	LOAD_CONST(arg=4, lineno=470)
          58	LOAD_CONST(arg=4, lineno=470)
          60	BUILD_SLICE(arg=2, lineno=470)
          62	LOAD_FAST(arg=6, lineno=470)
          64	BUILD_TUPLE(arg=2, lineno=470)
          66	BINARY_SUBSCR(arg=None, lineno=470)
          68	LOAD_FAST(arg=1, lineno=470)
          70	LOAD_FAST(arg=2, lineno=470)
          72	LOAD_FAST(arg=3, lineno=470)
          74	BUILD_TUPLE(arg=4, lineno=470)
          76	LOAD_FAST(arg=4, lineno=470)
          78	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
          80	CALL_FUNCTION_EX(arg=0, lineno=470)
          82	LOAD_FAST(arg=5, lineno=470)
          84	LOAD_CONST(arg=4, lineno=470)
          86	LOAD_CONST(arg=4, lineno=470)
          88	BUILD_SLICE(arg=2, lineno=470)
          90	LOAD_FAST(arg=6, lineno=470)
          92	BUILD_TUPLE(arg=2, lineno=470)
          94	STORE_SUBSCR(arg=None, lineno=470)
          96	JUMP_ABSOLUTE(arg=48, lineno=470)
>         98	LOAD_FAST(arg=5, lineno=471)
         100	RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$arr14.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=BUILD_TUPLE(arg=2, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$20binary_subscr.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$24load_global.11']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION_KW(arg=2, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12', '$const28.13']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=STORE_FAST(arg=5, lineno=468)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$30call_function_kw.14']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=LOAD_GLOBAL(arg=4, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_ATTR(arg=2, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$arr36.16']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17', '$const40.18']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=CALL_FUNCTION(arg=1, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$42binary_subscr.19']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=GET_ITER(arg=None, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$44call_function.20']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$46get_iter.21',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi48.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=FOR_ITER(arg=48, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=50, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=50 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=471)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$out98.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=50 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi50.0', '$phi50.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=STORE_FAST(arg=6, lineno=469)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$phi50.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_GLOBAL(arg=5, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4', '$const58.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7', '$col62.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$64build_tuple.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_FAST(arg=2, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=3, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=BUILD_TUPLE(arg=4, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14', '$args76.15']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=CALL_FUNCTION_EX(arg=0, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$78build_tuple_unpack_with_call.16']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19', '$const86.20']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22', '$col90.23']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=STORE_SUBSCR(arg=None, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$92build_tuple.24']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=JUMP_ABSOLUTE(arg=48, lineno=470)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$phi50.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=50 nstack_initial=2): {'$phi50.1'},
             State(pc_initial=98 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {'$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.1': State(pc_initial=48 nstack_initial=1)}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=2))},
             '$phi50.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi48.0': {('$46get_iter.21', State(pc_initial=0 nstack_initial=0))},
 '$phi50.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.21'},
             State(pc_initial=48 nstack_initial=1): {'$phi50.1': '$48for_iter.2'}})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$arr14.6'}), (16, {'item': '$arr14.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$16load_attr.7', 'res': '$20binary_subscr.9'}), (22, {'items': ['$12binary_subscr.5', '$20binary_subscr.9'], 'res': '$22build_tuple.10'}), (24, {'res': '$24load_global.11'}), (26, {'item': '$24load_global.11', 'res': '$26load_attr.12'}), (28, {'res': '$const28.13'}), (30, {'func': '$4load_attr.1', 'args': ['$22build_tuple.10', '$26load_attr.12'], 'names': '$const28.13', 'res': '$30call_function_kw.14'}), (32, {'value': '$30call_function_kw.14'}), (34, {'res': '$34load_global.15'}), (36, {'res': '$arr36.16'}), (38, {'item': '$arr36.16', 'res': '$38load_attr.17'}), (40, {'res': '$const40.18'}), (42, {'index': '$const40.18', 'target': '$38load_attr.17', 'res': '$42binary_subscr.19'}), (44, {'func': '$34load_global.15', 'args': ['$42binary_subscr.19'], 'res': '$44call_function.20'}), (46, {'value': '$44call_function.20', 'res': '$46get_iter.21'})), outgoing_phis={'$phi48.0': '$46get_iter.21'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.21',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi50.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 50: ('$phi48.0', '$48for_iter.2')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=50 nstack_initial=2):
AdaptBlockInfo(insts=((50, {'value': '$phi50.1'}), (52, {'res': '$52load_global.2'}), (54, {'res': '$arr54.3'}), (56, {'res': '$const56.4'}), (58, {'res': '$const58.5'}), (60, {'start': '$const56.4', 'stop': '$const58.5', 'step': None, 'res': '$60build_slice.7', 'slicevar': '$60build_slice.6'}), (62, {'res': '$col62.8'}), (64, {'items': ['$60build_slice.7', '$col62.8'], 'res': '$64build_tuple.9'}), (66, {'index': '$64build_tuple.9', 'target': '$arr54.3', 'res': '$66binary_subscr.10'}), (68, {'res': '$range_starts68.11'}), (70, {'res': '$range_ends70.12'}), (72, {'res': '$reduce_func_nb72.13'}), (74, {'items': ['$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13'], 'res': '$74build_tuple.14'}), (76, {'res': '$args76.15'}), (78, {'tuples': ['$74build_tuple.14', '$args76.15'], 'temps': ['$78build_tuple_unpack_with_call.16'], 'is_assign': False}), (80, {'func': '$52load_global.2', 'vararg': '$78build_tuple_unpack_with_call.16', 'res': '$80call_function_ex.17'}), (82, {'res': '$out82.18'}), (84, {'res': '$const84.19'}), (86, {'res': '$const86.20'}), (88, {'start': '$const84.19', 'stop': '$const86.20', 'step': None, 'res': '$88build_slice.22', 'slicevar': '$88build_slice.21'}), (90, {'res': '$col90.23'}), (92, {'items': ['$88build_slice.22', '$col90.23'], 'res': '$92build_tuple.24'}), (94, {'target': '$out82.18', 'index': '$92build_tuple.24', 'value': '$80call_function_ex.17'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi50.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$out98.0'}), (100, {'retval': '$out98.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $16load_attr.7 = getattr(value=arr, attr=shape) ['$16load_attr.7', 'arr']
    $const18.8 = const(int, 1)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=$16load_attr.7, index=$const18.8, fn=<built-in function getitem>) ['$16load_attr.7', '$20binary_subscr.9', '$const18.8']
    $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)]) ['$12binary_subscr.5', '$20binary_subscr.9', '$22build_tuple.10']
    $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$24load_global.11']
    $26load_attr.12 = getattr(value=$24load_global.11, attr=float_) ['$24load_global.11', '$26load_attr.12']
    out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None) ['$22build_tuple.10', '$26load_attr.12', '$4load_attr.1', 'out']
    $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>) ['$34load_global.15']
    $38load_attr.17 = getattr(value=arr, attr=shape) ['$38load_attr.17', 'arr']
    $const40.18 = const(int, 1)              ['$const40.18']
    $42binary_subscr.19 = getitem(value=$38load_attr.17, index=$const40.18, fn=<built-in function getitem>) ['$38load_attr.17', '$42binary_subscr.19', '$const40.18']
    $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None) ['$34load_global.15', '$42binary_subscr.19', '$44call_function.20']
    $46get_iter.21 = getiter(value=$44call_function.20) ['$44call_function.20', '$46get_iter.21']
    $phi48.0 = $46get_iter.21                ['$46get_iter.21', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi50.1 = $48for_iter.2                 ['$48for_iter.2', '$phi50.1']
    branch $48for_iter.3, 50, 98             ['$48for_iter.3']
label 50:
    col = $phi50.1                           ['$phi50.1', 'col']
    $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7fbd3e645550>)) ['$52load_global.2']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $const58.5 = const(NoneType, None)       ['$const58.5']
    $60build_slice.6 = global(slice: <class 'slice'>) ['$60build_slice.6']
    $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None) ['$60build_slice.6', '$60build_slice.7', '$const56.4', '$const58.5']
    $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$60build_slice.7', '$64build_tuple.9', 'col']
    $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>) ['$64build_tuple.9', '$66binary_subscr.10', 'arr']
    $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)]) ['$66binary_subscr.10', '$74build_tuple.14', 'range_ends', 'range_starts', 'reduce_func_nb']
    $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args ['$74build_tuple.14', '$78build_tuple_unpack_with_call.16', 'args']
    $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16) ['$52load_global.2', '$78build_tuple_unpack_with_call.16', '$80call_function_ex.17']
    $const84.19 = const(NoneType, None)      ['$const84.19']
    $const86.20 = const(NoneType, None)      ['$const86.20']
    $88build_slice.21 = global(slice: <class 'slice'>) ['$88build_slice.21']
    $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None) ['$88build_slice.21', '$88build_slice.22', '$const84.19', '$const86.20']
    $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$88build_slice.22', '$92build_tuple.24', 'col']
    out[$92build_tuple.24] = $80call_function_ex.17 ['$80call_function_ex.17', '$92build_tuple.24', 'out']
    jump 48                                  []
label 98:
    $100return_value.1 = cast(value=out)     ['$100return_value.1', 'out']
    return $100return_value.1                ['$100return_value.1']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94a47d00>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=arr, attr=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const18.8 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20binary_subscr.9 = static_getitem(value=$16load_attr.7, index=1, index_var=$const18.8, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_attr.12 = getattr(value=$24load_global.11, attr=float_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38load_attr.17 = getattr(value=arr, attr=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const40.18 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $42binary_subscr.19 = static_getitem(value=$38load_attr.17, index=1, index_var=$const40.18, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.21 = getiter(value=$44call_function.20)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.21
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94a47d00>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 98
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 50
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94a47d00>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: col = $phi50.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7fbd3e645550>))
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const56.4 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const58.5 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.6 = global(slice: <class 'slice'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const84.19 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.20 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.21 = global(slice: <class 'slice'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: out[$92build_tuple.24] = $80call_function_ex.17
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94a47d00>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $100return_value.1 = cast(value=out)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $100return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100return_value.1': [<numba.core.ir.Assign object at 0x7fbc949975e0>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7fbc9496d8b0>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7fbc9495b520>],
             '$20binary_subscr.9': [<numba.core.ir.Assign object at 0x7fbc9496d2e0>],
             '$22build_tuple.10': [<numba.core.ir.Assign object at 0x7fbc9495bbe0>],
             '$24load_global.11': [<numba.core.ir.Assign object at 0x7fbc9495bd60>],
             '$26load_attr.12': [<numba.core.ir.Assign object at 0x7fbc9495b8e0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fbc949551c0>],
             '$34load_global.15': [<numba.core.ir.Assign object at 0x7fbc94a70a00>],
             '$38load_attr.17': [<numba.core.ir.Assign object at 0x7fbc94fb4880>],
             '$42binary_subscr.19': [<numba.core.ir.Assign object at 0x7fbc9496d2b0>],
             '$44call_function.20': [<numba.core.ir.Assign object at 0x7fbc94f94fd0>],
             '$46get_iter.21': [<numba.core.ir.Assign object at 0x7fbc94fae190>],
             '$48for_iter.1': [<numba.core.ir.Assign object at 0x7fbc94fb8b50>],
             '$48for_iter.2': [<numba.core.ir.Assign object at 0x7fbc94f9cfd0>],
             '$48for_iter.3': [<numba.core.ir.Assign object at 0x7fbc94fa4fd0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7fbc949cbf70>],
             '$52load_global.2': [<numba.core.ir.Assign object at 0x7fbc94bdd2e0>],
             '$60build_slice.6': [<numba.core.ir.Assign object at 0x7fbc94c03580>],
             '$60build_slice.7': [<numba.core.ir.Assign object at 0x7fbc94c062b0>],
             '$64build_tuple.9': [<numba.core.ir.Assign object at 0x7fbc94956280>],
             '$66binary_subscr.10': [<numba.core.ir.Assign object at 0x7fbc950523d0>],
             '$74build_tuple.14': [<numba.core.ir.Assign object at 0x7fbc949a1190>],
             '$78build_tuple_unpack_with_call.16': [<numba.core.ir.Assign object at 0x7fbc949a14c0>],
             '$80call_function_ex.17': [<numba.core.ir.Assign object at 0x7fbc949a13d0>],
             '$88build_slice.21': [<numba.core.ir.Assign object at 0x7fbc94997d60>],
             '$88build_slice.22': [<numba.core.ir.Assign object at 0x7fbc94997b20>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7fbc949cbc10>],
             '$92build_tuple.24': [<numba.core.ir.Assign object at 0x7fbc94997790>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7fbc949cbb50>],
             '$const18.8': [<numba.core.ir.Assign object at 0x7fbc9495b220>],
             '$const40.18': [<numba.core.ir.Assign object at 0x7fbc94fbe340>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7fbc94c08040>],
             '$const58.5': [<numba.core.ir.Assign object at 0x7fbc94bfb2b0>],
             '$const84.19': [<numba.core.ir.Assign object at 0x7fbc949a1040>],
             '$const86.20': [<numba.core.ir.Assign object at 0x7fbc949978b0>],
             '$phi48.0': [<numba.core.ir.Assign object at 0x7fbc9495b340>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7fbc94f8d3d0>],
             'args': [<numba.core.ir.Assign object at 0x7fbc94955f10>],
             'arr': [<numba.core.ir.Assign object at 0x7fbc94955be0>],
             'col': [<numba.core.ir.Assign object at 0x7fbc94bf08e0>],
             'out': [<numba.core.ir.Assign object at 0x7fbc94a5b910>],
             'range_ends': [<numba.core.ir.Assign object at 0x7fbc94955dc0>],
             'range_starts': [<numba.core.ir.Assign object at 0x7fbc94955c10>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7fbc94955b20>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	LOAD_GLOBAL(arg=0, lineno=436)
           4	LOAD_ATTR(arg=1, lineno=436)
           6	LOAD_FAST(arg=1, lineno=436)
           8	LOAD_ATTR(arg=2, lineno=436)
          10	LOAD_CONST(arg=1, lineno=436)
          12	BINARY_SUBSCR(arg=None, lineno=436)
          14	LOAD_GLOBAL(arg=0, lineno=436)
          16	LOAD_ATTR(arg=3, lineno=436)
          18	LOAD_CONST(arg=2, lineno=436)
          20	CALL_FUNCTION_KW(arg=2, lineno=436)
          22	STORE_FAST(arg=5, lineno=436)
          24	LOAD_GLOBAL(arg=4, lineno=438)
          26	LOAD_GLOBAL(arg=5, lineno=438)
          28	LOAD_FAST(arg=1, lineno=438)
          30	CALL_FUNCTION(arg=1, lineno=438)
          32	CALL_FUNCTION(arg=1, lineno=438)
          34	GET_ITER(arg=None, lineno=438)
>         36	FOR_ITER(arg=74, lineno=438)
          38	STORE_FAST(arg=6, lineno=438)
          40	LOAD_FAST(arg=1, lineno=439)
          42	LOAD_FAST(arg=6, lineno=439)
          44	BINARY_SUBSCR(arg=None, lineno=439)
          46	STORE_FAST(arg=7, lineno=439)
          48	LOAD_FAST(arg=2, lineno=440)
          50	LOAD_FAST(arg=6, lineno=440)
          52	BINARY_SUBSCR(arg=None, lineno=440)
          54	STORE_FAST(arg=8, lineno=440)
          56	LOAD_FAST(arg=7, lineno=441)
          58	LOAD_CONST(arg=3, lineno=441)
          60	COMPARE_OP(arg=2, lineno=441)
          62	POP_JUMP_IF_TRUE(arg=72, lineno=441)
          64	LOAD_FAST(arg=8, lineno=441)
          66	LOAD_CONST(arg=3, lineno=441)
          68	COMPARE_OP(arg=2, lineno=441)
          70	POP_JUMP_IF_FALSE(arg=84, lineno=441)
>         72	LOAD_GLOBAL(arg=0, lineno=442)
          74	LOAD_ATTR(arg=6, lineno=442)
          76	LOAD_FAST(arg=5, lineno=442)
          78	LOAD_FAST(arg=6, lineno=442)
          80	STORE_SUBSCR(arg=None, lineno=442)
          82	JUMP_ABSOLUTE(arg=36, lineno=442)
>         84	LOAD_FAST(arg=3, lineno=444)
          86	LOAD_FAST(arg=0, lineno=444)
          88	LOAD_FAST(arg=7, lineno=444)
          90	LOAD_FAST(arg=8, lineno=444)
          92	BUILD_SLICE(arg=2, lineno=444)
          94	BINARY_SUBSCR(arg=None, lineno=444)
          96	BUILD_TUPLE(arg=1, lineno=444)
          98	LOAD_FAST(arg=4, lineno=444)
         100	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
         102	CALL_FUNCTION_EX(arg=0, lineno=444)
         104	LOAD_FAST(arg=5, lineno=444)
         106	LOAD_FAST(arg=6, lineno=444)
         108	STORE_SUBSCR(arg=None, lineno=444)
         110	JUMP_ABSOLUTE(arg=36, lineno=444)
>        112	LOAD_FAST(arg=5, lineno=445)
         114	RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$14load_global.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=STORE_FAST(arg=5, lineno=436)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$20call_function_kw.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=4, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11', '$range_starts28.12']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$30call_function.13']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=GET_ITER(arg=None, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$32call_function.14']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$34get_iter.15',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi36.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=FOR_ITER(arg=74, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi36.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=445)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$out112.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=38 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi38.0', '$phi38.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=STORE_FAST(arg=6, lineno=438)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$phi38.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=439)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=6, lineno=439)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=439)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2', '$k42.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=STORE_FAST(arg=7, lineno=439)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$44binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=440)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=440)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=440)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5', '$k50.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=STORE_FAST(arg=8, lineno=440)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$52binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_FAST(arg=7, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8', '$const58.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_TRUE(arg=72, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$60compare_op.10']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=('$phi38.0',), blockstack=(), npush=0), Edge(pc=72, stack=('$phi38.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=72 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi64.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_FAST(arg=8, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1', '$const66.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=84, lineno=441)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$68compare_op.3']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=72, stack=('$phi64.0',), blockstack=(), npush=0), Edge(pc=84, stack=('$phi64.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi72.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_GLOBAL(arg=0, lineno=442)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_ATTR(arg=6, lineno=442)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$72load_global.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=442)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=442)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=STORE_SUBSCR(arg=None, lineno=442)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3', '$k78.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=JUMP_ABSOLUTE(arg=36, lineno=442)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi72.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi84.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=3, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=8, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_SLICE(arg=2, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3', '$to_i90.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$92build_slice.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BUILD_TUPLE(arg=1, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$94binary_subscr.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8', '$args98.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=CALL_FUNCTION_EX(arg=0, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$100build_tuple_unpack_with_call.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12', '$k106.13']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=JUMP_ABSOLUTE(arg=36, lineno=444)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi84.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=72 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi72.0', State(pc_initial=72 nstack_initial=1)),
                          ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi72.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi84.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi36.0': {('$34get_iter.15', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.15'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$14load_global.6'}), (16, {'item': '$14load_global.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'func': '$4load_attr.1', 'args': ['$12binary_subscr.5', '$16load_attr.7'], 'names': '$const18.8', 'res': '$20call_function_kw.9'}), (22, {'value': '$20call_function_kw.9'}), (24, {'res': '$24load_global.10'}), (26, {'res': '$26load_global.11'}), (28, {'res': '$range_starts28.12'}), (30, {'func': '$26load_global.11', 'args': ['$range_starts28.12'], 'res': '$30call_function.13'}), (32, {'func': '$24load_global.10', 'args': ['$30call_function.13'], 'res': '$32call_function.14'}), (34, {'value': '$32call_function.14', 'res': '$34get_iter.15'})), outgoing_phis={'$phi36.0': '$34get_iter.15'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.15',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: (), 38: ('$phi36.0', '$36for_iter.2')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$range_starts40.2'}), (42, {'res': '$k42.3'}), (44, {'index': '$k42.3', 'target': '$range_starts40.2', 'res': '$44binary_subscr.4'}), (46, {'value': '$44binary_subscr.4'}), (48, {'res': '$range_ends48.5'}), (50, {'res': '$k50.6'}), (52, {'index': '$k50.6', 'target': '$range_ends48.5', 'res': '$52binary_subscr.7'}), (54, {'value': '$52binary_subscr.7'}), (56, {'res': '$from_i56.8'}), (58, {'res': '$const58.9'}), (60, {'lhs': '$from_i56.8', 'rhs': '$const58.9', 'res': '$60compare_op.10'}), (62, {'pred': '$60compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi38.0',), 72: ('$phi38.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$to_i64.1'}), (66, {'res': '$const66.2'}), (68, {'lhs': '$to_i64.1', 'rhs': '$const66.2', 'res': '$68compare_op.3'}), (70, {'pred': '$68compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$phi64.0',), 84: ('$phi64.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'res': '$72load_global.1'}), (74, {'item': '$72load_global.1', 'res': '$74load_attr.2'}), (76, {'res': '$out76.3'}), (78, {'res': '$k78.4'}), (80, {'target': '$out76.3', 'index': '$k78.4', 'value': '$74load_attr.2'}), (82, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi72.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$reduce_func_nb84.1'}), (86, {'res': '$arr86.2'}), (88, {'res': '$from_i88.3'}), (90, {'res': '$to_i90.4'}), (92, {'start': '$from_i88.3', 'stop': '$to_i90.4', 'step': None, 'res': '$92build_slice.6', 'slicevar': '$92build_slice.5'}), (94, {'index': '$92build_slice.6', 'target': '$arr86.2', 'res': '$94binary_subscr.7'}), (96, {'items': ['$94binary_subscr.7'], 'res': '$96build_tuple.8'}), (98, {'res': '$args98.9'}), (100, {'tuples': ['$96build_tuple.8', '$args98.9'], 'temps': ['$100build_tuple_unpack_with_call.10'], 'is_assign': False}), (102, {'func': '$reduce_func_nb84.1', 'vararg': '$100build_tuple_unpack_with_call.10', 'res': '$102call_function_ex.11'}), (104, {'res': '$out104.12'}), (106, {'res': '$k106.13'}), (108, {'target': '$out104.12', 'index': '$k106.13', 'value': '$102call_function_ex.11'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi84.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$out112.0'}), (114, {'retval': '$out112.0', 'castval': '$114return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$14load_global.6']
    $16load_attr.7 = getattr(value=$14load_global.6, attr=float_) ['$14load_global.6', '$16load_attr.7']
    out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None) ['$12binary_subscr.5', '$16load_attr.7', '$4load_attr.1', 'out']
    $24load_global.10 = global(range: <class 'range'>) ['$24load_global.10']
    $26load_global.11 = global(len: <built-in function len>) ['$26load_global.11']
    $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None) ['$26load_global.11', '$30call_function.13', 'range_starts']
    $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None) ['$24load_global.10', '$30call_function.13', '$32call_function.14']
    $34get_iter.15 = getiter(value=$32call_function.14) ['$32call_function.14', '$34get_iter.15']
    $phi36.0 = $34get_iter.15                ['$34get_iter.15', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 112            ['$36for_iter.3']
label 38:
    k = $phi38.1                             ['$phi38.1', 'k']
    from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>) ['from_i', 'k', 'range_starts']
    to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>) ['k', 'range_ends', 'to_i']
    $const58.9 = const(int, -1)              ['$const58.9']
    $60compare_op.10 = from_i == $const58.9  ['$60compare_op.10', '$const58.9', 'from_i']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None) ['$60compare_op.10', '$62pred', 'bool62']
    branch $62pred, 72, 64                   ['$62pred']
label 64:
    $const66.2 = const(int, -1)              ['$const66.2']
    $68compare_op.3 = to_i == $const66.2     ['$68compare_op.3', '$const66.2', 'to_i']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None) ['$68compare_op.3', '$70pred', 'bool70']
    branch $70pred, 72, 84                   ['$70pred']
label 72:
    $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$72load_global.1']
    $74load_attr.2 = getattr(value=$72load_global.1, attr=nan) ['$72load_global.1', '$74load_attr.2']
    out[k] = $74load_attr.2                  ['$74load_attr.2', 'k', 'out']
    jump 36                                  []
label 84:
    $92build_slice.5 = global(slice: <class 'slice'>) ['$92build_slice.5']
    $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None) ['$92build_slice.5', '$92build_slice.6', 'from_i', 'to_i']
    $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>) ['$92build_slice.6', '$94binary_subscr.7', 'arr']
    $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)]) ['$94binary_subscr.7', '$96build_tuple.8']
    $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args ['$100build_tuple_unpack_with_call.10', '$96build_tuple.8', 'args']
    $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10) ['$100build_tuple_unpack_with_call.10', '$102call_function_ex.11', 'reduce_func_nb']
    out[k] = $102call_function_ex.11         ['$102call_function_ex.11', 'k', 'out']
    jump 36                                  []
label 112:
    $114return_value.1 = cast(value=out)     ['$114return_value.1', 'out']
    return $114return_value.1                ['$114return_value.1']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=$14load_global.6, attr=float_)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.10 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34get_iter.15 = getiter(value=$32call_function.14)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi36.0 = $34get_iter.15
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 36
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.1 = iternext(value=$phi36.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.2 = pair_first(value=$36for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.3 = pair_second(value=$36for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi38.1 = $36for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $36for_iter.3, 38, 112
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 38
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: k = $phi38.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const58.9 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $60compare_op.10 = from_i == $const58.9
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool62 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $62pred, 72, 64
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 64
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const66.2 = const(int, -1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.3 = to_i == $const66.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 84
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 72
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_attr.2 = getattr(value=$72load_global.1, attr=nan)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $74load_attr.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.5 = global(slice: <class 'slice'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $102call_function_ex.11
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 112
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $114return_value.1 = cast(value=out)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $114return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 113
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b02670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100build_tuple_unpack_with_call.10': [<numba.core.ir.Assign object at 0x7fbc94aa7310>],
             '$102call_function_ex.11': [<numba.core.ir.Assign object at 0x7fbc94aa73d0>],
             '$114return_value.1': [<numba.core.ir.Assign object at 0x7fbc94aa77c0>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7fbc94b021c0>],
             '$14load_global.6': [<numba.core.ir.Assign object at 0x7fbc94a47b20>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7fbc94a47bb0>],
             '$24load_global.10': [<numba.core.ir.Assign object at 0x7fbc94a47550>],
             '$26load_global.11': [<numba.core.ir.Assign object at 0x7fbc94a477c0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fbc94a35790>],
             '$30call_function.13': [<numba.core.ir.Assign object at 0x7fbc94a93c40>],
             '$32call_function.14': [<numba.core.ir.Assign object at 0x7fbc94a93850>],
             '$34get_iter.15': [<numba.core.ir.Assign object at 0x7fbc94a93790>],
             '$36for_iter.1': [<numba.core.ir.Assign object at 0x7fbc94a934f0>],
             '$36for_iter.2': [<numba.core.ir.Assign object at 0x7fbc94a93250>],
             '$36for_iter.3': [<numba.core.ir.Assign object at 0x7fbc94a93730>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7fbc94a35640>],
             '$60compare_op.10': [<numba.core.ir.Assign object at 0x7fbc94ab0190>],
             '$62pred': [<numba.core.ir.Assign object at 0x7fbc94ab0d00>],
             '$68compare_op.3': [<numba.core.ir.Assign object at 0x7fbc94acc8e0>],
             '$70pred': [<numba.core.ir.Assign object at 0x7fbc94accb80>],
             '$72load_global.1': [<numba.core.ir.Assign object at 0x7fbc94accf40>],
             '$74load_attr.2': [<numba.core.ir.Assign object at 0x7fbc94accc40>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7fbc94a35730>],
             '$92build_slice.5': [<numba.core.ir.Assign object at 0x7fbc94abad00>],
             '$92build_slice.6': [<numba.core.ir.Assign object at 0x7fbc94aba760>],
             '$94binary_subscr.7': [<numba.core.ir.Assign object at 0x7fbc94aba250>],
             '$96build_tuple.8': [<numba.core.ir.Assign object at 0x7fbc94abaaf0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7fbc94a35d00>],
             '$const58.9': [<numba.core.ir.Assign object at 0x7fbc94ab0c10>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7fbc94ab05b0>],
             '$phi36.0': [<numba.core.ir.Assign object at 0x7fbc94a47520>],
             '$phi38.1': [<numba.core.ir.Assign object at 0x7fbc94a93280>],
             'args': [<numba.core.ir.Assign object at 0x7fbc94a35370>],
             'arr': [<numba.core.ir.Assign object at 0x7fbc94a3f100>],
             'bool62': [<numba.core.ir.Assign object at 0x7fbc94ab0f10>],
             'bool70': [<numba.core.ir.Assign object at 0x7fbc94accc10>],
             'from_i': [<numba.core.ir.Assign object at 0x7fbc94ab00a0>],
             'k': [<numba.core.ir.Assign object at 0x7fbc94a93bb0>],
             'out': [<numba.core.ir.Assign object at 0x7fbc94a470a0>],
             'range_ends': [<numba.core.ir.Assign object at 0x7fbc94a3fa00>],
             'range_starts': [<numba.core.ir.Assign object at 0x7fbc94a3f0d0>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7fbc94a35550>],
             'to_i': [<numba.core.ir.Assign object at 0x7fbc94ab08e0>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=1095)
           2	LOAD_GLOBAL(arg=0, lineno=1095)
           4	LOAD_METHOD(arg=1, lineno=1095)
           6	LOAD_FAST(arg=0, lineno=1095)
           8	CALL_METHOD(arg=1, lineno=1095)
          10	RETURN_VALUE(arg=None, lineno=1095)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=1095)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1095)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=1095)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=1095)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_method.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=1095)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_method.1', '$arr6.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=1095)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$8call_method.3']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$arr6.2'}), (8, {'func': '$4load_method.1', 'args': ['$arr6.2'], 'res': '$8call_method.3'}), (10, {'retval': '$8call_method.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=nanmin) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(arr, func=$4load_method.1, args=[Var(arr, apply_reduce.py:1095)], kws=(), vararg=None) ['$4load_method.1', '$8call_method.3', 'arr']
    $10return_value.4 = cast(value=$8call_method.3) ['$10return_value.4', '$8call_method.3']
    return $10return_value.4                 ['$10return_value.4']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ad6b20>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=nanmin)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $8call_method.3 = call $4load_method.1(arr, func=$4load_method.1, args=[Var(arr, apply_reduce.py:1095)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10return_value.4 = cast(value=$8call_method.3)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $10return_value.4
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10return_value.4': [<numba.core.ir.Assign object at 0x7fbc94a840d0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fbc94b026d0>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fbc94b02820>],
             '$8call_method.3': [<numba.core.ir.Assign object at 0x7fbc94a84100>],
             'arr': [<numba.core.ir.Assign object at 0x7fbc94b02220>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=855)
           2	LOAD_GLOBAL(arg=0, lineno=855)
           4	LOAD_METHOD(arg=1, lineno=855)
           6	LOAD_FAST(arg=0, lineno=855)
           8	CALL_METHOD(arg=1, lineno=855)
          10	STORE_FAST(arg=1, lineno=855)
          12	LOAD_GLOBAL(arg=2, lineno=856)
          14	LOAD_FAST(arg=1, lineno=856)
          16	CALL_FUNCTION(arg=1, lineno=856)
          18	POP_TOP(arg=None, lineno=856)
          20	LOAD_GLOBAL(arg=0, lineno=857)
          22	LOAD_METHOD(arg=3, lineno=857)
          24	LOAD_FAST(arg=1, lineno=857)
          26	CALL_METHOD(arg=1, lineno=857)
          28	STORE_FAST(arg=2, lineno=857)
          30	LOAD_GLOBAL(arg=4, lineno=858)
          32	LOAD_FAST(arg=2, lineno=858)
          34	CALL_FUNCTION(arg=1, lineno=858)
          36	LOAD_METHOD(arg=5, lineno=858)
          38	LOAD_CONST(arg=1, lineno=858)
          40	CALL_METHOD(arg=1, lineno=858)
          42	STORE_FAST(arg=3, lineno=858)
          44	LOAD_FAST(arg=2, lineno=859)
          46	GET_ITER(arg=None, lineno=859)
>         48	FOR_ITER(arg=36, lineno=859)
          50	STORE_FAST(arg=4, lineno=859)
          52	LOAD_FAST(arg=4, lineno=860)
          54	LOAD_METHOD(arg=6, lineno=860)
          56	CALL_METHOD(arg=0, lineno=860)
          58	STORE_FAST(arg=5, lineno=860)
          60	LOAD_GLOBAL(arg=0, lineno=861)
          62	LOAD_METHOD(arg=7, lineno=861)
          64	LOAD_FAST(arg=5, lineno=861)
          66	CALL_METHOD(arg=1, lineno=861)
          68	POP_JUMP_IF_TRUE(arg=48, lineno=861)
          70	LOAD_DEREF(arg=0, lineno=862)
          72	LOAD_FAST(arg=3, lineno=862)
          74	LOAD_FAST(arg=5, lineno=862)
          76	CALL_FUNCTION(arg=2, lineno=862)
          78	POP_JUMP_IF_TRUE(arg=48, lineno=862)
          80	LOAD_FAST(arg=5, lineno=863)
          82	STORE_FAST(arg=3, lineno=863)
          84	JUMP_ABSOLUTE(arg=48, lineno=863)
>         86	LOAD_FAST(arg=3, lineno=864)
          88	RETURN_VALUE(arg=None, lineno=864)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=855)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=855)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=855)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=855)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_method.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=855)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_method.1', '$a6.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=1, lineno=855)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$8call_method.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=2, lineno=856)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_FAST(arg=1, lineno=856)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=856)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4', '$arr14.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=POP_TOP(arg=None, lineno=856)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$16call_function.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_GLOBAL(arg=0, lineno=857)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=857)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$20load_global.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=857)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$22load_method.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=857)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$22load_method.8', '$arr24.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=2, lineno=857)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$26call_method.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=858)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=LOAD_FAST(arg=2, lineno=858)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$30load_global.11']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=858)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$30load_global.11', '$it32.12']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=858)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$34call_function.13']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=858)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$36load_method.14']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=858)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$36load_method.14', '$const38.15']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=STORE_FAST(arg=3, lineno=858)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$40call_method.16']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_FAST(arg=2, lineno=859)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=GET_ITER(arg=None, lineno=859)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$it44.17']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$46get_iter.18',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi48.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=FOR_ITER(arg=36, lineno=859)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=86, stack=(), blockstack=(), npush=0), Edge(pc=50, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=50 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=864)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=RETURN_VALUE(arg=None, lineno=864)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$return_val86.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=50 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi50.0', '$phi50.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=STORE_FAST(arg=4, lineno=859)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$phi50.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=860)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_METHOD(arg=6, lineno=860)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$view52.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=CALL_METHOD(arg=0, lineno=860)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$54load_method.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=STORE_FAST(arg=5, lineno=860)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$56call_method.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_GLOBAL(arg=0, lineno=861)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_METHOD(arg=7, lineno=861)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$60load_global.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_FAST(arg=5, lineno=861)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$62load_method.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=CALL_METHOD(arg=1, lineno=861)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$62load_method.6', '$v64.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=POP_JUMP_IF_TRUE(arg=48, lineno=861)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$66call_method.8']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=70, stack=('$phi50.0',), blockstack=(), npush=0), Edge(pc=48, stack=('$phi50.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_DEREF(arg=0, lineno=862)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=3, lineno=862)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$70load_deref.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_FAST(arg=5, lineno=862)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$70load_deref.1', '$return_val72.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=862)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$70load_deref.1', '$return_val72.2', '$v74.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=POP_JUMP_IF_TRUE(arg=48, lineno=862)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$76call_function.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=80, stack=('$phi70.0',), blockstack=(), npush=0), Edge(pc=48, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi80.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=5, lineno=863)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi80.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=STORE_FAST(arg=3, lineno=863)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi80.0', '$v80.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=JUMP_ABSOLUTE(arg=48, lineno=863)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi80.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$phi80.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=50 nstack_initial=2): {'$phi50.1'},
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=86 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {'$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.1': State(pc_initial=48 nstack_initial=1)}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=2)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=1)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi50.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))},
             '$phi70.0': {('$phi50.0', State(pc_initial=50 nstack_initial=2))},
             '$phi80.0': {('$phi70.0', State(pc_initial=70 nstack_initial=1))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))},
             '$phi70.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))},
             '$phi70.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))},
             '$phi70.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$46get_iter.18',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi48.0': {('$46get_iter.18', State(pc_initial=0 nstack_initial=0))},
 '$phi50.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.18'},
             State(pc_initial=48 nstack_initial=1): {'$phi50.1': '$48for_iter.2'}})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$a6.2'}), (8, {'func': '$4load_method.1', 'args': ['$a6.2'], 'res': '$8call_method.3'}), (10, {'value': '$8call_method.3'}), (12, {'res': '$12load_global.4'}), (14, {'res': '$arr14.5'}), (16, {'func': '$12load_global.4', 'args': ['$arr14.5'], 'res': '$16call_function.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$arr24.9'}), (26, {'func': '$22load_method.8', 'args': ['$arr24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'res': '$it32.12'}), (34, {'func': '$30load_global.11', 'args': ['$it32.12'], 'res': '$34call_function.13'}), (36, {'item': '$34call_function.13', 'res': '$36load_method.14'}), (38, {'res': '$const38.15'}), (40, {'func': '$36load_method.14', 'args': ['$const38.15'], 'res': '$40call_method.16'}), (42, {'value': '$40call_method.16'}), (44, {'res': '$it44.17'}), (46, {'value': '$it44.17', 'res': '$46get_iter.18'})), outgoing_phis={'$phi48.0': '$46get_iter.18'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.18',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi50.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: (), 50: ('$phi48.0', '$48for_iter.2')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=50 nstack_initial=2):
AdaptBlockInfo(insts=((50, {'value': '$phi50.1'}), (52, {'res': '$view52.2'}), (54, {'item': '$view52.2', 'res': '$54load_method.3'}), (56, {'func': '$54load_method.3', 'args': [], 'res': '$56call_method.4'}), (58, {'value': '$56call_method.4'}), (60, {'res': '$60load_global.5'}), (62, {'item': '$60load_global.5', 'res': '$62load_method.6'}), (64, {'res': '$v64.7'}), (66, {'func': '$62load_method.6', 'args': ['$v64.7'], 'res': '$66call_method.8'}), (68, {'pred': '$66call_method.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: ('$phi50.0',), 48: ('$phi50.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((70, {'res': '$70load_deref.1'}), (72, {'res': '$return_val72.2'}), (74, {'res': '$v74.3'}), (76, {'func': '$70load_deref.1', 'args': ['$return_val72.2', '$v74.3'], 'res': '$76call_function.4'}), (78, {'pred': '$76call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi70.0',), 48: ('$phi70.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (82, {'value': '$v80.1'}), (84, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi80.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$return_val86.0'}), (88, {'retval': '$return_val86.0', 'castval': '$88return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=asarray) ['$2load_global.0', '$4load_method.1']
    arr = call $4load_method.1(a, func=$4load_method.1, args=[Var(a, arraymath.py:855)], kws=(), vararg=None) ['$4load_method.1', 'a', 'arr']
    $12load_global.4 = global(check_array: <function check_array at 0x7fbd1e092160>) ['$12load_global.4']
    $16call_function.6 = call $12load_global.4(arr, func=$12load_global.4, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None) ['$12load_global.4', '$16call_function.6', 'arr']
    $20load_global.7 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=nditer) ['$20load_global.7', '$22load_method.8']
    it = call $22load_method.8(arr, func=$22load_method.8, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None) ['$22load_method.8', 'arr', 'it']
    $30load_global.11 = global(next: <built-in function next>) ['$30load_global.11']
    $34call_function.13 = call $30load_global.11(it, func=$30load_global.11, args=[Var(it, arraymath.py:857)], kws=(), vararg=None) ['$30load_global.11', '$34call_function.13', 'it']
    $36load_method.14 = getattr(value=$34call_function.13, attr=take) ['$34call_function.13', '$36load_method.14']
    $const38.15 = const(int, 0)              ['$const38.15']
    return_val = call $36load_method.14($const38.15, func=$36load_method.14, args=[Var($const38.15, arraymath.py:858)], kws=(), vararg=None) ['$36load_method.14', '$const38.15', 'return_val']
    $46get_iter.18 = getiter(value=it)       ['$46get_iter.18', 'it']
    $phi48.0 = $46get_iter.18                ['$46get_iter.18', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi50.1 = $48for_iter.2                 ['$48for_iter.2', '$phi50.1']
    branch $48for_iter.3, 50, 86             ['$48for_iter.3']
label 50:
    view = $phi50.1                          ['$phi50.1', 'view']
    $54load_method.3 = getattr(value=view, attr=item) ['$54load_method.3', 'view']
    v = call $54load_method.3(func=$54load_method.3, args=[], kws=(), vararg=None) ['$54load_method.3', 'v']
    $60load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$60load_global.5']
    $62load_method.6 = getattr(value=$60load_global.5, attr=isnan) ['$60load_global.5', '$62load_method.6']
    $66call_method.8 = call $62load_method.6(v, func=$62load_method.6, args=[Var(v, arraymath.py:860)], kws=(), vararg=None) ['$62load_method.6', '$66call_method.8', 'v']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66call_method.8, func=bool68, args=(Var($66call_method.8, arraymath.py:861),), kws=(), vararg=None) ['$66call_method.8', '$68pred', 'bool68']
    branch $68pred, 48, 70                   ['$68pred']
label 70:
    $70load_deref.1 = freevar(comparison_op: <function less_than at 0x7fbd1e089ca0>) ['$70load_deref.1']
    $76call_function.4 = call $70load_deref.1(return_val, v, func=$70load_deref.1, args=[Var(return_val, arraymath.py:858), Var(v, arraymath.py:860)], kws=(), vararg=None) ['$70load_deref.1', '$76call_function.4', 'return_val', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.4, func=bool78, args=(Var($76call_function.4, arraymath.py:862),), kws=(), vararg=None) ['$76call_function.4', '$78pred', 'bool78']
    branch $78pred, 48, 80                   ['$78pred']
label 80:
    return_val = v                           ['return_val', 'v']
    jump 48                                  []
label 86:
    $88return_value.1 = cast(value=return_val) ['$88return_value.1', 'return_val']
    return $88return_value.1                 ['$88return_value.1']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=asarray)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: arr = call $4load_method.1(a, func=$4load_method.1, args=[Var(a, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(check_array: <function check_array at 0x7fbd1e092160>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16call_function.6 = call $12load_global.4(arr, func=$12load_global.4, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20load_global.7 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=nditer)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: it = call $22load_method.8(arr, func=$22load_method.8, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30load_global.11 = global(next: <built-in function next>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34call_function.13 = call $30load_global.11(it, func=$30load_global.11, args=[Var(it, arraymath.py:857)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $36load_method.14 = getattr(value=$34call_function.13, attr=take)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const38.15 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return_val = call $36load_method.14($const38.15, func=$36load_method.14, args=[Var($const38.15, arraymath.py:858)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.18 = getiter(value=it)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.18
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 86
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 50
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: view = $phi50.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54load_method.3 = getattr(value=view, attr=item)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: v = call $54load_method.3(func=$54load_method.3, args=[], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $60load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62load_method.6 = getattr(value=$60load_global.5, attr=isnan)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $66call_method.8 = call $62load_method.6(v, func=$62load_method.6, args=[Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool68 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68pred = call bool68($66call_method.8, func=bool68, args=(Var($66call_method.8, arraymath.py:861),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $68pred, 87, 70
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70load_deref.1 = freevar(comparison_op: <function less_than at 0x7fbd1e089ca0>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76call_function.4 = call $70load_deref.1(return_val, v, func=$70load_deref.1, args=[Var(return_val, arraymath.py:858), Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool78 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78pred = call bool78($76call_function.4, func=bool78, args=(Var($76call_function.4, arraymath.py:862),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $78pred, 87, 80
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 80
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return_val = v
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 87
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 86
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88return_value.1 = cast(value=return_val)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $88return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 87
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$12load_global.4': [<numba.core.ir.Assign object at 0x7fbc94a66640>],
             '$16call_function.6': [<numba.core.ir.Assign object at 0x7fbc94a7bc10>],
             '$20load_global.7': [<numba.core.ir.Assign object at 0x7fbc94a7b640>],
             '$22load_method.8': [<numba.core.ir.Assign object at 0x7fbc94a7bbb0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fbc94a66220>],
             '$30load_global.11': [<numba.core.ir.Assign object at 0x7fbc94a7b430>],
             '$34call_function.13': [<numba.core.ir.Assign object at 0x7fbc94a7bac0>],
             '$36load_method.14': [<numba.core.ir.Assign object at 0x7fbc94a7bd60>],
             '$46get_iter.18': [<numba.core.ir.Assign object at 0x7fbc94a703d0>],
             '$48for_iter.1': [<numba.core.ir.Assign object at 0x7fbc94a701c0>],
             '$48for_iter.2': [<numba.core.ir.Assign object at 0x7fbc94a70490>],
             '$48for_iter.3': [<numba.core.ir.Assign object at 0x7fbc94a70460>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fbc94a66550>],
             '$54load_method.3': [<numba.core.ir.Assign object at 0x7fbc94a70070>],
             '$60load_global.5': [<numba.core.ir.Assign object at 0x7fbc94a0ea60>],
             '$62load_method.6': [<numba.core.ir.Assign object at 0x7fbc94a0ef40>],
             '$66call_method.8': [<numba.core.ir.Assign object at 0x7fbc94a0eee0>],
             '$68pred': [<numba.core.ir.Assign object at 0x7fbc94a0e610>],
             '$70load_deref.1': [<numba.core.ir.Assign object at 0x7fbc94a0e4f0>],
             '$76call_function.4': [<numba.core.ir.Assign object at 0x7fbc94a0e760>],
             '$78pred': [<numba.core.ir.Assign object at 0x7fbc9470d6d0>],
             '$88return_value.1': [<numba.core.ir.Assign object at 0x7fbc94954520>],
             '$const38.15': [<numba.core.ir.Assign object at 0x7fbc94a7b1f0>],
             '$phi48.0': [<numba.core.ir.Assign object at 0x7fbc94a7b610>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7fbc94a70a90>],
             'a': [<numba.core.ir.Assign object at 0x7fbc94a663a0>],
             'arr': [<numba.core.ir.Assign object at 0x7fbc94a66f40>],
             'bool68': [<numba.core.ir.Assign object at 0x7fbc94a0e7f0>],
             'bool78': [<numba.core.ir.Assign object at 0x7fbc9471bee0>],
             'it': [<numba.core.ir.Assign object at 0x7fbc94a7be20>],
             'return_val': [<numba.core.ir.Assign object at 0x7fbc94a70790>,
                            <numba.core.ir.Assign object at 0x7fbc949545e0>],
             'v': [<numba.core.ir.Assign object at 0x7fbc94a70e80>],
             'view': [<numba.core.ir.Assign object at 0x7fbc94a70820>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators {'return_val'}
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var return_val
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=asarray)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: arr = call $4load_method.1(a, func=$4load_method.1, args=[Var(a, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(check_array: <function check_array at 0x7fbd1e092160>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16call_function.6 = call $12load_global.4(arr, func=$12load_global.4, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20load_global.7 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=nditer)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: it = call $22load_method.8(arr, func=$22load_method.8, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30load_global.11 = global(next: <built-in function next>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34call_function.13 = call $30load_global.11(it, func=$30load_global.11, args=[Var(it, arraymath.py:857)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $36load_method.14 = getattr(value=$34call_function.13, attr=take)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const38.15 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return_val = call $36load_method.14($const38.15, func=$36load_method.14, args=[Var($const38.15, arraymath.py:858)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: return_val
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: return_val = call $36load_method.14($const38.15, func=$36load_method.14, args=[Var($const38.15, arraymath.py:858)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.18 = getiter(value=it)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.18
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 86
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 50
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: view = $phi50.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54load_method.3 = getattr(value=view, attr=item)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: v = call $54load_method.3(func=$54load_method.3, args=[], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $60load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62load_method.6 = getattr(value=$60load_global.5, attr=isnan)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $66call_method.8 = call $62load_method.6(v, func=$62load_method.6, args=[Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool68 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68pred = call bool68($66call_method.8, func=bool68, args=(Var($66call_method.8, arraymath.py:861),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $68pred, 87, 70
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70load_deref.1 = freevar(comparison_op: <function less_than at 0x7fbd1e089ca0>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76call_function.4 = call $70load_deref.1(return_val, v, func=$70load_deref.1, args=[Var(return_val, arraymath.py:858), Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool78 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78pred = call bool78($76call_function.4, func=bool78, args=(Var($76call_function.4, arraymath.py:862),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $78pred, 87, 80
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 80
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return_val = v
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: return_val.1 = v
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 87
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 86
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88return_value.1 = cast(value=return_val)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $88return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 87
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b29dc0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbc94b29fa0>],
             80: [<numba.core.ir.Assign object at 0x7fbc94b34910>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34eb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=asarray)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: arr = call $4load_method.1(a, func=$4load_method.1, args=[Var(a, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(check_array: <function check_array at 0x7fbd1e092160>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16call_function.6 = call $12load_global.4(arr, func=$12load_global.4, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20load_global.7 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=nditer)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: it = call $22load_method.8(arr, func=$22load_method.8, args=[Var(arr, arraymath.py:855)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30load_global.11 = global(next: <built-in function next>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34call_function.13 = call $30load_global.11(it, func=$30load_global.11, args=[Var(it, arraymath.py:857)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $36load_method.14 = getattr(value=$34call_function.13, attr=take)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const38.15 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return_val = call $36load_method.14($const38.15, func=$36load_method.14, args=[Var($const38.15, arraymath.py:858)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.18 = getiter(value=it)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.18
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34eb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 86
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 50
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34eb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: view = $phi50.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54load_method.3 = getattr(value=view, attr=item)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: v = call $54load_method.3(func=$54load_method.3, args=[], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $60load_global.5 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62load_method.6 = getattr(value=$60load_global.5, attr=isnan)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $66call_method.8 = call $62load_method.6(v, func=$62load_method.6, args=[Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool68 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $68pred = call bool68($66call_method.8, func=bool68, args=(Var($66call_method.8, arraymath.py:861),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $68pred, 87, 70
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34eb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70load_deref.1 = freevar(comparison_op: <function less_than at 0x7fbd1e089ca0>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $76call_function.4 = call $70load_deref.1(return_val, v, func=$70load_deref.1, args=[Var(return_val, arraymath.py:858), Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='return_val' stmt=$76call_function.4 = call $70load_deref.1(return_val, v, func=$70load_deref.1, args=[Var(return_val, arraymath.py:858), Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 50 from label 70
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 50
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 50
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 48 from label 50
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node return_val.2 = phi(incoming_values=[], incoming_blocks=[]) at 48
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def return_val = call $36load_method.14($const38.15, func=$36load_method.14, args=[Var($const38.15, arraymath.py:858)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 87
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 87
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node return_val.3 = phi(incoming_values=[], incoming_blocks=[]) at 87
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 80
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def return_val.1 = v
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 50
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 50
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 48 from label 50
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def return_val.2 = phi(incoming_values=[Var(return_val, arraymath.py:858)], incoming_blocks=[0])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 50 from label 70
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 50
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 50
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 48 from label 50
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def return_val.2 = phi(incoming_values=[Var(return_val, arraymath.py:858)], incoming_blocks=[0])
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def return_val.3 = phi(incoming_values=[Var(return_val.1, arraymath.py:863), Var(return_val.2, arraymath.py:862), Var(return_val.2, arraymath.py:862)], incoming_blocks=[80, 50, 70])
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $76call_function.4 = call $70load_deref.1(return_val.2, v, func=$70load_deref.1, args=[Var(return_val.2, arraymath.py:862), Var(v, arraymath.py:860)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool78 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78pred = call bool78($76call_function.4, func=bool78, args=(Var($76call_function.4, arraymath.py:862),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $78pred, 87, 80
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 80
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34eb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return_val.1 = v
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 87
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 86
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34eb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88return_value.1 = cast(value=return_val)
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='return_val' stmt=$88return_value.1 = cast(value=return_val)
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 86
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 48 from label 86
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $88return_value.1 = cast(value=return_val.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $88return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 87
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b34eb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=4069)
           2	LOAD_FAST(arg=0, lineno=4069)
           4	RETURN_VALUE(arg=None, lineno=4069)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=4069)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4069)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=RETURN_VALUE(arg=None, lineno=4069)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$a2.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'retval': '$a2.0', 'castval': '$4return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    dtype = arg(1, name=dtype)               ['dtype']
    $4return_value.1 = cast(value=a)         ['$4return_value.1', 'a']
    return $4return_value.1                  ['$4return_value.1']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94a2b0a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: dtype = arg(1, name=dtype)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4return_value.1 = cast(value=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $4return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$4return_value.1': [<numba.core.ir.Assign object at 0x7fbc94b15640>],
             'a': [<numba.core.ir.Assign object at 0x7fbc94b15c10>],
             'dtype': [<numba.core.ir.Assign object at 0x7fbc94b15a90>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=826)
           2	LOAD_FAST(arg=0, lineno=826)
           4	LOAD_ATTR(arg=0, lineno=826)
           6	LOAD_CONST(arg=1, lineno=826)
           8	COMPARE_OP(arg=2, lineno=826)
          10	POP_JUMP_IF_FALSE(arg=20, lineno=826)
          12	LOAD_GLOBAL(arg=1, lineno=827)
          14	LOAD_CONST(arg=2, lineno=827)
          16	CALL_FUNCTION(arg=1, lineno=827)
          18	RAISE_VARARGS(arg=1, lineno=827)
>         20	LOAD_CONST(arg=0, lineno=827)
          22	RETURN_VALUE(arg=None, lineno=827)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=826)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=826)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=826)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$a2.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=826)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=826)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=20, lineno=826)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$8compare_op.3']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=827)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=827)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=827)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.0', '$const14.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=827)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$16call_function.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=20 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=0, lineno=827)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=RETURN_VALUE(arg=None, lineno=827)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$const20.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$const20.0'}), (22, {'retval': '$const20.0', 'castval': '$22return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:826),), kws=(), vararg=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation not possible) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:827)], kws=(), vararg=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $const20.0 = const(NoneType, None)       ['$const20.0']
    $22return_value.1 = cast(value=$const20.0) ['$22return_value.1', '$const20.0']
    return $22return_value.1                 ['$22return_value.1']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94955490>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=a, attr=size)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool10 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:826),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $10pred, 12, 20
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 12
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94955490>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const14.1 = const(str, zero-size array to reduction operation not possible)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:827)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation not possible')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94955490>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const20.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22return_value.1 = cast(value=$const20.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $22return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10pred': [<numba.core.ir.Assign object at 0x7fbc94ae1c40>],
             '$12load_global.0': [<numba.core.ir.Assign object at 0x7fbc94a5be50>],
             '$16call_function.2': [<numba.core.ir.Assign object at 0x7fbc94a5b190>],
             '$22return_value.1': [<numba.core.ir.Assign object at 0x7fbc94a5b730>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7fbc94954580>],
             '$8compare_op.3': [<numba.core.ir.Assign object at 0x7fbc94954fd0>],
             '$const14.1': [<numba.core.ir.Assign object at 0x7fbc94a5ba30>],
             '$const20.0': [<numba.core.ir.Assign object at 0x7fbc94a5b8b0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7fbc94954ac0>],
             'a': [<numba.core.ir.Assign object at 0x7fbc94954310>],
             'bool10': [<numba.core.ir.Assign object at 0x7fbc94ae10a0>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=816)
           2	LOAD_FAST(arg=0, lineno=816)
           4	LOAD_FAST(arg=1, lineno=816)
           6	COMPARE_OP(arg=0, lineno=816)
           8	RETURN_VALUE(arg=None, lineno=816)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=816)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=816)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=816)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$a2.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=COMPARE_OP(arg=0, lineno=816)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$a2.0', '$b4.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=816)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$6compare_op.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$b4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$b4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $6compare_op.2 = a < b                   ['$6compare_op.2', 'a', 'b']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc95054250>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6compare_op.2 = a < b
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $8return_value.3 = cast(value=$6compare_op.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $8return_value.3
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [<numba.core.ir.Assign object at 0x7fbc95135df0>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7fbc95135700>],
             'a': [<numba.core.ir.Assign object at 0x7fbc951f3640>],
             'b': [<numba.core.ir.Assign object at 0x7fbc951f3580>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=2716)
           2	LOAD_GLOBAL(arg=0, lineno=2716)
           4	LOAD_FAST(arg=0, lineno=2716)
           6	CALL_FUNCTION(arg=1, lineno=2716)
           8	STORE_FAST(arg=2, lineno=2716)
          10	LOAD_GLOBAL(arg=1, lineno=2717)
          12	LOAD_FAST(arg=2, lineno=2717)
          14	CALL_FUNCTION(arg=1, lineno=2717)
          16	GET_ITER(arg=None, lineno=2717)
>         18	FOR_ITER(arg=40, lineno=2717)
          20	STORE_FAST(arg=3, lineno=2717)
          22	LOAD_FAST(arg=0, lineno=2718)
          24	LOAD_FAST(arg=3, lineno=2718)
          26	BINARY_SUBSCR(arg=None, lineno=2718)
          28	LOAD_FAST(arg=1, lineno=2718)
          30	LOAD_GLOBAL(arg=0, lineno=2718)
          32	LOAD_FAST(arg=1, lineno=2718)
          34	CALL_FUNCTION(arg=1, lineno=2718)
          36	LOAD_FAST(arg=2, lineno=2718)
          38	BINARY_SUBTRACT(arg=None, lineno=2718)
          40	LOAD_FAST(arg=3, lineno=2718)
          42	BINARY_ADD(arg=None, lineno=2718)
          44	BINARY_SUBSCR(arg=None, lineno=2718)
          46	COMPARE_OP(arg=3, lineno=2718)
          48	POP_JUMP_IF_FALSE(arg=18, lineno=2718)
          50	LOAD_GLOBAL(arg=2, lineno=2719)
          52	LOAD_CONST(arg=1, lineno=2719)
          54	CALL_FUNCTION(arg=1, lineno=2719)
          56	RAISE_VARARGS(arg=1, lineno=2719)
          58	JUMP_ABSOLUTE(arg=18, lineno=2719)
>         60	LOAD_CONST(arg=0, lineno=2719)
          62	RETURN_VALUE(arg=None, lineno=2719)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=2716)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2716)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2716)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=2716)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0', '$shape4.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=2716)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=2717)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=2717)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$10load_global.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=2717)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$10load_global.3', '$n12.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=GET_ITER(arg=None, lineno=2717)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=18, stack=('$16get_iter.6',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi18.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=FOR_ITER(arg=40, lineno=2717)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi18.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=2719)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=2719)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$const60.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=20 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi20.0', '$phi20.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=STORE_FAST(arg=3, lineno=2717)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$phi20.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$shape22.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$shape22.2', '$i24.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_GLOBAL(arg=0, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6', '$main_shape32.7']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8', '$n36.9']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_FAST(arg=3, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10', '$i40.11']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$42binary_add.12']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=COMPARE_OP(arg=3, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$26binary_subscr.4', '$44binary_subscr.13']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=18, lineno=2718)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$46compare_op.14']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=50, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=18, stack=('$phi20.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi50.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=2719)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=2719)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$50load_global.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=2719)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$50load_global.1', '$const52.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=2719)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$54call_function.3']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=60 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi18.0': {('$16get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.6'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'func': '$2load_global.0', 'args': ['$shape4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$n12.4'}), (14, {'func': '$10load_global.3', 'args': ['$n12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5', 'res': '$16get_iter.6'})), outgoing_phis={'$phi18.0': '$16get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.6',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 20: ('$phi18.0', '$18for_iter.2')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$shape22.2'}), (24, {'res': '$i24.3'}), (26, {'index': '$i24.3', 'target': '$shape22.2', 'res': '$26binary_subscr.4'}), (28, {'res': '$main_shape28.5'}), (30, {'res': '$30load_global.6'}), (32, {'res': '$main_shape32.7'}), (34, {'func': '$30load_global.6', 'args': ['$main_shape32.7'], 'res': '$34call_function.8'}), (36, {'res': '$n36.9'}), (38, {'lhs': '$34call_function.8', 'rhs': '$n36.9', 'res': '$38binary_subtract.10'}), (40, {'res': '$i40.11'}), (42, {'lhs': '$38binary_subtract.10', 'rhs': '$i40.11', 'res': '$42binary_add.12'}), (44, {'index': '$42binary_add.12', 'target': '$main_shape28.5', 'res': '$44binary_subscr.13'}), (46, {'lhs': '$26binary_subscr.4', 'rhs': '$44binary_subscr.13', 'res': '$46compare_op.14'}), (48, {'pred': '$46compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi20.0',), 18: ('$phi20.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.1'}), (52, {'res': '$const52.2'}), (54, {'func': '$50load_global.1', 'args': ['$const52.2'], 'res': '$54call_function.3'}), (56, {'exc': '$54call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$const60.0'}), (62, {'retval': '$const60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:2716)], kws=(), vararg=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:2716)], kws=(), vararg=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:2718),), kws=(), vararg=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 18                   ['$48pred']
label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None) ['$50load_global.1', '$54call_function.3', '$const52.2']
    raise $54call_function.3                 ['$54call_function.3']
label 60:
    $const60.0 = const(NoneType, None)       ['$const60.0']
    $62return_value.1 = cast(value=$const60.0) ['$62return_value.1', '$const60.0']
    return $62return_value.1                 ['$62return_value.1']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94fefa90>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(0, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: main_shape = arg(1, name=main_shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: n = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.3 = global(range: <class 'range'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:2716)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.6 = getiter(value=$14call_function.5)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94fefa90>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 60
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94fefa90>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: i = $phi20.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30load_global.6 = global(len: <built-in function len>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $34call_function.8 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38binary_subtract.10 = $34call_function.8 - n
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $42binary_add.12 = $38binary_subtract.10 + i
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool48 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:2718),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $48pred, 50, 18
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 50
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94fefa90>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $50load_global.1 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:2719)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 60
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94fefa90>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62return_value.1 = cast(value=$const60.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $62return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_global.3': [<numba.core.ir.Assign object at 0x7fbc949a5be0>],
             '$14call_function.5': [<numba.core.ir.Assign object at 0x7fbc949a5eb0>],
             '$16get_iter.6': [<numba.core.ir.Assign object at 0x7fbc9499d040>],
             '$18for_iter.1': [<numba.core.ir.Assign object at 0x7fbc9499d2e0>],
             '$18for_iter.2': [<numba.core.ir.Assign object at 0x7fbc9499d400>],
             '$18for_iter.3': [<numba.core.ir.Assign object at 0x7fbc9499d520>],
             '$26binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc9499db80>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fbc949a56a0>],
             '$30load_global.6': [<numba.core.ir.Assign object at 0x7fbc9499de20>],
             '$34call_function.8': [<numba.core.ir.Assign object at 0x7fbc94e9af70>],
             '$38binary_subtract.10': [<numba.core.ir.Assign object at 0x7fbc94e9a5b0>],
             '$42binary_add.12': [<numba.core.ir.Assign object at 0x7fbc94e9a670>],
             '$44binary_subscr.13': [<numba.core.ir.Assign object at 0x7fbc9499dfa0>],
             '$46compare_op.14': [<numba.core.ir.Assign object at 0x7fbc9499b160>],
             '$48pred': [<numba.core.ir.Assign object at 0x7fbc9499b400>],
             '$50load_global.1': [<numba.core.ir.Assign object at 0x7fbc9499dcd0>],
             '$54call_function.3': [<numba.core.ir.Assign object at 0x7fbc9499b790>],
             '$62return_value.1': [<numba.core.ir.Assign object at 0x7fbc9499bbe0>],
             '$const52.2': [<numba.core.ir.Assign object at 0x7fbc9499b5e0>],
             '$const60.0': [<numba.core.ir.Assign object at 0x7fbc9499ba60>],
             '$phi18.0': [<numba.core.ir.Assign object at 0x7fbc949a5a60>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x7fbc9499d1f0>],
             'bool48': [<numba.core.ir.Assign object at 0x7fbc9499b2e0>],
             'i': [<numba.core.ir.Assign object at 0x7fbc9499d7c0>],
             'main_shape': [<numba.core.ir.Assign object at 0x7fbc949a5520>],
             'n': [<numba.core.ir.Assign object at 0x7fbc949a5970>],
             'shape': [<numba.core.ir.Assign object at 0x7fbc949a5400>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=3768)
           2	LOAD_FAST(arg=1, lineno=3768)
           4	LOAD_FAST(arg=0, lineno=3768)
           6	LOAD_ATTR(arg=0, lineno=3768)
           8	LOAD_CONST(arg=1, lineno=3768)
          10	BINARY_SUBTRACT(arg=None, lineno=3768)
          12	COMPARE_OP(arg=4, lineno=3768)
          14	POP_JUMP_IF_TRUE(arg=28, lineno=3768)
          16	LOAD_FAST(arg=1, lineno=3768)
          18	LOAD_FAST(arg=0, lineno=3768)
          20	LOAD_ATTR(arg=0, lineno=3768)
          22	UNARY_NEGATIVE(arg=None, lineno=3768)
          24	COMPARE_OP(arg=0, lineno=3768)
          26	POP_JUMP_IF_FALSE(arg=36, lineno=3768)
>         28	LOAD_GLOBAL(arg=1, lineno=3769)
          30	LOAD_CONST(arg=2, lineno=3769)
          32	CALL_FUNCTION(arg=1, lineno=3769)
          34	RAISE_VARARGS(arg=1, lineno=3769)
>         36	LOAD_FAST(arg=0, lineno=3770)
          38	LOAD_METHOD(arg=2, lineno=3770)
          40	CALL_METHOD(arg=0, lineno=3770)
          42	LOAD_FAST(arg=1, lineno=3770)
          44	BINARY_SUBSCR(arg=None, lineno=3770)
          46	RETURN_VALUE(arg=None, lineno=3770)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices2.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices2.0', '$a4.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices2.0', '$6load_attr.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices2.0', '$6load_attr.2', '$const8.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices2.0', '$10binary_subtract.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=28, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$12compare_op.5']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices16.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices16.0', '$a18.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices16.0', '$20load_attr.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$indices16.0', '$22unary_negative.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=36, lineno=3768)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$24compare_op.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=3769)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=3769)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$28load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=3769)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$28load_global.0', '$const30.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=3769)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$32call_function.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=3770)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=3770)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$a36.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=3770)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$38load_method.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=3770)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$40call_method.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=3770)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$40call_method.2', '$indices42.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=3770)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$44binary_subscr.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:3768),), kws=(), vararg=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:3768),), kws=(), vararg=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:3769)], kws=(), vararg=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc949f65b0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: indices = arg(1, name=indices)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $6load_attr.2 = getattr(value=a, attr=size)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const8.3 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12compare_op.5 = indices > $10binary_subtract.4
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool14 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:3768),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $14pred, 28, 16
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 16
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc949f65b0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20load_attr.2 = getattr(value=a, attr=size)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $24compare_op.4 = indices < $22unary_negative.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool26 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:3768),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $26pred, 28, 36
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 28
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc949f65b0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const30.1 = const(str, Index out of bounds)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:3769)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 36
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc949f65b0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $46return_value.5
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [<numba.core.ir.Assign object at 0x7fbc949e9cd0>],
             '$12compare_op.5': [<numba.core.ir.Assign object at 0x7fbc949e9e50>],
             '$14pred': [<numba.core.ir.Assign object at 0x7fbc949e6130>],
             '$20load_attr.2': [<numba.core.ir.Assign object at 0x7fbc949e6550>],
             '$22unary_negative.3': [<numba.core.ir.Assign object at 0x7fbc949e66d0>],
             '$24compare_op.4': [<numba.core.ir.Assign object at 0x7fbc949e6850>],
             '$26pred': [<numba.core.ir.Assign object at 0x7fbc949e6af0>],
             '$28load_global.0': [<numba.core.ir.Assign object at 0x7fbc949e6cd0>],
             '$32call_function.2': [<numba.core.ir.Assign object at 0x7fbc949e5040>],
             '$38load_method.1': [<numba.core.ir.Assign object at 0x7fbc949e5430>],
             '$40call_method.2': [<numba.core.ir.Assign object at 0x7fbc949e55e0>],
             '$44binary_subscr.4': [<numba.core.ir.Assign object at 0x7fbc949e5850>],
             '$46return_value.5': [<numba.core.ir.Assign object at 0x7fbc949e59d0>],
             '$6load_attr.2': [<numba.core.ir.Assign object at 0x7fbc949e99d0>],
             '$const30.1': [<numba.core.ir.Assign object at 0x7fbc949e6e50>],
             '$const8.3': [<numba.core.ir.Assign object at 0x7fbc949e9b50>],
             'a': [<numba.core.ir.Assign object at 0x7fbc949e94f0>],
             'bool14': [<numba.core.ir.Assign object at 0x7fbc949e9fd0>],
             'bool26': [<numba.core.ir.Assign object at 0x7fbc949e69d0>],
             'indices': [<numba.core.ir.Assign object at 0x7fbc949e9610>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=1740)
           2	LOAD_FAST(arg=0, lineno=1740)
           4	LOAD_METHOD(arg=0, lineno=1740)
           6	LOAD_FAST(arg=0, lineno=1740)
           8	LOAD_ATTR(arg=1, lineno=1740)
          10	CALL_METHOD(arg=1, lineno=1740)
          12	RETURN_VALUE(arg=None, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$ary2.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_method.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_method.1', '$ary6.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$4load_method.1', '$8load_attr.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=1740)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$10call_method.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:1740)], kws=(), vararg=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94a7f790>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ary = arg(0, name=ary)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:1740)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $12return_value.5 = cast(value=$10call_method.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $12return_value.5
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x7fbc94a819d0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7fbc94a81b20>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fbc94a81580>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7fbc94a81820>],
             'ary': [<numba.core.ir.Assign object at 0x7fbc94a812e0>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 20:02:57] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=1602)
           2	LOAD_CONST(arg=1, lineno=1602)
           4	STORE_FAST(arg=2, lineno=1602)
           6	LOAD_CONST(arg=2, lineno=1603)
           8	STORE_FAST(arg=3, lineno=1603)
          10	LOAD_GLOBAL(arg=0, lineno=1604)
          12	LOAD_FAST(arg=1, lineno=1604)
          14	CALL_FUNCTION(arg=1, lineno=1604)
          16	GET_ITER(arg=None, lineno=1604)
>         18	FOR_ITER(arg=38, lineno=1604)
          20	UNPACK_SEQUENCE(arg=2, lineno=1604)
          22	STORE_FAST(arg=4, lineno=1604)
          24	STORE_FAST(arg=5, lineno=1604)
          26	LOAD_FAST(arg=5, lineno=1605)
          28	LOAD_CONST(arg=1, lineno=1605)
          30	COMPARE_OP(arg=0, lineno=1605)
          32	POP_JUMP_IF_FALSE(arg=48, lineno=1605)
          34	LOAD_FAST(arg=2, lineno=1606)
          36	LOAD_CONST(arg=2, lineno=1606)
          38	INPLACE_ADD(arg=None, lineno=1606)
          40	STORE_FAST(arg=2, lineno=1606)
          42	LOAD_FAST(arg=4, lineno=1607)
          44	STORE_FAST(arg=6, lineno=1607)
          46	JUMP_ABSOLUTE(arg=18, lineno=1607)
>         48	LOAD_FAST(arg=3, lineno=1609)
          50	LOAD_FAST(arg=5, lineno=1609)
          52	INPLACE_MULTIPLY(arg=None, lineno=1609)
          54	STORE_FAST(arg=3, lineno=1609)
          56	JUMP_ABSOLUTE(arg=18, lineno=1609)
>         58	LOAD_FAST(arg=2, lineno=1611)
          60	LOAD_CONST(arg=1, lineno=1611)
          62	COMPARE_OP(arg=2, lineno=1611)
          64	POP_JUMP_IF_FALSE(arg=84, lineno=1611)
          66	LOAD_FAST(arg=0, lineno=1612)
          68	LOAD_FAST(arg=3, lineno=1612)
          70	COMPARE_OP(arg=3, lineno=1612)
          72	POP_JUMP_IF_FALSE(arg=164, lineno=1612)
          74	LOAD_GLOBAL(arg=1, lineno=1613)
          76	LOAD_CONST(arg=3, lineno=1613)
          78	CALL_FUNCTION(arg=1, lineno=1613)
          80	RAISE_VARARGS(arg=1, lineno=1613)
          82	JUMP_FORWARD(arg=80, lineno=1613)
>         84	LOAD_FAST(arg=2, lineno=1615)
          86	LOAD_CONST(arg=2, lineno=1615)
          88	COMPARE_OP(arg=2, lineno=1615)
          90	POP_JUMP_IF_FALSE(arg=156, lineno=1615)
          92	LOAD_FAST(arg=3, lineno=1617)
          94	LOAD_CONST(arg=1, lineno=1617)
          96	COMPARE_OP(arg=2, lineno=1617)
          98	POP_JUMP_IF_FALSE(arg=114, lineno=1617)
         100	LOAD_CONST(arg=1, lineno=1618)
         102	STORE_FAST(arg=7, lineno=1618)
         104	LOAD_FAST(arg=0, lineno=1619)
         106	LOAD_CONST(arg=1, lineno=1619)
         108	COMPARE_OP(arg=2, lineno=1619)
         110	STORE_FAST(arg=8, lineno=1619)
         112	JUMP_FORWARD(arg=20, lineno=1619)
>        114	LOAD_FAST(arg=0, lineno=1621)
         116	LOAD_FAST(arg=3, lineno=1621)
         118	BINARY_FLOOR_DIVIDE(arg=None, lineno=1621)
         120	STORE_FAST(arg=7, lineno=1621)
         122	LOAD_FAST(arg=0, lineno=1622)
         124	LOAD_FAST(arg=3, lineno=1622)
         126	BINARY_MODULO(arg=None, lineno=1622)
         128	LOAD_CONST(arg=1, lineno=1622)
         130	COMPARE_OP(arg=2, lineno=1622)
         132	STORE_FAST(arg=8, lineno=1622)
>        134	LOAD_FAST(arg=8, lineno=1623)
         136	POP_JUMP_IF_TRUE(arg=146, lineno=1623)
         138	LOAD_GLOBAL(arg=1, lineno=1624)
         140	LOAD_CONST(arg=3, lineno=1624)
         142	CALL_FUNCTION(arg=1, lineno=1624)
         144	RAISE_VARARGS(arg=1, lineno=1624)
>        146	LOAD_FAST(arg=7, lineno=1625)
         148	LOAD_FAST(arg=1, lineno=1625)
         150	LOAD_FAST(arg=6, lineno=1625)
         152	STORE_SUBSCR(arg=None, lineno=1625)
         154	JUMP_FORWARD(arg=8, lineno=1625)
>        156	LOAD_GLOBAL(arg=1, lineno=1628)
         158	LOAD_CONST(arg=4, lineno=1628)
         160	CALL_FUNCTION(arg=1, lineno=1628)
         162	RAISE_VARARGS(arg=1, lineno=1628)
>        164	LOAD_CONST(arg=0, lineno=1628)
         166	RETURN_VALUE(arg=None, lineno=1628)
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=1602)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=1602)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=STORE_FAST(arg=2, lineno=1602)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$const2.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=2, lineno=1603)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1603)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$const6.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$10load_global.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$10load_global.2', '$shape12.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=GET_ITER(arg=None, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.4']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=18, stack=('$16get_iter.5',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi18.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=FOR_ITER(arg=38, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi18.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=1611)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=1611)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$num_neg_value58.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=1611)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$num_neg_value58.0', '$const60.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=84, lineno=1611)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$62compare_op.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=84, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=20 nstack_initial=2), State(pc_initial=66 nstack_initial=0), State(pc_initial=84 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi20.0', '$phi20.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=UNPACK_SEQUENCE(arg=2, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$phi20.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=STORE_FAST(arg=4, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$20unpack_sequence.3', '$20unpack_sequence.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=5, lineno=1604)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$20unpack_sequence.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=1605)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=1605)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$s26.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=1605)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$s26.5', '$const28.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=48, lineno=1605)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi20.0', '$30compare_op.7']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=34, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=48, stack=('$phi20.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=1612)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=1612)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize66.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=1612)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize66.0', '$known_size68.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=164, lineno=1612)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$70compare_op.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=164, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=2, lineno=1615)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=2, lineno=1615)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$num_neg_value84.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=2, lineno=1615)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$num_neg_value84.0', '$const86.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=156, lineno=1615)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=156, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi34.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=1606)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi34.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=1606)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi34.0', '$num_neg_value34.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=INPLACE_ADD(arg=None, lineno=1606)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi34.0', '$num_neg_value34.1', '$const36.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=2, lineno=1606)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi34.0', '$38inplace_add.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=1607)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi34.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=STORE_FAST(arg=6, lineno=1607)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi34.0', '$ax42.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=JUMP_ABSOLUTE(arg=18, lineno=1607)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi34.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=18, stack=('$phi34.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: ['$phi48.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=1609)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=1609)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0', '$known_size48.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=INPLACE_MULTIPLY(arg=None, lineno=1609)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0', '$known_size48.1', '$s50.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=STORE_FAST(arg=3, lineno=1609)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0', '$52inplace_multiply.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=JUMP_ABSOLUTE(arg=18, lineno=1609)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=18, stack=('$phi48.0',), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_GLOBAL(arg=1, lineno=1613)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_CONST(arg=3, lineno=1613)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$74load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=1613)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$74load_global.0', '$const76.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=RAISE_VARARGS(arg=1, lineno=1613)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$78call_function.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_CONST(arg=0, lineno=1628)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=RETURN_VALUE(arg=None, lineno=1628)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$const164.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=3, lineno=1617)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=1617)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$known_size92.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=1617)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$known_size92.0', '$const94.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=POP_JUMP_IF_FALSE(arg=114, lineno=1617)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$96compare_op.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0), Edge(pc=114, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=156 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_GLOBAL(arg=1, lineno=1628)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=LOAD_CONST(arg=4, lineno=1628)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$156load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=CALL_FUNCTION(arg=1, lineno=1628)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$156load_global.0', '$const158.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=RAISE_VARARGS(arg=1, lineno=1628)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$160call_function.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=114 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1618)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=STORE_FAST(arg=7, lineno=1618)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$const100.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=1619)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_CONST(arg=1, lineno=1619)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize104.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=COMPARE_OP(arg=2, lineno=1619)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize104.1', '$const106.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=STORE_FAST(arg=8, lineno=1619)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$108compare_op.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=JUMP_FORWARD(arg=20, lineno=1619)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=0, lineno=1621)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=3, lineno=1621)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize114.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=1621)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize114.0', '$known_size116.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=STORE_FAST(arg=7, lineno=1621)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$118binary_floor_divide.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1622)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=LOAD_FAST(arg=3, lineno=1622)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize122.3']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=BINARY_MODULO(arg=None, lineno=1622)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$origsize122.3', '$known_size124.4']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=LOAD_CONST(arg=1, lineno=1622)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$126binary_modulo.5']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=COMPARE_OP(arg=2, lineno=1622)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$126binary_modulo.5', '$const128.6']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=STORE_FAST(arg=8, lineno=1622)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$130compare_op.7']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=LOAD_FAST(arg=8, lineno=1623)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_TRUE(arg=146, lineno=1623)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$ok134.0']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_GLOBAL(arg=1, lineno=1624)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=3, lineno=1624)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$138load_global.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=CALL_FUNCTION(arg=1, lineno=1624)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$138load_global.0', '$const140.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=RAISE_VARARGS(arg=1, lineno=1624)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$142call_function.2']
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=7, lineno=1625)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=1, lineno=1625)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$inferred146.0']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=LOAD_FAST(arg=6, lineno=1625)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$inferred146.0', '$shape148.1']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_SUBSCR(arg=None, lineno=1625)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack ['$inferred146.0', '$shape148.1', '$neg_ax150.2']
[2022-10-04 20:02:57] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=JUMP_FORWARD(arg=8, lineno=1625)
[2022-10-04 20:02:57] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 20:02:57] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0)]
[2022-10-04 20:02:57] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=164 nstack_initial=0)])
[2022-10-04 20:02:57] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 20:02:57] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=34 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=156 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set()})
[2022-10-04 20:02:57] [numba.core.byteflow:189 DEBUG] defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
[2022-10-04 20:02:57] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=1)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi48.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 20:02:57] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi18.0': {('$16get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
[2022-10-04 20:02:57] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.5'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
[2022-10-04 20:02:57] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$const6.1'}), (8, {'value': '$const6.1'}), (10, {'res': '$10load_global.2'}), (12, {'res': '$shape12.3'}), (14, {'func': '$10load_global.2', 'args': ['$shape12.3'], 'res': '$14call_function.4'}), (16, {'value': '$14call_function.4', 'res': '$16get_iter.5'})), outgoing_phis={'$phi18.0': '$16get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.5',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 20: ('$phi18.0', '$18for_iter.2')})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'iterable': '$phi20.1', 'stores': ['$20unpack_sequence.2', '$20unpack_sequence.3'], 'tupleobj': '$20unpack_sequence.4'}), (22, {'value': '$20unpack_sequence.2'}), (24, {'value': '$20unpack_sequence.3'}), (26, {'res': '$s26.5'}), (28, {'res': '$const28.6'}), (30, {'lhs': '$s26.5', 'rhs': '$const28.6', 'res': '$30compare_op.7'}), (32, {'pred': '$30compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$phi20.0',), 48: ('$phi20.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'res': '$num_neg_value34.1'}), (36, {'res': '$const36.2'}), (38, {'lhs': '$num_neg_value34.1', 'rhs': '$const36.2', 'res': '$38inplace_add.3'}), (40, {'value': '$38inplace_add.3'}), (42, {'res': '$ax42.4'}), (44, {'value': '$ax42.4'}), (46, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi34.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'res': '$known_size48.1'}), (50, {'res': '$s50.2'}), (52, {'lhs': '$known_size48.1', 'rhs': '$s50.2', 'res': '$52inplace_multiply.3'}), (54, {'value': '$52inplace_multiply.3'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi48.0',)})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$num_neg_value58.0'}), (60, {'res': '$const60.1'}), (62, {'lhs': '$num_neg_value58.0', 'rhs': '$const60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 84: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$origsize66.0'}), (68, {'res': '$known_size68.1'}), (70, {'lhs': '$origsize66.0', 'rhs': '$known_size68.1', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 164: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$74load_global.0'}), (76, {'res': '$const76.1'}), (78, {'func': '$74load_global.0', 'args': ['$const76.1'], 'res': '$78call_function.2'}), (80, {'exc': '$78call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$num_neg_value84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$num_neg_value84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 156: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$known_size92.0'}), (94, {'res': '$const94.1'}), (96, {'lhs': '$known_size92.0', 'rhs': '$const94.1', 'res': '$96compare_op.2'}), (98, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: (), 114: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$const100.0'}), (102, {'value': '$const100.0'}), (104, {'res': '$origsize104.1'}), (106, {'res': '$const106.2'}), (108, {'lhs': '$origsize104.1', 'rhs': '$const106.2', 'res': '$108compare_op.3'}), (110, {'value': '$108compare_op.3'}), (112, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$origsize114.0'}), (116, {'res': '$known_size116.1'}), (118, {'lhs': '$origsize114.0', 'rhs': '$known_size116.1', 'res': '$118binary_floor_divide.2'}), (120, {'value': '$118binary_floor_divide.2'}), (122, {'res': '$origsize122.3'}), (124, {'res': '$known_size124.4'}), (126, {'lhs': '$origsize122.3', 'rhs': '$known_size124.4', 'res': '$126binary_modulo.5'}), (128, {'res': '$const128.6'}), (130, {'lhs': '$126binary_modulo.5', 'rhs': '$const128.6', 'res': '$130compare_op.7'}), (132, {'value': '$130compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$ok134.0'}), (136, {'pred': '$ok134.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 146: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$138load_global.0'}), (140, {'res': '$const140.1'}), (142, {'func': '$138load_global.0', 'args': ['$const140.1'], 'res': '$142call_function.2'}), (144, {'exc': '$142call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$inferred146.0'}), (148, {'res': '$shape148.1'}), (150, {'res': '$neg_ax150.2'}), (152, {'target': '$shape148.1', 'index': '$neg_ax150.2', 'value': '$inferred146.0'}), (154, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: ()})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=156 nstack_initial=0):
AdaptBlockInfo(insts=((156, {'res': '$156load_global.0'}), (158, {'res': '$const158.1'}), (160, {'func': '$156load_global.0', 'args': ['$const158.1'], 'res': '$160call_function.2'}), (162, {'exc': '$160call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$const164.0'}), (166, {'retval': '$const164.0', 'castval': '$166return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 20:02:57] [numba.core.interpreter:379 DEBUG] label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
label 20:
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    $const28.6 = const(int, 0)               ['$const28.6']
    $30compare_op.7 = s < $const28.6         ['$30compare_op.7', '$const28.6', 's']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None) ['$30compare_op.7', '$32pred', 'bool32']
    branch $32pred, 34, 48                   ['$32pred']
label 34:
    $const36.2 = const(int, 1)               ['$const36.2']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 18                                  []
label 48:
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    jump 18                                  []
label 58:
    $const60.1 = const(int, 0)               ['$const60.1']
    $62compare_op.2 = num_neg_value == $const60.1 ['$62compare_op.2', '$const60.1', 'num_neg_value']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 84                   ['$64pred']
label 66:
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 164                  ['$72pred']
label 74:
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $const76.1 = const(str, total size of new array must be unchanged) ['$const76.1']
    $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None) ['$74load_global.0', '$78call_function.2', '$const76.1']
    raise $78call_function.2                 ['$78call_function.2']
label 84:
    $const86.1 = const(int, 1)               ['$const86.1']
    $88compare_op.2 = num_neg_value == $const86.1 ['$88compare_op.2', '$const86.1', 'num_neg_value']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 156                  ['$90pred']
label 92:
    $const94.1 = const(int, 0)               ['$const94.1']
    $96compare_op.2 = known_size == $const94.1 ['$96compare_op.2', '$const94.1', 'known_size']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None) ['$96compare_op.2', '$98pred', 'bool98']
    branch $98pred, 100, 114                 ['$98pred']
label 100:
    inferred = const(int, 0)                 ['inferred']
    $const106.2 = const(int, 0)              ['$const106.2']
    ok = origsize == $const106.2             ['$const106.2', 'ok', 'origsize']
    jump 134                                 []
label 114:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $126binary_modulo.5 = origsize % known_size ['$126binary_modulo.5', 'known_size', 'origsize']
    $const128.6 = const(int, 0)              ['$const128.6']
    ok = $126binary_modulo.5 == $const128.6  ['$126binary_modulo.5', '$const128.6', 'ok']
    jump 134                                 []
label 134:
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None) ['$136pred', 'bool136', 'ok']
    branch $136pred, 146, 138                ['$136pred']
label 138:
    $138load_global.0 = global(ValueError: <class 'ValueError'>) ['$138load_global.0']
    $const140.1 = const(str, total size of new array must be unchanged) ['$const140.1']
    $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None) ['$138load_global.0', '$142call_function.2', '$const140.1']
    raise $142call_function.2                ['$142call_function.2']
label 146:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    jump 164                                 []
label 156:
    $156load_global.0 = global(ValueError: <class 'ValueError'>) ['$156load_global.0']
    $const158.1 = const(str, multiple negative shape values) ['$const158.1']
    $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None) ['$156load_global.0', '$160call_function.2', '$const158.1']
    raise $160call_function.2                ['$160call_function.2']
label 164:
    $const164.0 = const(NoneType, None)      ['$const164.0']
    $166return_value.1 = cast(value=$const164.0) ['$166return_value.1', '$const164.0']
    return $166return_value.1                ['$166return_value.1']

[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_global.2': [<numba.core.ir.Assign object at 0x7fbc945c9310>],
             '$126binary_modulo.5': [<numba.core.ir.Assign object at 0x7fbc94ac8d30>],
             '$136pred': [<numba.core.ir.Assign object at 0x7fbc94a99310>],
             '$138load_global.0': [<numba.core.ir.Assign object at 0x7fbc94a99550>],
             '$142call_function.2': [<numba.core.ir.Assign object at 0x7fbc94a99880>],
             '$14call_function.4': [<numba.core.ir.Assign object at 0x7fbc945c95e0>],
             '$156load_global.0': [<numba.core.ir.Assign object at 0x7fbc94a99fd0>],
             '$160call_function.2': [<numba.core.ir.Assign object at 0x7fbc94ac0340>],
             '$166return_value.1': [<numba.core.ir.Assign object at 0x7fbc94ac0790>],
             '$16get_iter.5': [<numba.core.ir.Assign object at 0x7fbc945c9730>],
             '$18for_iter.1': [<numba.core.ir.Assign object at 0x7fbc945c99d0>],
             '$18for_iter.2': [<numba.core.ir.Assign object at 0x7fbc945c9af0>],
             '$18for_iter.3': [<numba.core.ir.Assign object at 0x7fbc945c9c10>],
             '$20unpack_sequence.2': [<numba.core.ir.Assign object at 0x7fbc945ca0a0>],
             '$20unpack_sequence.3': [<numba.core.ir.Assign object at 0x7fbc945ca1c0>],
             '$20unpack_sequence.4': [<numba.core.ir.Assign object at 0x7fbc945c9f10>],
             '$30compare_op.7': [<numba.core.ir.Assign object at 0x7fbc945ca7f0>],
             '$32pred': [<numba.core.ir.Assign object at 0x7fbc945caa90>],
             '$38inplace_add.3': [<numba.core.ir.Assign object at 0x7fbc945caf70>],
             '$52inplace_multiply.3': [<numba.core.ir.Assign object at 0x7fbc94ac6730>],
             '$62compare_op.2': [<numba.core.ir.Assign object at 0x7fbc94ac6cd0>],
             '$64pred': [<numba.core.ir.Assign object at 0x7fbc94ac6f70>],
             '$70compare_op.2': [<numba.core.ir.Assign object at 0x7fbc94ac7430>],
             '$72pred': [<numba.core.ir.Assign object at 0x7fbc94ac76d0>],
             '$74load_global.0': [<numba.core.ir.Assign object at 0x7fbc94ac78b0>],
             '$78call_function.2': [<numba.core.ir.Assign object at 0x7fbc94ac7be0>],
             '$88compare_op.2': [<numba.core.ir.Assign object at 0x7fbc94ac3190>],
             '$90pred': [<numba.core.ir.Assign object at 0x7fbc94ac3430>],
             '$96compare_op.2': [<numba.core.ir.Assign object at 0x7fbc94ac3910>],
             '$98pred': [<numba.core.ir.Assign object at 0x7fbc94ac3bb0>],
             '$const106.2': [<numba.core.ir.Assign object at 0x7fbc94ac81f0>],
             '$const128.6': [<numba.core.ir.Assign object at 0x7fbc94ac8eb0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7fbc94a996d0>],
             '$const158.1': [<numba.core.ir.Assign object at 0x7fbc94ac0190>],
             '$const164.0': [<numba.core.ir.Assign object at 0x7fbc94ac0610>],
             '$const28.6': [<numba.core.ir.Assign object at 0x7fbc945ca670>],
             '$const36.2': [<numba.core.ir.Assign object at 0x7fbc945cadf0>],
             '$const60.1': [<numba.core.ir.Assign object at 0x7fbc94ac6b50>],
             '$const76.1': [<numba.core.ir.Assign object at 0x7fbc94ac7a30>],
             '$const86.1': [<numba.core.ir.Assign object at 0x7fbc94ac7fd0>],
             '$const94.1': [<numba.core.ir.Assign object at 0x7fbc94ac3790>],
             '$phi18.0': [<numba.core.ir.Assign object at 0x7fbc94f82520>],
             '$phi20.1': [<numba.core.ir.Assign object at 0x7fbc945c98e0>],
             'ax': [<numba.core.ir.Assign object at 0x7fbc945ca2b0>],
             'bool136': [<numba.core.ir.Assign object at 0x7fbc94a991f0>],
             'bool32': [<numba.core.ir.Assign object at 0x7fbc945ca970>],
             'bool64': [<numba.core.ir.Assign object at 0x7fbc94ac6e50>],
             'bool72': [<numba.core.ir.Assign object at 0x7fbc94ac75b0>],
             'bool90': [<numba.core.ir.Assign object at 0x7fbc94ac3310>],
             'bool98': [<numba.core.ir.Assign object at 0x7fbc94ac3a90>],
             'inferred': [<numba.core.ir.Assign object at 0x7fbc94ac3df0>,
                          <numba.core.ir.Assign object at 0x7fbc94ac88b0>],
             'known_size': [<numba.core.ir.Assign object at 0x7fbc945c9070>,
                            <numba.core.ir.Assign object at 0x7fbc94ac67f0>],
             'neg_ax': [<numba.core.ir.Assign object at 0x7fbc94ac62b0>],
             'num_neg_value': [<numba.core.ir.Assign object at 0x7fbc945afd90>,
                               <numba.core.ir.Assign object at 0x7fbc94ac6070>],
             'ok': [<numba.core.ir.Assign object at 0x7fbc94ac8370>,
                    <numba.core.ir.Assign object at 0x7fbc94a99070>],
             'origsize': [<numba.core.ir.Assign object at 0x7fbc94f53a00>],
             's': [<numba.core.ir.Assign object at 0x7fbc945ca3d0>],
             'shape': [<numba.core.ir.Assign object at 0x7fbc945afa00>]})
[2022-10-04 20:02:57] [numba.core.ssa:143 DEBUG] SSA violators {'ok', 'num_neg_value', 'inferred', 'known_size'}
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ok
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: ok
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94ac68e0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {100: [<numba.core.ir.Assign object at 0x7fbc94aaee50>],
             114: [<numba.core.ir.Assign object at 0x7fbc94b10160>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='ok' stmt=$136pred = call bool136(ok, func=bool136, args=(Var(ok, arrayobj.py:1619),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 134
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 134
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 114
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 100
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b109a0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var num_neg_value
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: num_neg_value
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: num_neg_value.1 = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:1622), Var(ok, arrayobj.py:1619)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94a5edf0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbc94aae670>],
             34: [<numba.core.ir.Assign object at 0x7fbc94b33e50>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='num_neg_value' stmt=$38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 34
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 20 from label 34
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 20
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 20
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 20
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 18
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 165
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 165
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 165
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 20 from label 48
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 20
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 20
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 20
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:1602)], incoming_blocks=[0])
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 34
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def num_neg_value.1 = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[48, 34])
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.1 = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='num_neg_value' stmt=$62compare_op.2 = num_neg_value == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 58
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 58
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $62compare_op.2 = num_neg_value.2 == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='num_neg_value' stmt=$88compare_op.2 = num_neg_value == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 84
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 58 from label 84
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 58
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 58
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 58
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $88compare_op.2 = num_neg_value.2 == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:1622), Var(ok, arrayobj.py:1619)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var inferred
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:1602), Var(num_neg_value.3, arrayobj.py:1606)], incoming_blocks=[0, 165])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.1 = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: inferred
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: inferred.1 = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:1622), Var(ok, arrayobj.py:1619)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94b24bb0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[48, 34])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {100: [<numba.core.ir.Assign object at 0x7fbc94b046d0>],
             114: [<numba.core.ir.Assign object at 0x7fbc94b04b20>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:1602), Var(num_neg_value.3, arrayobj.py:1606)], incoming_blocks=[0, 165])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.1 = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred.1 = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:1622), Var(ok, arrayobj.py:1619)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='inferred' stmt=shape[neg_ax] = inferred
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 134 from label 146
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 134
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 134
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 134
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 114
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def inferred.1 = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 100
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: shape[neg_ax] = inferred.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b01e50>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[48, 34])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var known_size
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:256 DEBUG] first assign: known_size
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:1602), Var(num_neg_value.3, arrayobj.py:1606)], incoming_blocks=[0, 165])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.1 = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: known_size.1 = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred.1 = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:1621), Var(inferred, arrayobj.py:1618)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:1622), Var(ok, arrayobj.py:1619)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7fbc94af71c0>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[48, 34])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fbc94b2cdf0>],
             48: [<numba.core.ir.Assign object at 0x7fbc945552b0>]})
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: origsize = arg(0, name=origsize)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape = arg(1, name=shape)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:1602)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi18.0 = $16get_iter.5
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 18
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:1602), Var(num_neg_value.3, arrayobj.py:1606)], incoming_blocks=[0, 165])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.1 = iternext(value=$phi18.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $phi20.1 = $18for_iter.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $18for_iter.3, 20, 58
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 20
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ax = $20unpack_sequence.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: s = $20unpack_sequence.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const28.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $30compare_op.7 = s < $const28.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool32 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:1605),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $32pred, 34, 48
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 34
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const36.2 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.1 = $38inplace_add.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: neg_ax = ax
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='known_size' stmt=$52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 20 from label 48
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 20
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 20
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 20
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 18
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def known_size = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 165
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 165
[2022-10-04 20:02:57] [numba.core.ssa:380 DEBUG] insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 165
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def known_size.1 = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 34
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 34
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 20 from label 34
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 20
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 20
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 20
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:1603)], incoming_blocks=[0])
[2022-10-04 20:02:57] [numba.core.ssa:388 DEBUG] incoming_def known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:1609), Var(known_size.2, arrayobj.py:1609)], incoming_blocks=[48, 34])
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: known_size.1 = $52inplace_multiply.3
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 165
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 58
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const60.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool64 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:1611),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $64pred, 66, 84
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 66
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='known_size' stmt=$70compare_op.2 = origsize != known_size
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 66
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 58 from label 66
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 58
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 58
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 58
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $70compare_op.2 = origsize != known_size.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool72 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:1612),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $72pred, 74, 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 74
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const76.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:1613)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 84
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const86.1 = const(int, 1)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $88compare_op.2 = num_neg_value.2 == $const86.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool90 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, arrayobj.py:1615),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $90pred, 92, 156
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 92
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const94.1 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='known_size' stmt=$96compare_op.2 = known_size == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 92
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 84 from label 92
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 84
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 84
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 58 from label 84
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 58
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 58
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 58
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $96compare_op.2 = known_size.2 == $const94.1
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool98 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $98pred = call bool98($96compare_op.2, func=bool98, args=(Var($96compare_op.2, arrayobj.py:1617),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $98pred, 100, 114
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 100
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const106.2 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok = origsize == $const106.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred.1 = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='known_size' stmt=inferred.1 = origsize // known_size
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 92 from label 114
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 92
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 92
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 84 from label 92
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 84
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 84
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 58 from label 84
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 58
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 58
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 58
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: inferred.1 = origsize // known_size.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:332 DEBUG] find_def var='known_size' stmt=$126binary_modulo.5 = origsize % known_size
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 92 from label 114
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 92
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 92
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 84 from label 92
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 84
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 84
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 58 from label 84
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 58
[2022-10-04 20:02:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 58
[2022-10-04 20:02:57] [numba.core.ssa:400 DEBUG] idom 18 from label 58
[2022-10-04 20:02:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 18
[2022-10-04 20:02:57] [numba.core.ssa:186 DEBUG] replaced with: $126binary_modulo.5 = origsize % known_size.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const128.6 = const(int, 0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.1 = $126binary_modulo.5 == $const128.6
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 134
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 134
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:1621), Var(inferred, arrayobj.py:1618)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:1622), Var(ok, arrayobj.py:1619)], incoming_blocks=[114, 100])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136(ok.2, func=bool136, args=(Var(ok.2, arrayobj.py:1623),), kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 146, 138
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $138load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(str, total size of new array must be unchanged)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $142call_function.2 = call $138load_global.0($const140.1, func=$138load_global.0, args=[Var($const140.1, arrayobj.py:1624)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: shape[neg_ax] = inferred.2
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 164
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 156
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $156load_global.0 = global(ValueError: <class 'ValueError'>)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const158.1 = const(str, multiple negative shape values)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $160call_function.2 = call $156load_global.0($const158.1, func=$156load_global.0, args=[Var($const158.1, arrayobj.py:1628)], kws=(), vararg=None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 164
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $const164.0 = const(NoneType, None)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: $166return_value.1 = cast(value=$const164.0)
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: return $166return_value.1
[2022-10-04 20:02:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 165
[2022-10-04 20:02:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7fbc94b33670>
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:1606), Var(num_neg_value.1, arrayobj.py:1606)], incoming_blocks=[48, 34])
[2022-10-04 20:02:57] [numba.core.ssa:180 DEBUG] on stmt: jump 18
[2022-10-04 20:06:46] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 20:06:46] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 20:06:46] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 20:06:46] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 20:06:46] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:19:19] [segment:54 DEBUG] consumer exited.
[2022-10-04 21:19:26] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 21:19:26] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 21:19:26] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 21:19:52] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 21:19:52] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:19:52] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 21:19:52] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 21:19:52] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:19:52] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:19:52] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:19:52] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:19:52] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 21:19:52] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 21:19:52] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f731c0e7f10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f731c0e7f10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f731c0e7f10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f731c0e7f10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f731c049ac0>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f731c04c100>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f731c049cd0>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f731c094cd0>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f731c094e50>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f731c042130>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f731c042b50>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f731c094730>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f731c044c10>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f731c0470a0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f731c0471f0>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f731c0945e0>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f731c047250>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f731c047370>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f731c047b50>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f731c047df0>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f731c047f70>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f731c0495b0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f731c049700>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f731c042730>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f731c0429d0>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f731c044370>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f731c0449d0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f731c0948b0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f731c044d90>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f731c0478b0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f731c049310>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f731c042850>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f731c044eb0>],
             'alpha': [<numba.core.ir.Assign object at 0x7f731c042cd0>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f731c094370>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f731c04c9d0>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f731c0425e0>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f731c04ca90>,
                          <numba.core.ir.Assign object at 0x7f731c049c40>],
             'i': [<numba.core.ir.Assign object at 0x7f731c047610>],
             'weight': [<numba.core.ir.Assign object at 0x7f731c042f70>,
                        <numba.core.ir.Assign object at 0x7f731c049070>],
             'window': [<numba.core.ir.Assign object at 0x7f731c094490>]})
[2022-10-04 21:19:52] [numba.core.ssa:143 DEBUG] SSA violators {'ewma_old', 'weight'}
[2022-10-04 21:19:52] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c0e7fd0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c0e7fd0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c0e7fd0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c0e7fd0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f731c04cfd0>],
             70: [<numba.core.ir.Assign object at 0x7f72f848f6d0>]})
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f848f940>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f848f940>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f848f940>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f848f940>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c04ceb0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c04ceb0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c04ceb0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f731c04ceb0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f72f848f2b0>],
             70: [<numba.core.ir.Assign object at 0x7f72f84b3550>]})
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f84a6be0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f84a6be0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f84a6be0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f84a6be0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:19:52] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:52] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 21:19:52] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 21:19:52] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:19:52] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:19:52] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 21:19:52] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 21:19:52] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 21:19:52] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 21:19:52] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 21:19:52] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 21:19:52] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:52] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72f8474f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f72f843cf70>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f72f8447250>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f72f84474f0>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f72f8447730>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f72f84478b0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f72f8447b50>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f72f8447e20>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f72f8447fa0>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f72f8449130>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f72f84495b0>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f72f8449850>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f72f8449d30>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f72f8449fd0>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f72f83cb490>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f72f83cb9d0>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f72f83cbe50>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f72f83ce370>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f72f83ce850>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f72f83ce9d0>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f72f83ced30>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f72f848a790>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f72f848aa30>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f72f843c9d0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f72f843e490>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f72f843e730>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f72f843e850>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f72f843eb50>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f72f843edf0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f72f84470d0>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f72f8449430>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f72f8449bb0>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f72f83cb850>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f72f83ce5b0>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f72f848a610>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f72f843e310>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f72f843cb50>],
             'a': [<numba.core.ir.Assign object at 0x7f72f843c730>],
             'a.1': [<numba.core.ir.Assign object at 0x7f72f848a280>,
                     <numba.core.ir.Assign object at 0x7f72f83cbf10>],
             'b': [<numba.core.ir.Assign object at 0x7f72f843c850>],
             'bool112': [<numba.core.ir.Assign object at 0x7f72f84473d0>],
             'bool136': [<numba.core.ir.Assign object at 0x7f72f8449730>],
             'bool144': [<numba.core.ir.Assign object at 0x7f72f8449eb0>],
             'bool174': [<numba.core.ir.Assign object at 0x7f72f83ce250>],
             'bool24': [<numba.core.ir.Assign object at 0x7f72f848a910>],
             'bool42': [<numba.core.ir.Assign object at 0x7f72f843e610>],
             'bool50': [<numba.core.ir.Assign object at 0x7f72f843ecd0>],
             'exp': [<numba.core.ir.Assign object at 0x7f72f848af10>,
                     <numba.core.ir.Assign object at 0x7f72f8445df0>,
                     <numba.core.ir.Assign object at 0x7f72f83cba90>],
             'invert': [<numba.core.ir.Assign object at 0x7f72f848ab50>,
                        <numba.core.ir.Assign object at 0x7f72f8445b50>],
             'r': [<numba.core.ir.Assign object at 0x7f72f843cd00>,
                   <numba.core.ir.Assign object at 0x7f72f83cb550>]})
[2022-10-04 21:19:52] [numba.core.ssa:143 DEBUG] SSA violators {'a.1', 'exp', 'invert', 'r'}
[2022-10-04 21:19:52] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f8481f40>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f72f84076a0>],
             154: [<numba.core.ir.Assign object at 0x7f72f83946a0>]})
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8394a60>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f848fc10>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f72f8407490>],
             98: [<numba.core.ir.Assign object at 0x7f72f83c1280>],
             154: [<numba.core.ir.Assign object at 0x7f72f83c1df0>]})
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f83b1af0>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f834f100>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f72f83c1f10>],
             98: [<numba.core.ir.Assign object at 0x7f72f836c910>]})
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8360b50>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f72f837c580>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f72f837c310>],
             146: [<numba.core.ir.Assign object at 0x7f72f831de50>]})
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 21:19:52] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:19:52] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:19:52] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f72f8311670>
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 21:19:52] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 21:19:52] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 21:19:52] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:19:52] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:19:52] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:19:52] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 21:19:53] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 21:19:53] [segment:50 DEBUG] consumer is running...
[2022-10-04 21:19:53] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-05T01:19:53.420262+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 21, 19, 53, 419602)}, 'messageId': '2e603eeb-af25-4c16-9b4d-0748608d10cf'}
[2022-10-04 21:19:53] [segment:289 DEBUG] enqueued identify.
[2022-10-04 21:19:53] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-05T01:19:53.420262+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T21:19:53.419602"}, "messageId": "2e603eeb-af25-4c16-9b4d-0748608d10cf"}], "sentAt": "2022-10-05T01:19:53.921305+00:00"}
[2022-10-04 21:19:54] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 21:19:54] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 21:19:54] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 21:19:54] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 21:19:54] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 21:19:54] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 21:19:54] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 21, 19, 54, 837726)}, 'timestamp': '2022-10-05T01:19:54.837765+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': 'da11f32e-3c49-44ab-87c8-43008dfa6204'}
[2022-10-04 21:19:54] [segment:289 DEBUG] enqueued track.
[2022-10-04 21:19:54] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=468)
           2	LOAD_GLOBAL(arg=0, lineno=468)
           4	LOAD_ATTR(arg=1, lineno=468)
           6	LOAD_FAST(arg=1, lineno=468)
           8	LOAD_ATTR(arg=2, lineno=468)
          10	LOAD_CONST(arg=1, lineno=468)
          12	BINARY_SUBSCR(arg=None, lineno=468)
          14	LOAD_FAST(arg=0, lineno=468)
          16	LOAD_ATTR(arg=2, lineno=468)
          18	LOAD_CONST(arg=2, lineno=468)
          20	BINARY_SUBSCR(arg=None, lineno=468)
          22	BUILD_TUPLE(arg=2, lineno=468)
          24	LOAD_GLOBAL(arg=0, lineno=468)
          26	LOAD_ATTR(arg=3, lineno=468)
          28	LOAD_CONST(arg=3, lineno=468)
          30	CALL_FUNCTION_KW(arg=2, lineno=468)
          32	STORE_FAST(arg=5, lineno=468)
          34	LOAD_GLOBAL(arg=4, lineno=469)
          36	LOAD_FAST(arg=0, lineno=469)
          38	LOAD_ATTR(arg=2, lineno=469)
          40	LOAD_CONST(arg=2, lineno=469)
          42	BINARY_SUBSCR(arg=None, lineno=469)
          44	CALL_FUNCTION(arg=1, lineno=469)
          46	GET_ITER(arg=None, lineno=469)
>         48	FOR_ITER(arg=48, lineno=469)
          50	STORE_FAST(arg=6, lineno=469)
          52	LOAD_GLOBAL(arg=5, lineno=470)
          54	LOAD_FAST(arg=0, lineno=470)
          56	LOAD_CONST(arg=4, lineno=470)
          58	LOAD_CONST(arg=4, lineno=470)
          60	BUILD_SLICE(arg=2, lineno=470)
          62	LOAD_FAST(arg=6, lineno=470)
          64	BUILD_TUPLE(arg=2, lineno=470)
          66	BINARY_SUBSCR(arg=None, lineno=470)
          68	LOAD_FAST(arg=1, lineno=470)
          70	LOAD_FAST(arg=2, lineno=470)
          72	LOAD_FAST(arg=3, lineno=470)
          74	BUILD_TUPLE(arg=4, lineno=470)
          76	LOAD_FAST(arg=4, lineno=470)
          78	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
          80	CALL_FUNCTION_EX(arg=0, lineno=470)
          82	LOAD_FAST(arg=5, lineno=470)
          84	LOAD_CONST(arg=4, lineno=470)
          86	LOAD_CONST(arg=4, lineno=470)
          88	BUILD_SLICE(arg=2, lineno=470)
          90	LOAD_FAST(arg=6, lineno=470)
          92	BUILD_TUPLE(arg=2, lineno=470)
          94	STORE_SUBSCR(arg=None, lineno=470)
          96	JUMP_ABSOLUTE(arg=48, lineno=470)
>         98	LOAD_FAST(arg=5, lineno=471)
         100	RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$arr14.6']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=BUILD_TUPLE(arg=2, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$20binary_subscr.9']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$24load_global.11']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION_KW(arg=2, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12', '$const28.13']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=STORE_FAST(arg=5, lineno=468)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$30call_function_kw.14']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=LOAD_GLOBAL(arg=4, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_ATTR(arg=2, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$arr36.16']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17', '$const40.18']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=CALL_FUNCTION(arg=1, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$42binary_subscr.19']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=GET_ITER(arg=None, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$44call_function.20']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$46get_iter.21',), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: ['$phi48.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=FOR_ITER(arg=48, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=50, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=50 nstack_initial=2)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=471)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$out98.0']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=50 nstack_initial=2)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: ['$phi50.0', '$phi50.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=STORE_FAST(arg=6, lineno=469)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$phi50.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_GLOBAL(arg=5, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4', '$const58.5']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7', '$col62.8']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$64build_tuple.9']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_FAST(arg=2, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=3, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=BUILD_TUPLE(arg=4, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14', '$args76.15']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=CALL_FUNCTION_EX(arg=0, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$78build_tuple_unpack_with_call.16']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19', '$const86.20']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22', '$col90.23']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=STORE_SUBSCR(arg=None, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$92build_tuple.24']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=JUMP_ABSOLUTE(arg=48, lineno=470)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$phi50.0',), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:19:54] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=50 nstack_initial=2): {'$phi50.1'},
             State(pc_initial=98 nstack_initial=0): set()})
[2022-10-04 21:19:54] [numba.core.byteflow:189 DEBUG] defmap: {'$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.1': State(pc_initial=48 nstack_initial=1)}
[2022-10-04 21:19:54] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=2))},
             '$phi50.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:19:54] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:19:54] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:19:54] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:19:54] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi48.0': {('$46get_iter.21', State(pc_initial=0 nstack_initial=0))},
 '$phi50.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
[2022-10-04 21:19:54] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.21'},
             State(pc_initial=48 nstack_initial=1): {'$phi50.1': '$48for_iter.2'}})
[2022-10-04 21:19:54] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$arr14.6'}), (16, {'item': '$arr14.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$16load_attr.7', 'res': '$20binary_subscr.9'}), (22, {'items': ['$12binary_subscr.5', '$20binary_subscr.9'], 'res': '$22build_tuple.10'}), (24, {'res': '$24load_global.11'}), (26, {'item': '$24load_global.11', 'res': '$26load_attr.12'}), (28, {'res': '$const28.13'}), (30, {'func': '$4load_attr.1', 'args': ['$22build_tuple.10', '$26load_attr.12'], 'names': '$const28.13', 'res': '$30call_function_kw.14'}), (32, {'value': '$30call_function_kw.14'}), (34, {'res': '$34load_global.15'}), (36, {'res': '$arr36.16'}), (38, {'item': '$arr36.16', 'res': '$38load_attr.17'}), (40, {'res': '$const40.18'}), (42, {'index': '$const40.18', 'target': '$38load_attr.17', 'res': '$42binary_subscr.19'}), (44, {'func': '$34load_global.15', 'args': ['$42binary_subscr.19'], 'res': '$44call_function.20'}), (46, {'value': '$44call_function.20', 'res': '$46get_iter.21'})), outgoing_phis={'$phi48.0': '$46get_iter.21'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.21',)})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi50.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 50: ('$phi48.0', '$48for_iter.2')})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=50 nstack_initial=2):
AdaptBlockInfo(insts=((50, {'value': '$phi50.1'}), (52, {'res': '$52load_global.2'}), (54, {'res': '$arr54.3'}), (56, {'res': '$const56.4'}), (58, {'res': '$const58.5'}), (60, {'start': '$const56.4', 'stop': '$const58.5', 'step': None, 'res': '$60build_slice.7', 'slicevar': '$60build_slice.6'}), (62, {'res': '$col62.8'}), (64, {'items': ['$60build_slice.7', '$col62.8'], 'res': '$64build_tuple.9'}), (66, {'index': '$64build_tuple.9', 'target': '$arr54.3', 'res': '$66binary_subscr.10'}), (68, {'res': '$range_starts68.11'}), (70, {'res': '$range_ends70.12'}), (72, {'res': '$reduce_func_nb72.13'}), (74, {'items': ['$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13'], 'res': '$74build_tuple.14'}), (76, {'res': '$args76.15'}), (78, {'tuples': ['$74build_tuple.14', '$args76.15'], 'temps': ['$78build_tuple_unpack_with_call.16'], 'is_assign': False}), (80, {'func': '$52load_global.2', 'vararg': '$78build_tuple_unpack_with_call.16', 'res': '$80call_function_ex.17'}), (82, {'res': '$out82.18'}), (84, {'res': '$const84.19'}), (86, {'res': '$const86.20'}), (88, {'start': '$const84.19', 'stop': '$const86.20', 'step': None, 'res': '$88build_slice.22', 'slicevar': '$88build_slice.21'}), (90, {'res': '$col90.23'}), (92, {'items': ['$88build_slice.22', '$col90.23'], 'res': '$92build_tuple.24'}), (94, {'target': '$out82.18', 'index': '$92build_tuple.24', 'value': '$80call_function_ex.17'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi50.0',)})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$out98.0'}), (100, {'retval': '$out98.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:54] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $16load_attr.7 = getattr(value=arr, attr=shape) ['$16load_attr.7', 'arr']
    $const18.8 = const(int, 1)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=$16load_attr.7, index=$const18.8, fn=<built-in function getitem>) ['$16load_attr.7', '$20binary_subscr.9', '$const18.8']
    $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)]) ['$12binary_subscr.5', '$20binary_subscr.9', '$22build_tuple.10']
    $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$24load_global.11']
    $26load_attr.12 = getattr(value=$24load_global.11, attr=float_) ['$24load_global.11', '$26load_attr.12']
    out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None) ['$22build_tuple.10', '$26load_attr.12', '$4load_attr.1', 'out']
    $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>) ['$34load_global.15']
    $38load_attr.17 = getattr(value=arr, attr=shape) ['$38load_attr.17', 'arr']
    $const40.18 = const(int, 1)              ['$const40.18']
    $42binary_subscr.19 = getitem(value=$38load_attr.17, index=$const40.18, fn=<built-in function getitem>) ['$38load_attr.17', '$42binary_subscr.19', '$const40.18']
    $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None) ['$34load_global.15', '$42binary_subscr.19', '$44call_function.20']
    $46get_iter.21 = getiter(value=$44call_function.20) ['$44call_function.20', '$46get_iter.21']
    $phi48.0 = $46get_iter.21                ['$46get_iter.21', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi50.1 = $48for_iter.2                 ['$48for_iter.2', '$phi50.1']
    branch $48for_iter.3, 50, 98             ['$48for_iter.3']
label 50:
    col = $phi50.1                           ['$phi50.1', 'col']
    $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7f7347116d30>)) ['$52load_global.2']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $const58.5 = const(NoneType, None)       ['$const58.5']
    $60build_slice.6 = global(slice: <class 'slice'>) ['$60build_slice.6']
    $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None) ['$60build_slice.6', '$60build_slice.7', '$const56.4', '$const58.5']
    $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$60build_slice.7', '$64build_tuple.9', 'col']
    $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>) ['$64build_tuple.9', '$66binary_subscr.10', 'arr']
    $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)]) ['$66binary_subscr.10', '$74build_tuple.14', 'range_ends', 'range_starts', 'reduce_func_nb']
    $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args ['$74build_tuple.14', '$78build_tuple_unpack_with_call.16', 'args']
    $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16) ['$52load_global.2', '$78build_tuple_unpack_with_call.16', '$80call_function_ex.17']
    $const84.19 = const(NoneType, None)      ['$const84.19']
    $const86.20 = const(NoneType, None)      ['$const86.20']
    $88build_slice.21 = global(slice: <class 'slice'>) ['$88build_slice.21']
    $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None) ['$88build_slice.21', '$88build_slice.22', '$const84.19', '$const86.20']
    $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$88build_slice.22', '$92build_tuple.24', 'col']
    out[$92build_tuple.24] = $80call_function_ex.17 ['$80call_function_ex.17', '$92build_tuple.24', 'out']
    jump 48                                  []
label 98:
    $100return_value.1 = cast(value=out)     ['$100return_value.1', 'out']
    return $100return_value.1                ['$100return_value.1']

[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8b14d30>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=arr, attr=shape)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const18.8 = const(int, 1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $20binary_subscr.9 = static_getitem(value=$16load_attr.7, index=1, index_var=$const18.8, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)])
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $26load_attr.12 = getattr(value=$24load_global.11, attr=float_)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $38load_attr.17 = getattr(value=arr, attr=shape)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const40.18 = const(int, 1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $42binary_subscr.19 = static_getitem(value=$38load_attr.17, index=1, index_var=$const40.18, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.21 = getiter(value=$44call_function.20)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.21
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8b14d30>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 98
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 50
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8b14d30>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: col = $phi50.1
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7f7347116d30>))
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const56.4 = const(NoneType, None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const58.5 = const(NoneType, None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.6 = global(slice: <class 'slice'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)])
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const84.19 = const(NoneType, None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const86.20 = const(NoneType, None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.21 = global(slice: <class 'slice'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: out[$92build_tuple.24] = $80call_function_ex.17
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8b14d30>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $100return_value.1 = cast(value=out)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: return $100return_value.1
[2022-10-04 21:19:54] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100return_value.1': [<numba.core.ir.Assign object at 0x7f72a8afadc0>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7f72a8b12490>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7f72a8af1ee0>],
             '$20binary_subscr.9': [<numba.core.ir.Assign object at 0x7f72a8b12550>],
             '$22build_tuple.10': [<numba.core.ir.Assign object at 0x7f72a8af33d0>],
             '$24load_global.11': [<numba.core.ir.Assign object at 0x7f72a8af3520>],
             '$26load_attr.12': [<numba.core.ir.Assign object at 0x7f72a8af36a0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f72a8af1520>],
             '$34load_global.15': [<numba.core.ir.Assign object at 0x7f72a8af3ca0>],
             '$38load_attr.17': [<numba.core.ir.Assign object at 0x7f72a8af3f40>],
             '$42binary_subscr.19': [<numba.core.ir.Assign object at 0x7f72a8b12610>],
             '$44call_function.20': [<numba.core.ir.Assign object at 0x7f72a8af6430>],
             '$46get_iter.21': [<numba.core.ir.Assign object at 0x7f72a8af6580>],
             '$48for_iter.1': [<numba.core.ir.Assign object at 0x7f72a8af67c0>],
             '$48for_iter.2': [<numba.core.ir.Assign object at 0x7f72a8af68e0>],
             '$48for_iter.3': [<numba.core.ir.Assign object at 0x7f72a8af6a00>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f72a8af16a0>],
             '$52load_global.2': [<numba.core.ir.Assign object at 0x7f72a8af6e20>],
             '$60build_slice.6': [<numba.core.ir.Assign object at 0x7f72a8af8430>],
             '$60build_slice.7': [<numba.core.ir.Assign object at 0x7f72a8af8550>],
             '$64build_tuple.9': [<numba.core.ir.Assign object at 0x7f72a8af87f0>],
             '$66binary_subscr.10': [<numba.core.ir.Assign object at 0x7f72a8af8940>],
             '$74build_tuple.14': [<numba.core.ir.Assign object at 0x7f72a8af8e50>],
             '$78build_tuple_unpack_with_call.16': [<numba.core.ir.Assign object at 0x7f72a8afa190>],
             '$80call_function_ex.17': [<numba.core.ir.Assign object at 0x7f72a8afa280>],
             '$88build_slice.21': [<numba.core.ir.Assign object at 0x7f72a8afa850>],
             '$88build_slice.22': [<numba.core.ir.Assign object at 0x7f72a8afa970>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f72a8af1940>],
             '$92build_tuple.24': [<numba.core.ir.Assign object at 0x7f72a8afac10>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7f72a8af1ac0>],
             '$const18.8': [<numba.core.ir.Assign object at 0x7f72a8af30a0>],
             '$const40.18': [<numba.core.ir.Assign object at 0x7f72a8af6100>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f72a8af8100>],
             '$const58.5': [<numba.core.ir.Assign object at 0x7f72a8af8280>],
             '$const84.19': [<numba.core.ir.Assign object at 0x7f72a8afa520>],
             '$const86.20': [<numba.core.ir.Assign object at 0x7f72a8afa6a0>],
             '$phi48.0': [<numba.core.ir.Assign object at 0x7f72a8af1d60>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7f72a8af66d0>],
             'args': [<numba.core.ir.Assign object at 0x7f72a8af13a0>],
             'arr': [<numba.core.ir.Assign object at 0x7f72a8b54ee0>],
             'col': [<numba.core.ir.Assign object at 0x7f72a8af6ca0>],
             'out': [<numba.core.ir.Assign object at 0x7f72a8af3b50>],
             'range_ends': [<numba.core.ir.Assign object at 0x7f72a8af1160>],
             'range_starts': [<numba.core.ir.Assign object at 0x7f72a8af1040>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7f72a8af1280>]})
[2022-10-04 21:19:54] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 21:19:54] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	LOAD_GLOBAL(arg=0, lineno=436)
           4	LOAD_ATTR(arg=1, lineno=436)
           6	LOAD_FAST(arg=1, lineno=436)
           8	LOAD_ATTR(arg=2, lineno=436)
          10	LOAD_CONST(arg=1, lineno=436)
          12	BINARY_SUBSCR(arg=None, lineno=436)
          14	LOAD_GLOBAL(arg=0, lineno=436)
          16	LOAD_ATTR(arg=3, lineno=436)
          18	LOAD_CONST(arg=2, lineno=436)
          20	CALL_FUNCTION_KW(arg=2, lineno=436)
          22	STORE_FAST(arg=5, lineno=436)
          24	LOAD_GLOBAL(arg=4, lineno=438)
          26	LOAD_GLOBAL(arg=5, lineno=438)
          28	LOAD_FAST(arg=1, lineno=438)
          30	CALL_FUNCTION(arg=1, lineno=438)
          32	CALL_FUNCTION(arg=1, lineno=438)
          34	GET_ITER(arg=None, lineno=438)
>         36	FOR_ITER(arg=74, lineno=438)
          38	STORE_FAST(arg=6, lineno=438)
          40	LOAD_FAST(arg=1, lineno=439)
          42	LOAD_FAST(arg=6, lineno=439)
          44	BINARY_SUBSCR(arg=None, lineno=439)
          46	STORE_FAST(arg=7, lineno=439)
          48	LOAD_FAST(arg=2, lineno=440)
          50	LOAD_FAST(arg=6, lineno=440)
          52	BINARY_SUBSCR(arg=None, lineno=440)
          54	STORE_FAST(arg=8, lineno=440)
          56	LOAD_FAST(arg=7, lineno=441)
          58	LOAD_CONST(arg=3, lineno=441)
          60	COMPARE_OP(arg=2, lineno=441)
          62	POP_JUMP_IF_TRUE(arg=72, lineno=441)
          64	LOAD_FAST(arg=8, lineno=441)
          66	LOAD_CONST(arg=3, lineno=441)
          68	COMPARE_OP(arg=2, lineno=441)
          70	POP_JUMP_IF_FALSE(arg=84, lineno=441)
>         72	LOAD_GLOBAL(arg=0, lineno=442)
          74	LOAD_ATTR(arg=6, lineno=442)
          76	LOAD_FAST(arg=5, lineno=442)
          78	LOAD_FAST(arg=6, lineno=442)
          80	STORE_SUBSCR(arg=None, lineno=442)
          82	JUMP_ABSOLUTE(arg=36, lineno=442)
>         84	LOAD_FAST(arg=3, lineno=444)
          86	LOAD_FAST(arg=0, lineno=444)
          88	LOAD_FAST(arg=7, lineno=444)
          90	LOAD_FAST(arg=8, lineno=444)
          92	BUILD_SLICE(arg=2, lineno=444)
          94	BINARY_SUBSCR(arg=None, lineno=444)
          96	BUILD_TUPLE(arg=1, lineno=444)
          98	LOAD_FAST(arg=4, lineno=444)
         100	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
         102	CALL_FUNCTION_EX(arg=0, lineno=444)
         104	LOAD_FAST(arg=5, lineno=444)
         106	LOAD_FAST(arg=6, lineno=444)
         108	STORE_SUBSCR(arg=None, lineno=444)
         110	JUMP_ABSOLUTE(arg=36, lineno=444)
>        112	LOAD_FAST(arg=5, lineno=445)
         114	RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$14load_global.6']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=STORE_FAST(arg=5, lineno=436)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$20call_function_kw.9']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=4, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11', '$range_starts28.12']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$30call_function.13']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=GET_ITER(arg=None, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$32call_function.14']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$34get_iter.15',), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: ['$phi36.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=FOR_ITER(arg=74, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi36.0']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=445)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$out112.0']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=38 nstack_initial=2)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: ['$phi38.0', '$phi38.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=STORE_FAST(arg=6, lineno=438)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$phi38.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=439)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=6, lineno=439)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=439)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2', '$k42.3']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=STORE_FAST(arg=7, lineno=439)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$44binary_subscr.4']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=440)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=440)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=440)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5', '$k50.6']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=STORE_FAST(arg=8, lineno=440)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$52binary_subscr.7']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_FAST(arg=7, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8', '$const58.9']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_TRUE(arg=72, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$60compare_op.10']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=('$phi38.0',), blockstack=(), npush=0), Edge(pc=72, stack=('$phi38.0',), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=72 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: ['$phi64.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_FAST(arg=8, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1', '$const66.2']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=84, lineno=441)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$68compare_op.3']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=72, stack=('$phi64.0',), blockstack=(), npush=0), Edge(pc=84, stack=('$phi64.0',), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: ['$phi72.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_GLOBAL(arg=0, lineno=442)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_ATTR(arg=6, lineno=442)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$72load_global.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=442)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=442)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=STORE_SUBSCR(arg=None, lineno=442)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3', '$k78.4']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=JUMP_ABSOLUTE(arg=36, lineno=442)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi72.0',), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:103 DEBUG] stack: ['$phi84.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=3, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=8, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_SLICE(arg=2, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3', '$to_i90.4']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$92build_slice.6']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BUILD_TUPLE(arg=1, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$94binary_subscr.7']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8', '$args98.9']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=CALL_FUNCTION_EX(arg=0, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$100build_tuple_unpack_with_call.10']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12', '$k106.13']
[2022-10-04 21:19:54] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=JUMP_ABSOLUTE(arg=36, lineno=444)
[2022-10-04 21:19:54] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 21:19:54] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi84.0',), blockstack=(), npush=0)]
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:19:54] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:19:54] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=72 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=0): set()})
[2022-10-04 21:19:54] [numba.core.byteflow:189 DEBUG] defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
[2022-10-04 21:19:54] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi72.0', State(pc_initial=72 nstack_initial=1)),
                          ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi72.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi84.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))}})
[2022-10-04 21:19:54] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 21:19:54] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 21:19:54] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 21:19:54] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi36.0': {('$34get_iter.15', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
[2022-10-04 21:19:54] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.15'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
[2022-10-04 21:19:54] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$14load_global.6'}), (16, {'item': '$14load_global.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'func': '$4load_attr.1', 'args': ['$12binary_subscr.5', '$16load_attr.7'], 'names': '$const18.8', 'res': '$20call_function_kw.9'}), (22, {'value': '$20call_function_kw.9'}), (24, {'res': '$24load_global.10'}), (26, {'res': '$26load_global.11'}), (28, {'res': '$range_starts28.12'}), (30, {'func': '$26load_global.11', 'args': ['$range_starts28.12'], 'res': '$30call_function.13'}), (32, {'func': '$24load_global.10', 'args': ['$30call_function.13'], 'res': '$32call_function.14'}), (34, {'value': '$32call_function.14', 'res': '$34get_iter.15'})), outgoing_phis={'$phi36.0': '$34get_iter.15'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.15',)})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: (), 38: ('$phi36.0', '$36for_iter.2')})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$range_starts40.2'}), (42, {'res': '$k42.3'}), (44, {'index': '$k42.3', 'target': '$range_starts40.2', 'res': '$44binary_subscr.4'}), (46, {'value': '$44binary_subscr.4'}), (48, {'res': '$range_ends48.5'}), (50, {'res': '$k50.6'}), (52, {'index': '$k50.6', 'target': '$range_ends48.5', 'res': '$52binary_subscr.7'}), (54, {'value': '$52binary_subscr.7'}), (56, {'res': '$from_i56.8'}), (58, {'res': '$const58.9'}), (60, {'lhs': '$from_i56.8', 'rhs': '$const58.9', 'res': '$60compare_op.10'}), (62, {'pred': '$60compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi38.0',), 72: ('$phi38.0',)})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$to_i64.1'}), (66, {'res': '$const66.2'}), (68, {'lhs': '$to_i64.1', 'rhs': '$const66.2', 'res': '$68compare_op.3'}), (70, {'pred': '$68compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$phi64.0',), 84: ('$phi64.0',)})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'res': '$72load_global.1'}), (74, {'item': '$72load_global.1', 'res': '$74load_attr.2'}), (76, {'res': '$out76.3'}), (78, {'res': '$k78.4'}), (80, {'target': '$out76.3', 'index': '$k78.4', 'value': '$74load_attr.2'}), (82, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi72.0',)})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$reduce_func_nb84.1'}), (86, {'res': '$arr86.2'}), (88, {'res': '$from_i88.3'}), (90, {'res': '$to_i90.4'}), (92, {'start': '$from_i88.3', 'stop': '$to_i90.4', 'step': None, 'res': '$92build_slice.6', 'slicevar': '$92build_slice.5'}), (94, {'index': '$92build_slice.6', 'target': '$arr86.2', 'res': '$94binary_subscr.7'}), (96, {'items': ['$94binary_subscr.7'], 'res': '$96build_tuple.8'}), (98, {'res': '$args98.9'}), (100, {'tuples': ['$96build_tuple.8', '$args98.9'], 'temps': ['$100build_tuple_unpack_with_call.10'], 'is_assign': False}), (102, {'func': '$reduce_func_nb84.1', 'vararg': '$100build_tuple_unpack_with_call.10', 'res': '$102call_function_ex.11'}), (104, {'res': '$out104.12'}), (106, {'res': '$k106.13'}), (108, {'target': '$out104.12', 'index': '$k106.13', 'value': '$102call_function_ex.11'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi84.0',)})
[2022-10-04 21:19:54] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$out112.0'}), (114, {'retval': '$out112.0', 'castval': '$114return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:19:54] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$14load_global.6']
    $16load_attr.7 = getattr(value=$14load_global.6, attr=float_) ['$14load_global.6', '$16load_attr.7']
    out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None) ['$12binary_subscr.5', '$16load_attr.7', '$4load_attr.1', 'out']
    $24load_global.10 = global(range: <class 'range'>) ['$24load_global.10']
    $26load_global.11 = global(len: <built-in function len>) ['$26load_global.11']
    $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None) ['$26load_global.11', '$30call_function.13', 'range_starts']
    $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None) ['$24load_global.10', '$30call_function.13', '$32call_function.14']
    $34get_iter.15 = getiter(value=$32call_function.14) ['$32call_function.14', '$34get_iter.15']
    $phi36.0 = $34get_iter.15                ['$34get_iter.15', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 112            ['$36for_iter.3']
label 38:
    k = $phi38.1                             ['$phi38.1', 'k']
    from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>) ['from_i', 'k', 'range_starts']
    to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>) ['k', 'range_ends', 'to_i']
    $const58.9 = const(int, -1)              ['$const58.9']
    $60compare_op.10 = from_i == $const58.9  ['$60compare_op.10', '$const58.9', 'from_i']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None) ['$60compare_op.10', '$62pred', 'bool62']
    branch $62pred, 72, 64                   ['$62pred']
label 64:
    $const66.2 = const(int, -1)              ['$const66.2']
    $68compare_op.3 = to_i == $const66.2     ['$68compare_op.3', '$const66.2', 'to_i']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None) ['$68compare_op.3', '$70pred', 'bool70']
    branch $70pred, 72, 84                   ['$70pred']
label 72:
    $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$72load_global.1']
    $74load_attr.2 = getattr(value=$72load_global.1, attr=nan) ['$72load_global.1', '$74load_attr.2']
    out[k] = $74load_attr.2                  ['$74load_attr.2', 'k', 'out']
    jump 36                                  []
label 84:
    $92build_slice.5 = global(slice: <class 'slice'>) ['$92build_slice.5']
    $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None) ['$92build_slice.5', '$92build_slice.6', 'from_i', 'to_i']
    $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>) ['$92build_slice.6', '$94binary_subscr.7', 'arr']
    $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)]) ['$94binary_subscr.7', '$96build_tuple.8']
    $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args ['$100build_tuple_unpack_with_call.10', '$96build_tuple.8', 'args']
    $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10) ['$100build_tuple_unpack_with_call.10', '$102call_function_ex.11', 'reduce_func_nb']
    out[k] = $102call_function_ex.11         ['$102call_function_ex.11', 'k', 'out']
    jump 36                                  []
label 112:
    $114return_value.1 = cast(value=out)     ['$114return_value.1', 'out']
    return $114return_value.1                ['$114return_value.1']

[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=$14load_global.6, attr=float_)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.10 = global(range: <class 'range'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $34get_iter.15 = getiter(value=$32call_function.14)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $phi36.0 = $34get_iter.15
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 36
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.1 = iternext(value=$phi36.0)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.2 = pair_first(value=$36for_iter.1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.3 = pair_second(value=$36for_iter.1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $phi38.1 = $36for_iter.2
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: branch $36for_iter.3, 38, 112
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 38
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: k = $phi38.1
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const58.9 = const(int, -1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $60compare_op.10 = from_i == $const58.9
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: bool62 = global(bool: <class 'bool'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: branch $62pred, 72, 64
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 64
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $const66.2 = const(int, -1)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.3 = to_i == $const66.2
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 84
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 72
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $74load_attr.2 = getattr(value=$72load_global.1, attr=nan)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $74load_attr.2
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 84
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.5 = global(slice: <class 'slice'>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)])
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $102call_function_ex.11
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 112
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: $114return_value.1 = cast(value=out)
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: return $114return_value.1
[2022-10-04 21:19:54] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 113
[2022-10-04 21:19:54] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f72a8a3f190>
[2022-10-04 21:19:54] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 21:19:54] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100build_tuple_unpack_with_call.10': [<numba.core.ir.Assign object at 0x7f72a8a309a0>],
             '$102call_function_ex.11': [<numba.core.ir.Assign object at 0x7f72a8a30a90>],
             '$114return_value.1': [<numba.core.ir.Assign object at 0x7f72a8a30f10>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7f72a8a34250>],
             '$14load_global.6': [<numba.core.ir.Assign object at 0x7f72a8a27820>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7f72a8a279a0>],
             '$24load_global.10': [<numba.core.ir.Assign object at 0x7f72a8a27fa0>],
             '$26load_global.11': [<numba.core.ir.Assign object at 0x7f72a8a2a160>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f72a8a78bb0>],
             '$30call_function.13': [<numba.core.ir.Assign object at 0x7f72a8a2a430>],
             '$32call_function.14': [<numba.core.ir.Assign object at 0x7f72a8a2a5b0>],
             '$34get_iter.15': [<numba.core.ir.Assign object at 0x7f72a8a2a700>],
             '$36for_iter.1': [<numba.core.ir.Assign object at 0x7f72a8a2a9a0>],
             '$36for_iter.2': [<numba.core.ir.Assign object at 0x7f72a8a2aac0>],
             '$36for_iter.3': [<numba.core.ir.Assign object at 0x7f72a8a2abb0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f72a8a78a00>],
             '$60compare_op.10': [<numba.core.ir.Assign object at 0x7f72a8a2bc70>],
             '$62pred': [<numba.core.ir.Assign object at 0x7f72a8a2bf10>],
             '$68compare_op.3': [<numba.core.ir.Assign object at 0x7f72a8a2e1f0>],
             '$70pred': [<numba.core.ir.Assign object at 0x7f72a8a2e490>],
             '$72load_global.1': [<numba.core.ir.Assign object at 0x7f72a8a2e6d0>],
             '$74load_attr.2': [<numba.core.ir.Assign object at 0x7f72a8a2e850>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f72a8acaf70>],
             '$92build_slice.5': [<numba.core.ir.Assign object at 0x7f72a8a30280>],
             '$92build_slice.6': [<numba.core.ir.Assign object at 0x7f72a8a303a0>],
             '$94binary_subscr.7': [<numba.core.ir.Assign object at 0x7f72a8a304f0>],
             '$96build_tuple.8': [<numba.core.ir.Assign object at 0x7f72a8a306a0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7f72a8aca0a0>],
             '$const58.9': [<numba.core.ir.Assign object at 0x7f72a8a2baf0>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7f72a8a2e070>],
             '$phi36.0': [<numba.core.ir.Assign object at 0x7f72a8a27b80>],
             '$phi38.1': [<numba.core.ir.Assign object at 0x7f72a8a2a8b0>],
             'args': [<numba.core.ir.Assign object at 0x7f72a8a27550>],
             'arr': [<numba.core.ir.Assign object at 0x7f72a8a270d0>],
             'bool62': [<numba.core.ir.Assign object at 0x7f72a8a2bdf0>],
             'bool70': [<numba.core.ir.Assign object at 0x7f72a8a2e370>],
             'from_i': [<numba.core.ir.Assign object at 0x7f72a8a2b250>],
             'k': [<numba.core.ir.Assign object at 0x7f72a8a2ae50>],
             'out': [<numba.core.ir.Assign object at 0x7f72a8a27e50>],
             'range_ends': [<numba.core.ir.Assign object at 0x7f72a8a27310>],
             'range_starts': [<numba.core.ir.Assign object at 0x7f72a8a271f0>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7f72a8a27430>],
             'to_i': [<numba.core.ir.Assign object at 0x7f72a8a2b730>]})
[2022-10-04 21:19:54] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 21:19:55] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 21, 19, 55, 183266)}, 'timestamp': '2022-10-05T01:19:55.183280+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_dollar_bars', 'messageId': '6d297108-99e9-4ff9-8a1a-23e54d6cec18'}
[2022-10-04 21:19:55] [segment:289 DEBUG] enqueued track.
[2022-10-04 21:19:56] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T21:19:54.837726"}, "timestamp": "2022-10-05T01:19:54.837765+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "da11f32e-3c49-44ab-87c8-43008dfa6204"}, {"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T21:19:55.183266"}, "timestamp": "2022-10-05T01:19:55.183280+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_dollar_bars", "messageId": "6d297108-99e9-4ff9-8a1a-23e54d6cec18"}], "sentAt": "2022-10-05T01:19:56.195802+00:00"}
[2022-10-04 21:19:56] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 21:20:58] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:00] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:00] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:00] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:00] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:00] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:02] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:02] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:02] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:02] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:02] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:21:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:21:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:21:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:21:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:21:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:44:55] [segment:54 DEBUG] consumer exited.
[2022-10-04 21:45:02] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 21:45:02] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 21:45:02] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 21:45:05] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:45:05] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 21:45:05] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 21:45:05] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 21:45:05] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 21:45:05] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 21:45:05] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 21:45:05] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 21:45:05] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 21:45:05] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:45:05] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 21:45:05] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 21:45:05] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:45:05] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:45:05] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:45:05] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 21:45:05] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 21:45:05] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 21:45:05] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:45:05] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 21:45:05] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 21:45:05] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 21:45:05] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:05] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 21:45:05] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f9250118c70>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f9250118c70>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:45:05] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f9250118c70>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f9250118c70>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:45:05] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f9250118130>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f9250118730>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f9250118310>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f9250164310>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f9250164490>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f9250164730>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f9250113190>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f9250174d30>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f9250114250>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f92501146a0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f92501147f0>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f9250174850>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f9250114850>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f9250114970>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f9250116190>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f9250116430>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f92501165b0>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f9250116bb0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f9250116d30>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f9250164d30>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f9250164fd0>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f9250113970>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f9250113fd0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f9250174eb0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f92501143d0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f9250114eb0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f9250116910>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f92501645b0>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f9250113d30>],
             'alpha': [<numba.core.ir.Assign object at 0x7f9250113310>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f9250174970>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f9250118d00>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f9250164be0>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f9250118dc0>,
                          <numba.core.ir.Assign object at 0x7f92501182b0>],
             'i': [<numba.core.ir.Assign object at 0x7f9250114c10>],
             'weight': [<numba.core.ir.Assign object at 0x7f92501135b0>,
                        <numba.core.ir.Assign object at 0x7f9250116670>],
             'window': [<numba.core.ir.Assign object at 0x7f9250174a90>]})
[2022-10-04 21:45:05] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-04 21:45:05] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925019c4c0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925019c4c0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925019c4c0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925019c4c0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:45:05] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f925011e880>],
             70: [<numba.core.ir.Assign object at 0x7f925011ec40>]})
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f925011e790>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f925011e790>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f925011e790>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:05] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:05] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 21:45:05] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 21:45:05] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 21:45:05] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 21:45:05] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 21:45:05] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:45:05] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 21:45:05] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:45:05] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f925011e790>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:45:05] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925011e1f0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925011e1f0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925011e1f0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f925011e1f0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:45:05] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f925011e070>],
             70: [<numba.core.ir.Assign object at 0x7f92500edbe0>]})
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500db3a0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500db3a0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500db3a0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:45:05] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 21:45:05] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 21:45:05] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 21:45:05] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 21:45:05] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 21:45:05] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 21:45:05] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:45:05] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 21:45:05] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 21:45:05] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 21:45:05] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 21:45:05] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 21:45:05] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500db3a0>
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 21:45:05] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 21:45:05] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:45:05] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 21:45:05] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 21:45:05] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 21:45:05] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 21:45:05] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:05] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 21:45:05] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:05] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:06] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 21:45:06] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 21:45:06] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 21:45:06] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:45:06] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 21:45:06] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 21:45:06] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 21:45:06] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 21:45:06] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 21:45:06] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 21:45:06] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:06] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:06] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f925001af70>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f9250058250>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f92500114f0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f9250011790>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f92500119d0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f9250011b50>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f9250011df0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f9250013100>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f9250013280>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f92500133d0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f9250013850>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f9250013af0>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f9250013fd0>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f92500152b0>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f9250015730>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f9250015c70>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f9250017130>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f9250017610>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f9250017af0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f9250017c70>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f9250017fd0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f9250058a30>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f9250058cd0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f9250081c70>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f925008a730>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f925008a9d0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f925008aaf0>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f925008adf0>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f925000c0d0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f9250011370>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f92500136d0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f9250013e50>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f9250015af0>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f9250017850>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f92500588b0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f925008a5b0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f9250081df0>],
             'a': [<numba.core.ir.Assign object at 0x7f92500819d0>],
             'a.1': [<numba.core.ir.Assign object at 0x7f9250058520>,
                     <numba.core.ir.Assign object at 0x7f92500171f0>],
             'b': [<numba.core.ir.Assign object at 0x7f9250081af0>],
             'bool112': [<numba.core.ir.Assign object at 0x7f9250011670>],
             'bool136': [<numba.core.ir.Assign object at 0x7f92500139d0>],
             'bool144': [<numba.core.ir.Assign object at 0x7f9250015190>],
             'bool174': [<numba.core.ir.Assign object at 0x7f92500174f0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f9250058bb0>],
             'bool42': [<numba.core.ir.Assign object at 0x7f925008a8b0>],
             'bool50': [<numba.core.ir.Assign object at 0x7f925008af70>],
             'exp': [<numba.core.ir.Assign object at 0x7f925008a1f0>,
                     <numba.core.ir.Assign object at 0x7f92500110d0>,
                     <numba.core.ir.Assign object at 0x7f9250015d30>],
             'invert': [<numba.core.ir.Assign object at 0x7f9250058df0>,
                        <numba.core.ir.Assign object at 0x7f925000fdf0>],
             'r': [<numba.core.ir.Assign object at 0x7f9250081fa0>,
                   <numba.core.ir.Assign object at 0x7f92500157f0>]})
[2022-10-04 21:45:06] [numba.core.ssa:143 DEBUG] SSA violators {'r', 'exp', 'invert', 'a.1'}
[2022-10-04 21:45:06] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f9250146580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f9250056970>],
             146: [<numba.core.ir.Assign object at 0x7f92500ed760>]})
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:45:06] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 21:45:06] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4a2670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4a2580>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f92500edc40>],
             98: [<numba.core.ir.Assign object at 0x7f923c4542e0>],
             154: [<numba.core.ir.Assign object at 0x7f923c4a2970>]})
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:45:06] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:45:06] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c4c2460>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c4600a0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f923c454e50>],
             98: [<numba.core.ir.Assign object at 0x7f923c47d8e0>]})
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:45:06] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f923c46ffa0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f923c48c670>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f923c48c460>],
             154: [<numba.core.ir.Assign object at 0x7f923c42e8e0>]})
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 21:45:06] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 21:45:06] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 21:45:06] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 21:45:06] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 21:45:06] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 21:45:06] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 21:45:06] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 21:45:06] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f92500fa5b0>
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 21:45:06] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 21:45:06] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 21:45:06] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 21:45:06] [segment:50 DEBUG] consumer is running...
[2022-10-04 21:45:06] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-05T01:45:06.596277+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 21, 45, 6, 595919)}, 'messageId': '514e2530-ce7a-494f-a0dc-1892417084a1'}
[2022-10-04 21:45:06] [segment:289 DEBUG] enqueued identify.
[2022-10-04 21:45:07] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-05T01:45:06.596277+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T21:45:06.595919"}, "messageId": "514e2530-ce7a-494f-a0dc-1892417084a1"}], "sentAt": "2022-10-05T01:45:07.102049+00:00"}
[2022-10-04 21:45:07] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 21:45:07] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 21:45:07] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 21:45:07] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 21:45:07] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 21:45:07] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 21:45:08] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 21, 45, 8, 22457)}, 'timestamp': '2022-10-05T01:45:08.022491+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': 'b1dbfbcd-0b74-4718-8be5-12d62c7ff847'}
[2022-10-04 21:45:08] [segment:289 DEBUG] enqueued track.
[2022-10-04 21:45:08] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=468)
           2	LOAD_GLOBAL(arg=0, lineno=468)
           4	LOAD_ATTR(arg=1, lineno=468)
           6	LOAD_FAST(arg=1, lineno=468)
           8	LOAD_ATTR(arg=2, lineno=468)
          10	LOAD_CONST(arg=1, lineno=468)
          12	BINARY_SUBSCR(arg=None, lineno=468)
          14	LOAD_FAST(arg=0, lineno=468)
          16	LOAD_ATTR(arg=2, lineno=468)
          18	LOAD_CONST(arg=2, lineno=468)
          20	BINARY_SUBSCR(arg=None, lineno=468)
          22	BUILD_TUPLE(arg=2, lineno=468)
          24	LOAD_GLOBAL(arg=0, lineno=468)
          26	LOAD_ATTR(arg=3, lineno=468)
          28	LOAD_CONST(arg=3, lineno=468)
          30	CALL_FUNCTION_KW(arg=2, lineno=468)
          32	STORE_FAST(arg=5, lineno=468)
          34	LOAD_GLOBAL(arg=4, lineno=469)
          36	LOAD_FAST(arg=0, lineno=469)
          38	LOAD_ATTR(arg=2, lineno=469)
          40	LOAD_CONST(arg=2, lineno=469)
          42	BINARY_SUBSCR(arg=None, lineno=469)
          44	CALL_FUNCTION(arg=1, lineno=469)
          46	GET_ITER(arg=None, lineno=469)
>         48	FOR_ITER(arg=48, lineno=469)
          50	STORE_FAST(arg=6, lineno=469)
          52	LOAD_GLOBAL(arg=5, lineno=470)
          54	LOAD_FAST(arg=0, lineno=470)
          56	LOAD_CONST(arg=4, lineno=470)
          58	LOAD_CONST(arg=4, lineno=470)
          60	BUILD_SLICE(arg=2, lineno=470)
          62	LOAD_FAST(arg=6, lineno=470)
          64	BUILD_TUPLE(arg=2, lineno=470)
          66	BINARY_SUBSCR(arg=None, lineno=470)
          68	LOAD_FAST(arg=1, lineno=470)
          70	LOAD_FAST(arg=2, lineno=470)
          72	LOAD_FAST(arg=3, lineno=470)
          74	BUILD_TUPLE(arg=4, lineno=470)
          76	LOAD_FAST(arg=4, lineno=470)
          78	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
          80	CALL_FUNCTION_EX(arg=0, lineno=470)
          82	LOAD_FAST(arg=5, lineno=470)
          84	LOAD_CONST(arg=4, lineno=470)
          86	LOAD_CONST(arg=4, lineno=470)
          88	BUILD_SLICE(arg=2, lineno=470)
          90	LOAD_FAST(arg=6, lineno=470)
          92	BUILD_TUPLE(arg=2, lineno=470)
          94	STORE_SUBSCR(arg=None, lineno=470)
          96	JUMP_ABSOLUTE(arg=48, lineno=470)
>         98	LOAD_FAST(arg=5, lineno=471)
         100	RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$arr14.6']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=BUILD_TUPLE(arg=2, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$20binary_subscr.9']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$24load_global.11']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION_KW(arg=2, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12', '$const28.13']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=STORE_FAST(arg=5, lineno=468)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$30call_function_kw.14']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=LOAD_GLOBAL(arg=4, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_ATTR(arg=2, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$arr36.16']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17', '$const40.18']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=CALL_FUNCTION(arg=1, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$42binary_subscr.19']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=GET_ITER(arg=None, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$44call_function.20']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$46get_iter.21',), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: ['$phi48.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=FOR_ITER(arg=48, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=50, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=50 nstack_initial=2)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=471)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$out98.0']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=50 nstack_initial=2)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: ['$phi50.0', '$phi50.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=STORE_FAST(arg=6, lineno=469)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$phi50.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_GLOBAL(arg=5, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4', '$const58.5']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7', '$col62.8']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$64build_tuple.9']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_FAST(arg=2, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=3, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=BUILD_TUPLE(arg=4, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14', '$args76.15']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=CALL_FUNCTION_EX(arg=0, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$78build_tuple_unpack_with_call.16']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19', '$const86.20']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22', '$col90.23']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=STORE_SUBSCR(arg=None, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$92build_tuple.24']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=JUMP_ABSOLUTE(arg=48, lineno=470)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$phi50.0',), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:45:08] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=50 nstack_initial=2): {'$phi50.1'},
             State(pc_initial=98 nstack_initial=0): set()})
[2022-10-04 21:45:08] [numba.core.byteflow:189 DEBUG] defmap: {'$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.1': State(pc_initial=48 nstack_initial=1)}
[2022-10-04 21:45:08] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=2))},
             '$phi50.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:45:08] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:45:08] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:45:08] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 21:45:08] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi48.0': {('$46get_iter.21', State(pc_initial=0 nstack_initial=0))},
 '$phi50.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
[2022-10-04 21:45:08] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.21'},
             State(pc_initial=48 nstack_initial=1): {'$phi50.1': '$48for_iter.2'}})
[2022-10-04 21:45:08] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$arr14.6'}), (16, {'item': '$arr14.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$16load_attr.7', 'res': '$20binary_subscr.9'}), (22, {'items': ['$12binary_subscr.5', '$20binary_subscr.9'], 'res': '$22build_tuple.10'}), (24, {'res': '$24load_global.11'}), (26, {'item': '$24load_global.11', 'res': '$26load_attr.12'}), (28, {'res': '$const28.13'}), (30, {'func': '$4load_attr.1', 'args': ['$22build_tuple.10', '$26load_attr.12'], 'names': '$const28.13', 'res': '$30call_function_kw.14'}), (32, {'value': '$30call_function_kw.14'}), (34, {'res': '$34load_global.15'}), (36, {'res': '$arr36.16'}), (38, {'item': '$arr36.16', 'res': '$38load_attr.17'}), (40, {'res': '$const40.18'}), (42, {'index': '$const40.18', 'target': '$38load_attr.17', 'res': '$42binary_subscr.19'}), (44, {'func': '$34load_global.15', 'args': ['$42binary_subscr.19'], 'res': '$44call_function.20'}), (46, {'value': '$44call_function.20', 'res': '$46get_iter.21'})), outgoing_phis={'$phi48.0': '$46get_iter.21'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.21',)})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi50.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 50: ('$phi48.0', '$48for_iter.2')})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=50 nstack_initial=2):
AdaptBlockInfo(insts=((50, {'value': '$phi50.1'}), (52, {'res': '$52load_global.2'}), (54, {'res': '$arr54.3'}), (56, {'res': '$const56.4'}), (58, {'res': '$const58.5'}), (60, {'start': '$const56.4', 'stop': '$const58.5', 'step': None, 'res': '$60build_slice.7', 'slicevar': '$60build_slice.6'}), (62, {'res': '$col62.8'}), (64, {'items': ['$60build_slice.7', '$col62.8'], 'res': '$64build_tuple.9'}), (66, {'index': '$64build_tuple.9', 'target': '$arr54.3', 'res': '$66binary_subscr.10'}), (68, {'res': '$range_starts68.11'}), (70, {'res': '$range_ends70.12'}), (72, {'res': '$reduce_func_nb72.13'}), (74, {'items': ['$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13'], 'res': '$74build_tuple.14'}), (76, {'res': '$args76.15'}), (78, {'tuples': ['$74build_tuple.14', '$args76.15'], 'temps': ['$78build_tuple_unpack_with_call.16'], 'is_assign': False}), (80, {'func': '$52load_global.2', 'vararg': '$78build_tuple_unpack_with_call.16', 'res': '$80call_function_ex.17'}), (82, {'res': '$out82.18'}), (84, {'res': '$const84.19'}), (86, {'res': '$const86.20'}), (88, {'start': '$const84.19', 'stop': '$const86.20', 'step': None, 'res': '$88build_slice.22', 'slicevar': '$88build_slice.21'}), (90, {'res': '$col90.23'}), (92, {'items': ['$88build_slice.22', '$col90.23'], 'res': '$92build_tuple.24'}), (94, {'target': '$out82.18', 'index': '$92build_tuple.24', 'value': '$80call_function_ex.17'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi50.0',)})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$out98.0'}), (100, {'retval': '$out98.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:08] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $16load_attr.7 = getattr(value=arr, attr=shape) ['$16load_attr.7', 'arr']
    $const18.8 = const(int, 1)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=$16load_attr.7, index=$const18.8, fn=<built-in function getitem>) ['$16load_attr.7', '$20binary_subscr.9', '$const18.8']
    $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)]) ['$12binary_subscr.5', '$20binary_subscr.9', '$22build_tuple.10']
    $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$24load_global.11']
    $26load_attr.12 = getattr(value=$24load_global.11, attr=float_) ['$24load_global.11', '$26load_attr.12']
    out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None) ['$22build_tuple.10', '$26load_attr.12', '$4load_attr.1', 'out']
    $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>) ['$34load_global.15']
    $38load_attr.17 = getattr(value=arr, attr=shape) ['$38load_attr.17', 'arr']
    $const40.18 = const(int, 1)              ['$const40.18']
    $42binary_subscr.19 = getitem(value=$38load_attr.17, index=$const40.18, fn=<built-in function getitem>) ['$38load_attr.17', '$42binary_subscr.19', '$const40.18']
    $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None) ['$34load_global.15', '$42binary_subscr.19', '$44call_function.20']
    $46get_iter.21 = getiter(value=$44call_function.20) ['$44call_function.20', '$46get_iter.21']
    $phi48.0 = $46get_iter.21                ['$46get_iter.21', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi50.1 = $48for_iter.2                 ['$48for_iter.2', '$phi50.1']
    branch $48for_iter.3, 50, 98             ['$48for_iter.3']
label 50:
    col = $phi50.1                           ['$phi50.1', 'col']
    $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7f92681c9d30>)) ['$52load_global.2']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $const58.5 = const(NoneType, None)       ['$const58.5']
    $60build_slice.6 = global(slice: <class 'slice'>) ['$60build_slice.6']
    $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None) ['$60build_slice.6', '$60build_slice.7', '$const56.4', '$const58.5']
    $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$60build_slice.7', '$64build_tuple.9', 'col']
    $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>) ['$64build_tuple.9', '$66binary_subscr.10', 'arr']
    $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)]) ['$66binary_subscr.10', '$74build_tuple.14', 'range_ends', 'range_starts', 'reduce_func_nb']
    $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args ['$74build_tuple.14', '$78build_tuple_unpack_with_call.16', 'args']
    $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16) ['$52load_global.2', '$78build_tuple_unpack_with_call.16', '$80call_function_ex.17']
    $const84.19 = const(NoneType, None)      ['$const84.19']
    $const86.20 = const(NoneType, None)      ['$const86.20']
    $88build_slice.21 = global(slice: <class 'slice'>) ['$88build_slice.21']
    $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None) ['$88build_slice.21', '$88build_slice.22', '$const84.19', '$const86.20']
    $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$88build_slice.22', '$92build_tuple.24', 'col']
    out[$92build_tuple.24] = $80call_function_ex.17 ['$80call_function_ex.17', '$92build_tuple.24', 'out']
    jump 48                                  []
label 98:
    $100return_value.1 = cast(value=out)     ['$100return_value.1', 'out']
    return $100return_value.1                ['$100return_value.1']

[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9be1370>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=arr, attr=shape)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const18.8 = const(int, 1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $20binary_subscr.9 = static_getitem(value=$16load_attr.7, index=1, index_var=$const18.8, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)])
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $26load_attr.12 = getattr(value=$24load_global.11, attr=float_)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $38load_attr.17 = getattr(value=arr, attr=shape)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const40.18 = const(int, 1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $42binary_subscr.19 = static_getitem(value=$38load_attr.17, index=1, index_var=$const40.18, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.21 = getiter(value=$44call_function.20)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.21
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9be1370>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 98
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 50
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9be1370>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: col = $phi50.1
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7f92681c9d30>))
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const56.4 = const(NoneType, None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const58.5 = const(NoneType, None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.6 = global(slice: <class 'slice'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)])
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const84.19 = const(NoneType, None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const86.20 = const(NoneType, None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.21 = global(slice: <class 'slice'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: out[$92build_tuple.24] = $80call_function_ex.17
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9be1370>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $100return_value.1 = cast(value=out)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: return $100return_value.1
[2022-10-04 21:45:08] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100return_value.1': [<numba.core.ir.Assign object at 0x7f91c9b9d430>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7f91c9bb26d0>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7f91c9b93550>],
             '$20binary_subscr.9': [<numba.core.ir.Assign object at 0x7f91c9bb2790>],
             '$22build_tuple.10': [<numba.core.ir.Assign object at 0x7f91c9b93a00>],
             '$24load_global.11': [<numba.core.ir.Assign object at 0x7f91c9b93b50>],
             '$26load_attr.12': [<numba.core.ir.Assign object at 0x7f91c9b93cd0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f91c9bfdb50>],
             '$34load_global.15': [<numba.core.ir.Assign object at 0x7f91c9b95310>],
             '$38load_attr.17': [<numba.core.ir.Assign object at 0x7f91c9b955b0>],
             '$42binary_subscr.19': [<numba.core.ir.Assign object at 0x7f91c9bb2850>],
             '$44call_function.20': [<numba.core.ir.Assign object at 0x7f91c9b95a60>],
             '$46get_iter.21': [<numba.core.ir.Assign object at 0x7f91c9b95bb0>],
             '$48for_iter.1': [<numba.core.ir.Assign object at 0x7f91c9b95df0>],
             '$48for_iter.2': [<numba.core.ir.Assign object at 0x7f91c9b95f10>],
             '$48for_iter.3': [<numba.core.ir.Assign object at 0x7f91c9b98070>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f91c9bfdcd0>],
             '$52load_global.2': [<numba.core.ir.Assign object at 0x7f91c9b98490>],
             '$60build_slice.6': [<numba.core.ir.Assign object at 0x7f91c9b98a60>],
             '$60build_slice.7': [<numba.core.ir.Assign object at 0x7f91c9b98b80>],
             '$64build_tuple.9': [<numba.core.ir.Assign object at 0x7f91c9b98e20>],
             '$66binary_subscr.10': [<numba.core.ir.Assign object at 0x7f91c9b98f70>],
             '$74build_tuple.14': [<numba.core.ir.Assign object at 0x7f91c9b9a4c0>],
             '$78build_tuple_unpack_with_call.16': [<numba.core.ir.Assign object at 0x7f91c9b9a7c0>],
             '$80call_function_ex.17': [<numba.core.ir.Assign object at 0x7f91c9b9a8b0>],
             '$88build_slice.21': [<numba.core.ir.Assign object at 0x7f91c9b9ae80>],
             '$88build_slice.22': [<numba.core.ir.Assign object at 0x7f91c9b9afa0>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f91c9bfdf70>],
             '$92build_tuple.24': [<numba.core.ir.Assign object at 0x7f91c9b9d280>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7f91c9b93130>],
             '$const18.8': [<numba.core.ir.Assign object at 0x7f91c9b936d0>],
             '$const40.18': [<numba.core.ir.Assign object at 0x7f91c9b95730>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7f91c9b98730>],
             '$const58.5': [<numba.core.ir.Assign object at 0x7f91c9b988b0>],
             '$const84.19': [<numba.core.ir.Assign object at 0x7f91c9b9ab50>],
             '$const86.20': [<numba.core.ir.Assign object at 0x7f91c9b9acd0>],
             '$phi48.0': [<numba.core.ir.Assign object at 0x7f91c9bfddf0>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7f91c9b95d00>],
             'args': [<numba.core.ir.Assign object at 0x7f91c9bfd9d0>],
             'arr': [<numba.core.ir.Assign object at 0x7f91c9bfd550>],
             'col': [<numba.core.ir.Assign object at 0x7f91c9b98310>],
             'out': [<numba.core.ir.Assign object at 0x7f91c9b951c0>],
             'range_ends': [<numba.core.ir.Assign object at 0x7f91c9bfd790>],
             'range_starts': [<numba.core.ir.Assign object at 0x7f91c9bfd670>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7f91c9bfd8b0>]})
[2022-10-04 21:45:08] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 21:45:08] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	LOAD_GLOBAL(arg=0, lineno=436)
           4	LOAD_ATTR(arg=1, lineno=436)
           6	LOAD_FAST(arg=1, lineno=436)
           8	LOAD_ATTR(arg=2, lineno=436)
          10	LOAD_CONST(arg=1, lineno=436)
          12	BINARY_SUBSCR(arg=None, lineno=436)
          14	LOAD_GLOBAL(arg=0, lineno=436)
          16	LOAD_ATTR(arg=3, lineno=436)
          18	LOAD_CONST(arg=2, lineno=436)
          20	CALL_FUNCTION_KW(arg=2, lineno=436)
          22	STORE_FAST(arg=5, lineno=436)
          24	LOAD_GLOBAL(arg=4, lineno=438)
          26	LOAD_GLOBAL(arg=5, lineno=438)
          28	LOAD_FAST(arg=1, lineno=438)
          30	CALL_FUNCTION(arg=1, lineno=438)
          32	CALL_FUNCTION(arg=1, lineno=438)
          34	GET_ITER(arg=None, lineno=438)
>         36	FOR_ITER(arg=74, lineno=438)
          38	STORE_FAST(arg=6, lineno=438)
          40	LOAD_FAST(arg=1, lineno=439)
          42	LOAD_FAST(arg=6, lineno=439)
          44	BINARY_SUBSCR(arg=None, lineno=439)
          46	STORE_FAST(arg=7, lineno=439)
          48	LOAD_FAST(arg=2, lineno=440)
          50	LOAD_FAST(arg=6, lineno=440)
          52	BINARY_SUBSCR(arg=None, lineno=440)
          54	STORE_FAST(arg=8, lineno=440)
          56	LOAD_FAST(arg=7, lineno=441)
          58	LOAD_CONST(arg=3, lineno=441)
          60	COMPARE_OP(arg=2, lineno=441)
          62	POP_JUMP_IF_TRUE(arg=72, lineno=441)
          64	LOAD_FAST(arg=8, lineno=441)
          66	LOAD_CONST(arg=3, lineno=441)
          68	COMPARE_OP(arg=2, lineno=441)
          70	POP_JUMP_IF_FALSE(arg=84, lineno=441)
>         72	LOAD_GLOBAL(arg=0, lineno=442)
          74	LOAD_ATTR(arg=6, lineno=442)
          76	LOAD_FAST(arg=5, lineno=442)
          78	LOAD_FAST(arg=6, lineno=442)
          80	STORE_SUBSCR(arg=None, lineno=442)
          82	JUMP_ABSOLUTE(arg=36, lineno=442)
>         84	LOAD_FAST(arg=3, lineno=444)
          86	LOAD_FAST(arg=0, lineno=444)
          88	LOAD_FAST(arg=7, lineno=444)
          90	LOAD_FAST(arg=8, lineno=444)
          92	BUILD_SLICE(arg=2, lineno=444)
          94	BINARY_SUBSCR(arg=None, lineno=444)
          96	BUILD_TUPLE(arg=1, lineno=444)
          98	LOAD_FAST(arg=4, lineno=444)
         100	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
         102	CALL_FUNCTION_EX(arg=0, lineno=444)
         104	LOAD_FAST(arg=5, lineno=444)
         106	LOAD_FAST(arg=6, lineno=444)
         108	STORE_SUBSCR(arg=None, lineno=444)
         110	JUMP_ABSOLUTE(arg=36, lineno=444)
>        112	LOAD_FAST(arg=5, lineno=445)
         114	RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$14load_global.6']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=STORE_FAST(arg=5, lineno=436)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$20call_function_kw.9']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=4, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11', '$range_starts28.12']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$30call_function.13']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=GET_ITER(arg=None, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$32call_function.14']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$34get_iter.15',), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: ['$phi36.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=FOR_ITER(arg=74, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi36.0']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=445)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$out112.0']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=38 nstack_initial=2)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: ['$phi38.0', '$phi38.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=STORE_FAST(arg=6, lineno=438)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$phi38.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=439)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=6, lineno=439)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=439)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2', '$k42.3']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=STORE_FAST(arg=7, lineno=439)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$44binary_subscr.4']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=440)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=440)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=440)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5', '$k50.6']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=STORE_FAST(arg=8, lineno=440)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$52binary_subscr.7']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_FAST(arg=7, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8', '$const58.9']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_TRUE(arg=72, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$60compare_op.10']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=('$phi38.0',), blockstack=(), npush=0), Edge(pc=72, stack=('$phi38.0',), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=72 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: ['$phi64.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_FAST(arg=8, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1', '$const66.2']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=84, lineno=441)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$68compare_op.3']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=72, stack=('$phi64.0',), blockstack=(), npush=0), Edge(pc=84, stack=('$phi64.0',), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: ['$phi72.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_GLOBAL(arg=0, lineno=442)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_ATTR(arg=6, lineno=442)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$72load_global.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=442)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=442)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=STORE_SUBSCR(arg=None, lineno=442)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3', '$k78.4']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=JUMP_ABSOLUTE(arg=36, lineno=442)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi72.0',), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:103 DEBUG] stack: ['$phi84.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=3, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=8, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_SLICE(arg=2, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3', '$to_i90.4']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$92build_slice.6']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BUILD_TUPLE(arg=1, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$94binary_subscr.7']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8', '$args98.9']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=CALL_FUNCTION_EX(arg=0, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$100build_tuple_unpack_with_call.10']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12', '$k106.13']
[2022-10-04 21:45:08] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=JUMP_ABSOLUTE(arg=36, lineno=444)
[2022-10-04 21:45:08] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 21:45:08] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi84.0',), blockstack=(), npush=0)]
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 21:45:08] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 21:45:08] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=72 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=0): set()})
[2022-10-04 21:45:08] [numba.core.byteflow:189 DEBUG] defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
[2022-10-04 21:45:08] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi72.0', State(pc_initial=72 nstack_initial=1)),
                          ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi72.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi84.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))}})
[2022-10-04 21:45:08] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 21:45:08] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 21:45:08] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 21:45:08] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi36.0': {('$34get_iter.15', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
[2022-10-04 21:45:08] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.15'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
[2022-10-04 21:45:08] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$14load_global.6'}), (16, {'item': '$14load_global.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'func': '$4load_attr.1', 'args': ['$12binary_subscr.5', '$16load_attr.7'], 'names': '$const18.8', 'res': '$20call_function_kw.9'}), (22, {'value': '$20call_function_kw.9'}), (24, {'res': '$24load_global.10'}), (26, {'res': '$26load_global.11'}), (28, {'res': '$range_starts28.12'}), (30, {'func': '$26load_global.11', 'args': ['$range_starts28.12'], 'res': '$30call_function.13'}), (32, {'func': '$24load_global.10', 'args': ['$30call_function.13'], 'res': '$32call_function.14'}), (34, {'value': '$32call_function.14', 'res': '$34get_iter.15'})), outgoing_phis={'$phi36.0': '$34get_iter.15'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.15',)})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: (), 38: ('$phi36.0', '$36for_iter.2')})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$range_starts40.2'}), (42, {'res': '$k42.3'}), (44, {'index': '$k42.3', 'target': '$range_starts40.2', 'res': '$44binary_subscr.4'}), (46, {'value': '$44binary_subscr.4'}), (48, {'res': '$range_ends48.5'}), (50, {'res': '$k50.6'}), (52, {'index': '$k50.6', 'target': '$range_ends48.5', 'res': '$52binary_subscr.7'}), (54, {'value': '$52binary_subscr.7'}), (56, {'res': '$from_i56.8'}), (58, {'res': '$const58.9'}), (60, {'lhs': '$from_i56.8', 'rhs': '$const58.9', 'res': '$60compare_op.10'}), (62, {'pred': '$60compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi38.0',), 72: ('$phi38.0',)})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$to_i64.1'}), (66, {'res': '$const66.2'}), (68, {'lhs': '$to_i64.1', 'rhs': '$const66.2', 'res': '$68compare_op.3'}), (70, {'pred': '$68compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$phi64.0',), 84: ('$phi64.0',)})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'res': '$72load_global.1'}), (74, {'item': '$72load_global.1', 'res': '$74load_attr.2'}), (76, {'res': '$out76.3'}), (78, {'res': '$k78.4'}), (80, {'target': '$out76.3', 'index': '$k78.4', 'value': '$74load_attr.2'}), (82, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi72.0',)})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$reduce_func_nb84.1'}), (86, {'res': '$arr86.2'}), (88, {'res': '$from_i88.3'}), (90, {'res': '$to_i90.4'}), (92, {'start': '$from_i88.3', 'stop': '$to_i90.4', 'step': None, 'res': '$92build_slice.6', 'slicevar': '$92build_slice.5'}), (94, {'index': '$92build_slice.6', 'target': '$arr86.2', 'res': '$94binary_subscr.7'}), (96, {'items': ['$94binary_subscr.7'], 'res': '$96build_tuple.8'}), (98, {'res': '$args98.9'}), (100, {'tuples': ['$96build_tuple.8', '$args98.9'], 'temps': ['$100build_tuple_unpack_with_call.10'], 'is_assign': False}), (102, {'func': '$reduce_func_nb84.1', 'vararg': '$100build_tuple_unpack_with_call.10', 'res': '$102call_function_ex.11'}), (104, {'res': '$out104.12'}), (106, {'res': '$k106.13'}), (108, {'target': '$out104.12', 'index': '$k106.13', 'value': '$102call_function_ex.11'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi84.0',)})
[2022-10-04 21:45:08] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$out112.0'}), (114, {'retval': '$out112.0', 'castval': '$114return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 21:45:08] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$14load_global.6']
    $16load_attr.7 = getattr(value=$14load_global.6, attr=float_) ['$14load_global.6', '$16load_attr.7']
    out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None) ['$12binary_subscr.5', '$16load_attr.7', '$4load_attr.1', 'out']
    $24load_global.10 = global(range: <class 'range'>) ['$24load_global.10']
    $26load_global.11 = global(len: <built-in function len>) ['$26load_global.11']
    $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None) ['$26load_global.11', '$30call_function.13', 'range_starts']
    $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None) ['$24load_global.10', '$30call_function.13', '$32call_function.14']
    $34get_iter.15 = getiter(value=$32call_function.14) ['$32call_function.14', '$34get_iter.15']
    $phi36.0 = $34get_iter.15                ['$34get_iter.15', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 112            ['$36for_iter.3']
label 38:
    k = $phi38.1                             ['$phi38.1', 'k']
    from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>) ['from_i', 'k', 'range_starts']
    to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>) ['k', 'range_ends', 'to_i']
    $const58.9 = const(int, -1)              ['$const58.9']
    $60compare_op.10 = from_i == $const58.9  ['$60compare_op.10', '$const58.9', 'from_i']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None) ['$60compare_op.10', '$62pred', 'bool62']
    branch $62pred, 72, 64                   ['$62pred']
label 64:
    $const66.2 = const(int, -1)              ['$const66.2']
    $68compare_op.3 = to_i == $const66.2     ['$68compare_op.3', '$const66.2', 'to_i']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None) ['$68compare_op.3', '$70pred', 'bool70']
    branch $70pred, 72, 84                   ['$70pred']
label 72:
    $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$72load_global.1']
    $74load_attr.2 = getattr(value=$72load_global.1, attr=nan) ['$72load_global.1', '$74load_attr.2']
    out[k] = $74load_attr.2                  ['$74load_attr.2', 'k', 'out']
    jump 36                                  []
label 84:
    $92build_slice.5 = global(slice: <class 'slice'>) ['$92build_slice.5']
    $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None) ['$92build_slice.5', '$92build_slice.6', 'from_i', 'to_i']
    $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>) ['$92build_slice.6', '$94binary_subscr.7', 'arr']
    $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)]) ['$94binary_subscr.7', '$96build_tuple.8']
    $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args ['$100build_tuple_unpack_with_call.10', '$96build_tuple.8', 'args']
    $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10) ['$100build_tuple_unpack_with_call.10', '$102call_function_ex.11', 'reduce_func_nb']
    out[k] = $102call_function_ex.11         ['$102call_function_ex.11', 'k', 'out']
    jump 36                                  []
label 112:
    $114return_value.1 = cast(value=out)     ['$114return_value.1', 'out']
    return $114return_value.1                ['$114return_value.1']

[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=$14load_global.6, attr=float_)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.10 = global(range: <class 'range'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $34get_iter.15 = getiter(value=$32call_function.14)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $phi36.0 = $34get_iter.15
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 36
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.1 = iternext(value=$phi36.0)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.2 = pair_first(value=$36for_iter.1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.3 = pair_second(value=$36for_iter.1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $phi38.1 = $36for_iter.2
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: branch $36for_iter.3, 38, 112
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 38
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: k = $phi38.1
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const58.9 = const(int, -1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $60compare_op.10 = from_i == $const58.9
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: bool62 = global(bool: <class 'bool'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: branch $62pred, 72, 64
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 64
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $const66.2 = const(int, -1)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.3 = to_i == $const66.2
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 84
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 72
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $74load_attr.2 = getattr(value=$72load_global.1, attr=nan)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $74load_attr.2
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 84
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.5 = global(slice: <class 'slice'>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)])
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $102call_function_ex.11
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 112
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: $114return_value.1 = cast(value=out)
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: return $114return_value.1
[2022-10-04 21:45:08] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 113
[2022-10-04 21:45:08] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f91c9ae23d0>
[2022-10-04 21:45:08] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 21:45:08] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100build_tuple_unpack_with_call.10': [<numba.core.ir.Assign object at 0x7f91c9ad0be0>],
             '$102call_function_ex.11': [<numba.core.ir.Assign object at 0x7f91c9ad0cd0>],
             '$114return_value.1': [<numba.core.ir.Assign object at 0x7f91c9ad2190>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7f91c9ae0250>],
             '$14load_global.6': [<numba.core.ir.Assign object at 0x7f91c9ac9a60>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7f91c9ac9be0>],
             '$24load_global.10': [<numba.core.ir.Assign object at 0x7f91c9acb220>],
             '$26load_global.11': [<numba.core.ir.Assign object at 0x7f91c9acb3a0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7f91c9bb6df0>],
             '$30call_function.13': [<numba.core.ir.Assign object at 0x7f91c9acb670>],
             '$32call_function.14': [<numba.core.ir.Assign object at 0x7f91c9acb7f0>],
             '$34get_iter.15': [<numba.core.ir.Assign object at 0x7f91c9acb940>],
             '$36for_iter.1': [<numba.core.ir.Assign object at 0x7f91c9acbbe0>],
             '$36for_iter.2': [<numba.core.ir.Assign object at 0x7f91c9acbd00>],
             '$36for_iter.3': [<numba.core.ir.Assign object at 0x7f91c9acbe20>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f91c9bb6c40>],
             '$60compare_op.10': [<numba.core.ir.Assign object at 0x7f91c9accee0>],
             '$62pred': [<numba.core.ir.Assign object at 0x7f91c9ace1c0>],
             '$68compare_op.3': [<numba.core.ir.Assign object at 0x7f91c9ace430>],
             '$70pred': [<numba.core.ir.Assign object at 0x7f91c9ace6d0>],
             '$72load_global.1': [<numba.core.ir.Assign object at 0x7f91c9ace910>],
             '$74load_attr.2': [<numba.core.ir.Assign object at 0x7f91c9acea90>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7f91c9bb6400>],
             '$92build_slice.5': [<numba.core.ir.Assign object at 0x7f91c9ad04c0>],
             '$92build_slice.6': [<numba.core.ir.Assign object at 0x7f91c9ad05e0>],
             '$94binary_subscr.7': [<numba.core.ir.Assign object at 0x7f91c9ad0730>],
             '$96build_tuple.8': [<numba.core.ir.Assign object at 0x7f91c9ad08e0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7f91c9bdb7f0>],
             '$const58.9': [<numba.core.ir.Assign object at 0x7f91c9accd60>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7f91c9ace2b0>],
             '$phi36.0': [<numba.core.ir.Assign object at 0x7f91c9ac9dc0>],
             '$phi38.1': [<numba.core.ir.Assign object at 0x7f91c9acbaf0>],
             'args': [<numba.core.ir.Assign object at 0x7f91c9ac9790>],
             'arr': [<numba.core.ir.Assign object at 0x7f91c9ac9310>],
             'bool62': [<numba.core.ir.Assign object at 0x7f91c9ace0a0>],
             'bool70': [<numba.core.ir.Assign object at 0x7f91c9ace5b0>],
             'from_i': [<numba.core.ir.Assign object at 0x7f91c9acc4c0>],
             'k': [<numba.core.ir.Assign object at 0x7f91c9acc100>],
             'out': [<numba.core.ir.Assign object at 0x7f91c9acb0d0>],
             'range_ends': [<numba.core.ir.Assign object at 0x7f91c9ac9550>],
             'range_starts': [<numba.core.ir.Assign object at 0x7f91c9ac9430>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7f91c9ac9670>],
             'to_i': [<numba.core.ir.Assign object at 0x7f91c9acc9a0>]})
[2022-10-04 21:45:08] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 21:45:08] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 21, 45, 8, 361284)}, 'timestamp': '2022-10-05T01:45:08.361299+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_dollar_bars', 'messageId': '5866939a-044d-4551-9327-87be6a0afb43'}
[2022-10-04 21:45:08] [segment:289 DEBUG] enqueued track.
[2022-10-04 21:45:09] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T21:45:08.022457"}, "timestamp": "2022-10-05T01:45:08.022491+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "b1dbfbcd-0b74-4718-8be5-12d62c7ff847"}, {"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T21:45:08.361284"}, "timestamp": "2022-10-05T01:45:08.361299+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_dollar_bars", "messageId": "5866939a-044d-4551-9327-87be6a0afb43"}], "sentAt": "2022-10-05T01:45:09.352187+00:00"}
[2022-10-04 21:45:09] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 21:47:22] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:47:22] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:47:22] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:47:22] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:47:22] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:47:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 21:47:33] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:47:33] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:47:33] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:47:33] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:47:33] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:47:35] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:47:35] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:47:35] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:47:35] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:47:35] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:47:35] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:47:35] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:47:35] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:47:35] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:47:35] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:48:42] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:48:42] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:48:42] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:48:42] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:48:42] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:48:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:48:53] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:48:53] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:48:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:48:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:48:58] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:48:58] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:48:58] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:48:58] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:48:58] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:51:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:51:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:51:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:51:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:51:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:51:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:51:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:51:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:51:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:51:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:51:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:51:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:51:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:51:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:51:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:51:04] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:51:04] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:51:04] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:51:04] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:51:04] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:51:48] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:51:48] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:51:48] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:51:48] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:51:48] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:51:48] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 21:52:18] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:52:18] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:52:18] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:52:18] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:52:18] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:53:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:53:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:53:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:53:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:53:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:53:51] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:53:51] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 21:53:51] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 21:53:51] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 21:53:51] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:54:15] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 21:54:15] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 13
[2022-10-04 21:54:15] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:13]
[2022-10-04 21:54:15] [parso.python.diff:421 DEBUG] parse_part from 1 to 13 (to 12 in part parser)
[2022-10-04 21:54:15] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 21:54:15] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 21:54:15] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 22:01:24] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:01:24] [parso.python.diff:293 DEBUG] line_lengths old: 13; new: 1
[2022-10-04 22:01:24] [parso.python.diff:296 DEBUG] -> code[replace] old[1:13] new[1:1]
[2022-10-04 22:01:24] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:01:24] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:01:26] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:01:26] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:01:26] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:01:26] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:01:26] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:01:30] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:01:30] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:01:30] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:01:30] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:01:30] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:01:38] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:01:38] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:01:38] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:01:38] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:01:38] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:01:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:01:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:01:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:01:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:01:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:01:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:01:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:01:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:01:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:01:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:01:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:01:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:01:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:01:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:01:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:02:27] [segment:54 DEBUG] consumer exited.
[2022-10-04 22:02:41] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 22:02:41] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 22:02:41] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 22:03:02] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 22:03:02] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 22:03:02] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 22:03:02] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 22:03:02] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:03:02] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:03:02] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:03:02] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:03:02] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 22:03:02] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 22:03:02] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14e8103d30>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14e8103d30>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14e8103d30>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14e8103d30>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f14e80ccc70>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f14e804e2b0>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f14e80cce80>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f14e80bfe50>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f14e80bffd0>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f14e80a62b0>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f14e80a6cd0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f14e80bf8b0>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f14e80c8d90>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f14e80cb220>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f14e80cb370>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f14e80bf760>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f14e80cb3d0>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f14e80cb4f0>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f14e80cbcd0>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f14e80cbf70>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f14e80cc130>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f14e80cc730>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f14e80cc8b0>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f14e80a68b0>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f14e80a6b50>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f14e80c84f0>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f14e80c8b50>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f14e80bfa30>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f14e80c8f10>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f14e80cba30>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f14e80cc490>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f14e80a6490>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f14e80c89d0>],
             'alpha': [<numba.core.ir.Assign object at 0x7f14e80a6e50>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f14e80bf4f0>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f14e804ed00>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f14e80a6760>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f14e804edf0>,
                          <numba.core.ir.Assign object at 0x7f14e80ccdf0>],
             'i': [<numba.core.ir.Assign object at 0x7f14e80cb790>],
             'weight': [<numba.core.ir.Assign object at 0x7f14e80c8130>,
                        <numba.core.ir.Assign object at 0x7f14e80cc1f0>],
             'window': [<numba.core.ir.Assign object at 0x7f14e80bf610>]})
[2022-10-04 22:03:02] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-04 22:03:02] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e8103ee0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e8103ee0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e8103ee0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e8103ee0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f14e80e0970>],
             70: [<numba.core.ir.Assign object at 0x7f14e8053c70>]})
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14e8053940>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14e8053940>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14e8053940>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14e8053940>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e804e730>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e804e730>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e804e730>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14e804e730>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f14e8053a00>],
             70: [<numba.core.ir.Assign object at 0x7f14e801b610>]})
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1504f19040>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1504f19040>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1504f19040>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f1504f19040>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:03:02] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:03:02] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 22:03:02] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 22:03:02] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:03:02] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 22:03:02] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 22:03:02] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 22:03:02] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 22:03:02] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 22:03:02] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 22:03:02] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 22:03:02] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:03:02] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f14c8f9efa0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f14c8f8d5e0>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f14c8f96880>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f14c8f96b20>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f14c8f96d60>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f14c8f96ee0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f14c8f981c0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f14c8f98490>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f14c8f98610>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f14c8f98760>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f14c8f98be0>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f14c8f98e80>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f14c8f9a3a0>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f14c8f9a640>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f14c8f9aac0>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f14c8f9c040>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f14c8f9c4c0>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f14c8f9c9a0>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f14c8f9ce80>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f14c8f9e040>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f14c8f9e3a0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f14c8f8ddc0>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f14c8f8e0a0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f14c8f8d040>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f14c8f8eac0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f14c8f8ed60>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f14c8f8ee80>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f14c8f901c0>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f14c8f90460>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f14c8f96700>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f14c8f98a60>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f14c8f9a220>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f14c8f9ae80>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f14c8f9cbe0>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f14c8f8dc40>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f14c8f8e940>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f14c8f8d1c0>],
             'a': [<numba.core.ir.Assign object at 0x7f14c8f80d60>],
             'a.1': [<numba.core.ir.Assign object at 0x7f14c8f8d8b0>,
                     <numba.core.ir.Assign object at 0x7f14c8f9c580>],
             'b': [<numba.core.ir.Assign object at 0x7f14c8f80e80>],
             'bool112': [<numba.core.ir.Assign object at 0x7f14c8f96a00>],
             'bool136': [<numba.core.ir.Assign object at 0x7f14c8f98d60>],
             'bool144': [<numba.core.ir.Assign object at 0x7f14c8f9a520>],
             'bool174': [<numba.core.ir.Assign object at 0x7f14c8f9c880>],
             'bool24': [<numba.core.ir.Assign object at 0x7f14c8f8df40>],
             'bool42': [<numba.core.ir.Assign object at 0x7f14c8f8ec40>],
             'bool50': [<numba.core.ir.Assign object at 0x7f14c8f90340>],
             'exp': [<numba.core.ir.Assign object at 0x7f14c8f8e580>,
                     <numba.core.ir.Assign object at 0x7f14c8f96460>,
                     <numba.core.ir.Assign object at 0x7f14c8f9c100>],
             'invert': [<numba.core.ir.Assign object at 0x7f14c8f8e1c0>,
                        <numba.core.ir.Assign object at 0x7f14c8f961c0>],
             'r': [<numba.core.ir.Assign object at 0x7f14c8f8d370>,
                   <numba.core.ir.Assign object at 0x7f14c8f9ab80>]})
[2022-10-04 22:03:02] [numba.core.ssa:143 DEBUG] SSA violators {'a.1', 'invert', 'exp', 'r'}
[2022-10-04 22:03:02] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fd4f70>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f14c8fc8af0>],
             154: [<numba.core.ir.Assign object at 0x7f14c8fd4970>]})
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9e8b0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f92220>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f14c8fc8730>],
             98: [<numba.core.ir.Assign object at 0x7f14c8efd220>]})
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f70910>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8fe5070>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f14c8efd700>],
             98: [<numba.core.ir.Assign object at 0x7f14c8f1f670>],
             154: [<numba.core.ir.Assign object at 0x7f14c8f2c250>]})
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f14c8f2c370>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f14c8f1feb0>],
             146: [<numba.core.ir.Assign object at 0x7f14c8f11eb0>]})
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 22:03:02] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:03:02] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:03:02] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f14c8f9eac0>
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 22:03:02] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 22:03:02] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 22:03:02] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:03:02] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 22:03:02] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:03:02] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 22:03:03] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 22:03:03] [segment:50 DEBUG] consumer is running...
[2022-10-04 22:03:03] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-05T02:03:03.407898+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 22, 3, 3, 407388)}, 'messageId': '497236cc-f3b5-4ca9-b575-333b51f24d0c'}
[2022-10-04 22:03:03] [segment:289 DEBUG] enqueued identify.
[2022-10-04 22:03:03] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-05T02:03:03.407898+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T22:03:03.407388"}, "messageId": "497236cc-f3b5-4ca9-b575-333b51f24d0c"}], "sentAt": "2022-10-05T02:03:03.908043+00:00"}
[2022-10-04 22:03:03] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 22:03:04] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 22:03:04] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 22:03:04] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 22:03:04] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 22:03:04] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 22:03:04] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 22, 3, 4, 796717)}, 'timestamp': '2022-10-05T02:03:04.796753+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '6e6af5f3-6189-458a-833d-775f1427a8e1'}
[2022-10-04 22:03:04] [segment:289 DEBUG] enqueued track.
[2022-10-04 22:03:04] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T22:03:04.796717"}, "timestamp": "2022-10-05T02:03:04.796753+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "6e6af5f3-6189-458a-833d-775f1427a8e1"}], "sentAt": "2022-10-05T02:03:04.834268+00:00"}
[2022-10-04 22:03:04] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 22:04:34] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 22:04:34] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 22:04:53] [segment:54 DEBUG] consumer exited.
[2022-10-04 22:05:18] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 22:05:18] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 22:05:18] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 22:05:18] [Modules._Data_Manager:28 INFO] Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:18] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-04 22:05:18] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 22:05:18] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-04 22:05:18] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-04 22:05:18] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:05:18] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:05:18] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:05:18] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-04 22:05:18] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-04 22:05:18] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-04 22:05:18] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a46685b0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a46685b0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a46685b0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a46685b0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7ff0a4665b20>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7ff0a4668160>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7ff0a4665d30>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7ff0a465dd00>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7ff0a465de80>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7ff0a465f160>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7ff0a465fb80>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7ff0a465d760>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7ff0a4662c40>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7ff0a46630d0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7ff0a4663220>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7ff0a465d610>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7ff0a4663280>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7ff0a46633a0>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7ff0a4663b80>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7ff0a4663e20>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7ff0a4663fa0>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7ff0a46655e0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7ff0a4665760>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7ff0a465f760>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7ff0a465fa00>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7ff0a46623a0>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7ff0a4662a00>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7ff0a465d8e0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7ff0a4662dc0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7ff0a46638e0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7ff0a4665340>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7ff0a465f880>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7ff0a4662ee0>],
             'alpha': [<numba.core.ir.Assign object at 0x7ff0a465fd00>],
             'arr_in': [<numba.core.ir.Assign object at 0x7ff0a465d3a0>],
             'arr_length': [<numba.core.ir.Assign object at 0x7ff0a4668a00>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7ff0a465f610>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7ff0a4668ac0>,
                          <numba.core.ir.Assign object at 0x7ff0a4665ca0>],
             'i': [<numba.core.ir.Assign object at 0x7ff0a4663640>],
             'weight': [<numba.core.ir.Assign object at 0x7ff0a465ffa0>,
                        <numba.core.ir.Assign object at 0x7ff0a46650a0>],
             'window': [<numba.core.ir.Assign object at 0x7ff0a465d4c0>]})
[2022-10-04 22:05:18] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-04 22:05:18] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a46a7f70>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a46a7f70>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a46a7f70>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a46a7f70>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff0a4668fd0>],
             70: [<numba.core.ir.Assign object at 0x7ff0a466eb20>]})
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a466e7f0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a466e7f0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a466e7f0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a466e7f0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a4668ee0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a4668ee0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a4668ee0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a4668ee0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff0a469c550>],
             70: [<numba.core.ir.Assign object at 0x7ff0a45bc190>]})
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a469c850>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a469c850>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a469c850>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a469c850>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-04 22:05:18] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:18] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-04 22:05:18] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-04 22:05:18] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-04 22:05:18] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 22:05:18] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-04 22:05:18] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-04 22:05:18] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-04 22:05:18] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-04 22:05:18] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-04 22:05:18] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-04 22:05:18] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:18] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff0a455aca0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7ff0a45aa1c0>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7ff0a4550460>],
             '$112pred': [<numba.core.ir.Assign object at 0x7ff0a4550700>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7ff0a4550940>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7ff0a4550ac0>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7ff0a4550d60>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7ff0a4552070>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7ff0a45521f0>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7ff0a4552340>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7ff0a45527c0>],
             '$136pred': [<numba.core.ir.Assign object at 0x7ff0a4552a60>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7ff0a4552f40>],
             '$144pred': [<numba.core.ir.Assign object at 0x7ff0a4554220>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7ff0a45546a0>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7ff0a4554be0>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7ff0a45570a0>],
             '$174pred': [<numba.core.ir.Assign object at 0x7ff0a4557580>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7ff0a4557a60>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7ff0a4557be0>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7ff0a4557f40>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7ff0a45aa9a0>],
             '$24pred': [<numba.core.ir.Assign object at 0x7ff0a45aac40>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7ff0a4542be0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7ff0a45486a0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7ff0a4548940>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7ff0a4548a60>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7ff0a4548d60>],
             '$50pred': [<numba.core.ir.Assign object at 0x7ff0a454a040>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7ff0a45502e0>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7ff0a4552640>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7ff0a4552dc0>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7ff0a4554a60>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7ff0a45577c0>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7ff0a45aa820>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7ff0a4548520>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7ff0a4542d60>],
             'a': [<numba.core.ir.Assign object at 0x7ff0a4542940>],
             'a.1': [<numba.core.ir.Assign object at 0x7ff0a45aa490>,
                     <numba.core.ir.Assign object at 0x7ff0a4557160>],
             'b': [<numba.core.ir.Assign object at 0x7ff0a4542a60>],
             'bool112': [<numba.core.ir.Assign object at 0x7ff0a45505e0>],
             'bool136': [<numba.core.ir.Assign object at 0x7ff0a4552940>],
             'bool144': [<numba.core.ir.Assign object at 0x7ff0a4554100>],
             'bool174': [<numba.core.ir.Assign object at 0x7ff0a4557460>],
             'bool24': [<numba.core.ir.Assign object at 0x7ff0a45aab20>],
             'bool42': [<numba.core.ir.Assign object at 0x7ff0a4548820>],
             'bool50': [<numba.core.ir.Assign object at 0x7ff0a4548ee0>],
             'exp': [<numba.core.ir.Assign object at 0x7ff0a4548160>,
                     <numba.core.ir.Assign object at 0x7ff0a4550040>,
                     <numba.core.ir.Assign object at 0x7ff0a4554ca0>],
             'invert': [<numba.core.ir.Assign object at 0x7ff0a45aad60>,
                        <numba.core.ir.Assign object at 0x7ff0a454ed60>],
             'r': [<numba.core.ir.Assign object at 0x7ff0a4542f10>,
                   <numba.core.ir.Assign object at 0x7ff0a4554760>]})
[2022-10-04 22:05:18] [numba.core.ssa:143 DEBUG] SSA violators {'invert', 'exp', 'r', 'a.1'}
[2022-10-04 22:05:18] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a457df40>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ff0e06ff610>],
             98: [<numba.core.ir.Assign object at 0x7ff0e06fff10>]})
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45f84c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a45ce790>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ff0e06ff340>],
             98: [<numba.core.ir.Assign object at 0x7ff0a4510940>],
             154: [<numba.core.ir.Assign object at 0x7ff0a451d4f0>]})
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a45a76d0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a451d7c0>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff0a451d610>],
             146: [<numba.core.ir.Assign object at 0x7ff0a44cc370>]})
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a4510130>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff0a44cc820>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff0a44cc5b0>],
             154: [<numba.core.ir.Assign object at 0x7ff0a4627160>]})
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-04 22:05:18] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-04 22:05:18] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-04 22:05:18] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-04 22:05:18] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-04 22:05:18] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-04 22:05:18] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-04 22:05:18] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-04 22:05:18] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff0a44ec550>
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-04 22:05:18] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-04 22:05:18] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-04 22:05:19] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-04 22:05:19] [segment:50 DEBUG] consumer is running...
[2022-10-04 22:05:19] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-05T02:05:19.333836+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 4, 22, 5, 19, 333364)}, 'messageId': 'aeca6135-8402-4e88-9b51-6766e89d3e60'}
[2022-10-04 22:05:19] [segment:289 DEBUG] enqueued identify.
[2022-10-04 22:05:19] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-05T02:05:19.333836+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-04T22:05:19.333364"}, "messageId": "aeca6135-8402-4e88-9b51-6766e89d3e60"}], "sentAt": "2022-10-05T02:05:19.835315+00:00"}
[2022-10-04 22:05:19] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-04 22:05:20] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 22:05:20] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 22:05:20] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-04 22:05:20] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-04 22:05:20] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 22:05:20] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 22, 5, 20, 726272)}, 'timestamp': '2022-10-05T02:05:20.726332+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '73c00bdc-f532-40c5-853b-05e36ca55d1e'}
[2022-10-04 22:05:20] [segment:289 DEBUG] enqueued track.
[2022-10-04 22:05:20] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T22:05:20.726272"}, "timestamp": "2022-10-05T02:05:20.726332+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "73c00bdc-f532-40c5-853b-05e36ca55d1e"}], "sentAt": "2022-10-05T02:05:20.754350+00:00"}
[2022-10-04 22:05:20] [Modules._Data_Manager:47 INFO] Finished Loading USDCHF-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:20] [Modules._Data_Manager:48 INFO] Prepping USDCHF-2020_09_29-2022_10_03.csv for use
[2022-10-04 22:05:20] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 22:05:20] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 22:05:20] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 22:05:21] [Modules._Data_Manager:28 INFO] Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:21] [Modules._Data_Manager:47 INFO] Finished Loading USDCAD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:21] [Modules._Data_Manager:48 INFO] Prepping USDCAD-2020_09_29-2022_10_03.csv for use
[2022-10-04 22:05:21] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 22:05:21] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 22:05:21] [Modules._Data_Manager:28 INFO] Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:21] [Modules._Data_Manager:47 INFO] Finished Loading USDJPY-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:21] [Modules._Data_Manager:48 INFO] Prepping USDJPY-2020_09_29-2022_10_03.csv for use
[2022-10-04 22:05:21] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 22:05:21] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 22:05:22] [Modules._Data_Manager:28 INFO] Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:22] [Modules._Data_Manager:47 INFO] Finished Loading AUDUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:22] [Modules._Data_Manager:48 INFO] Prepping AUDUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 22:05:22] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 22:05:22] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 22:05:23] [Modules._Data_Manager:28 INFO] Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:23] [Modules._Data_Manager:47 INFO] Finished Loading EURUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:23] [Modules._Data_Manager:48 INFO] Prepping EURUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 22:05:23] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 22:05:23] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 22:05:23] [Modules._Data_Manager:28 INFO] Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:23] [Modules._Data_Manager:47 INFO] Finished Loading GBPUSD-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:23] [Modules._Data_Manager:48 INFO] Prepping GBPUSD-2020_09_29-2022_10_03.csv for use
[2022-10-04 22:05:23] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 22:05:23] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 22:05:24] [Modules._Data_Manager:28 INFO] Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:24] [Modules._Data_Manager:47 INFO] Finished Loading EURGBP-2020_09_29-2022_10_03.csv from CSV file
[2022-10-04 22:05:24] [Modules._Data_Manager:48 INFO] Prepping EURGBP-2020_09_29-2022_10_03.csv for use
[2022-10-04 22:05:24] [Modules._Data_Manager:49 INFO] _parsing dates
[2022-10-04 22:05:24] [Modules._Data_Manager:57 INFO] _dask_compute
[2022-10-04 22:05:26] [Modules._Data_Manager:107 INFO] Converting data to symbols_data obj
[2022-10-04 22:05:36] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=468)
           2	LOAD_GLOBAL(arg=0, lineno=468)
           4	LOAD_ATTR(arg=1, lineno=468)
           6	LOAD_FAST(arg=1, lineno=468)
           8	LOAD_ATTR(arg=2, lineno=468)
          10	LOAD_CONST(arg=1, lineno=468)
          12	BINARY_SUBSCR(arg=None, lineno=468)
          14	LOAD_FAST(arg=0, lineno=468)
          16	LOAD_ATTR(arg=2, lineno=468)
          18	LOAD_CONST(arg=2, lineno=468)
          20	BINARY_SUBSCR(arg=None, lineno=468)
          22	BUILD_TUPLE(arg=2, lineno=468)
          24	LOAD_GLOBAL(arg=0, lineno=468)
          26	LOAD_ATTR(arg=3, lineno=468)
          28	LOAD_CONST(arg=3, lineno=468)
          30	CALL_FUNCTION_KW(arg=2, lineno=468)
          32	STORE_FAST(arg=5, lineno=468)
          34	LOAD_GLOBAL(arg=4, lineno=469)
          36	LOAD_FAST(arg=0, lineno=469)
          38	LOAD_ATTR(arg=2, lineno=469)
          40	LOAD_CONST(arg=2, lineno=469)
          42	BINARY_SUBSCR(arg=None, lineno=469)
          44	CALL_FUNCTION(arg=1, lineno=469)
          46	GET_ITER(arg=None, lineno=469)
>         48	FOR_ITER(arg=48, lineno=469)
          50	STORE_FAST(arg=6, lineno=469)
          52	LOAD_GLOBAL(arg=5, lineno=470)
          54	LOAD_FAST(arg=0, lineno=470)
          56	LOAD_CONST(arg=4, lineno=470)
          58	LOAD_CONST(arg=4, lineno=470)
          60	BUILD_SLICE(arg=2, lineno=470)
          62	LOAD_FAST(arg=6, lineno=470)
          64	BUILD_TUPLE(arg=2, lineno=470)
          66	BINARY_SUBSCR(arg=None, lineno=470)
          68	LOAD_FAST(arg=1, lineno=470)
          70	LOAD_FAST(arg=2, lineno=470)
          72	LOAD_FAST(arg=3, lineno=470)
          74	BUILD_TUPLE(arg=4, lineno=470)
          76	LOAD_FAST(arg=4, lineno=470)
          78	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
          80	CALL_FUNCTION_EX(arg=0, lineno=470)
          82	LOAD_FAST(arg=5, lineno=470)
          84	LOAD_CONST(arg=4, lineno=470)
          86	LOAD_CONST(arg=4, lineno=470)
          88	BUILD_SLICE(arg=2, lineno=470)
          90	LOAD_FAST(arg=6, lineno=470)
          92	BUILD_TUPLE(arg=2, lineno=470)
          94	STORE_SUBSCR(arg=None, lineno=470)
          96	JUMP_ABSOLUTE(arg=48, lineno=470)
>         98	LOAD_FAST(arg=5, lineno=471)
         100	RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$arr14.6']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=BUILD_TUPLE(arg=2, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$20binary_subscr.9']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$24load_global.11']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION_KW(arg=2, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12', '$const28.13']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=STORE_FAST(arg=5, lineno=468)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$30call_function_kw.14']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=LOAD_GLOBAL(arg=4, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_ATTR(arg=2, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$arr36.16']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17', '$const40.18']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=CALL_FUNCTION(arg=1, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$42binary_subscr.19']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=GET_ITER(arg=None, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$44call_function.20']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$46get_iter.21',), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: ['$phi48.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=FOR_ITER(arg=48, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=50, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=50 nstack_initial=2)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=471)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=471)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$out98.0']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=50 nstack_initial=2)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: ['$phi50.0', '$phi50.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=STORE_FAST(arg=6, lineno=469)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$phi50.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_GLOBAL(arg=5, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4', '$const58.5']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7', '$col62.8']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$64build_tuple.9']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_FAST(arg=2, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=3, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=BUILD_TUPLE(arg=4, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14', '$args76.15']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=CALL_FUNCTION_EX(arg=0, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$78build_tuple_unpack_with_call.16']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19', '$const86.20']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22', '$col90.23']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=STORE_SUBSCR(arg=None, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$92build_tuple.24']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=JUMP_ABSOLUTE(arg=48, lineno=470)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$phi50.0',), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 22:05:36] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=50 nstack_initial=2): {'$phi50.1'},
             State(pc_initial=98 nstack_initial=0): set()})
[2022-10-04 22:05:36] [numba.core.byteflow:189 DEBUG] defmap: {'$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.1': State(pc_initial=48 nstack_initial=1)}
[2022-10-04 22:05:36] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=2))},
             '$phi50.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 22:05:36] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 22:05:36] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 22:05:36] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-04 22:05:36] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi48.0': {('$46get_iter.21', State(pc_initial=0 nstack_initial=0))},
 '$phi50.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
[2022-10-04 22:05:36] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.21'},
             State(pc_initial=48 nstack_initial=1): {'$phi50.1': '$48for_iter.2'}})
[2022-10-04 22:05:36] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$arr14.6'}), (16, {'item': '$arr14.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$16load_attr.7', 'res': '$20binary_subscr.9'}), (22, {'items': ['$12binary_subscr.5', '$20binary_subscr.9'], 'res': '$22build_tuple.10'}), (24, {'res': '$24load_global.11'}), (26, {'item': '$24load_global.11', 'res': '$26load_attr.12'}), (28, {'res': '$const28.13'}), (30, {'func': '$4load_attr.1', 'args': ['$22build_tuple.10', '$26load_attr.12'], 'names': '$const28.13', 'res': '$30call_function_kw.14'}), (32, {'value': '$30call_function_kw.14'}), (34, {'res': '$34load_global.15'}), (36, {'res': '$arr36.16'}), (38, {'item': '$arr36.16', 'res': '$38load_attr.17'}), (40, {'res': '$const40.18'}), (42, {'index': '$const40.18', 'target': '$38load_attr.17', 'res': '$42binary_subscr.19'}), (44, {'func': '$34load_global.15', 'args': ['$42binary_subscr.19'], 'res': '$44call_function.20'}), (46, {'value': '$44call_function.20', 'res': '$46get_iter.21'})), outgoing_phis={'$phi48.0': '$46get_iter.21'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.21',)})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi50.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 50: ('$phi48.0', '$48for_iter.2')})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=50 nstack_initial=2):
AdaptBlockInfo(insts=((50, {'value': '$phi50.1'}), (52, {'res': '$52load_global.2'}), (54, {'res': '$arr54.3'}), (56, {'res': '$const56.4'}), (58, {'res': '$const58.5'}), (60, {'start': '$const56.4', 'stop': '$const58.5', 'step': None, 'res': '$60build_slice.7', 'slicevar': '$60build_slice.6'}), (62, {'res': '$col62.8'}), (64, {'items': ['$60build_slice.7', '$col62.8'], 'res': '$64build_tuple.9'}), (66, {'index': '$64build_tuple.9', 'target': '$arr54.3', 'res': '$66binary_subscr.10'}), (68, {'res': '$range_starts68.11'}), (70, {'res': '$range_ends70.12'}), (72, {'res': '$reduce_func_nb72.13'}), (74, {'items': ['$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13'], 'res': '$74build_tuple.14'}), (76, {'res': '$args76.15'}), (78, {'tuples': ['$74build_tuple.14', '$args76.15'], 'temps': ['$78build_tuple_unpack_with_call.16'], 'is_assign': False}), (80, {'func': '$52load_global.2', 'vararg': '$78build_tuple_unpack_with_call.16', 'res': '$80call_function_ex.17'}), (82, {'res': '$out82.18'}), (84, {'res': '$const84.19'}), (86, {'res': '$const86.20'}), (88, {'start': '$const84.19', 'stop': '$const86.20', 'step': None, 'res': '$88build_slice.22', 'slicevar': '$88build_slice.21'}), (90, {'res': '$col90.23'}), (92, {'items': ['$88build_slice.22', '$col90.23'], 'res': '$92build_tuple.24'}), (94, {'target': '$out82.18', 'index': '$92build_tuple.24', 'value': '$80call_function_ex.17'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi50.0',)})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$out98.0'}), (100, {'retval': '$out98.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:36] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $16load_attr.7 = getattr(value=arr, attr=shape) ['$16load_attr.7', 'arr']
    $const18.8 = const(int, 1)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=$16load_attr.7, index=$const18.8, fn=<built-in function getitem>) ['$16load_attr.7', '$20binary_subscr.9', '$const18.8']
    $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)]) ['$12binary_subscr.5', '$20binary_subscr.9', '$22build_tuple.10']
    $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$24load_global.11']
    $26load_attr.12 = getattr(value=$24load_global.11, attr=float_) ['$24load_global.11', '$26load_attr.12']
    out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None) ['$22build_tuple.10', '$26load_attr.12', '$4load_attr.1', 'out']
    $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>) ['$34load_global.15']
    $38load_attr.17 = getattr(value=arr, attr=shape) ['$38load_attr.17', 'arr']
    $const40.18 = const(int, 1)              ['$const40.18']
    $42binary_subscr.19 = getitem(value=$38load_attr.17, index=$const40.18, fn=<built-in function getitem>) ['$38load_attr.17', '$42binary_subscr.19', '$const40.18']
    $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None) ['$34load_global.15', '$42binary_subscr.19', '$44call_function.20']
    $46get_iter.21 = getiter(value=$44call_function.20) ['$44call_function.20', '$46get_iter.21']
    $phi48.0 = $46get_iter.21                ['$46get_iter.21', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi50.1 = $48for_iter.2                 ['$48for_iter.2', '$phi50.1']
    branch $48for_iter.3, 50, 98             ['$48for_iter.3']
label 50:
    col = $phi50.1                           ['$phi50.1', 'col']
    $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7ff0e612fd30>)) ['$52load_global.2']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $const58.5 = const(NoneType, None)       ['$const58.5']
    $60build_slice.6 = global(slice: <class 'slice'>) ['$60build_slice.6']
    $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None) ['$60build_slice.6', '$60build_slice.7', '$const56.4', '$const58.5']
    $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$60build_slice.7', '$64build_tuple.9', 'col']
    $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>) ['$64build_tuple.9', '$66binary_subscr.10', 'arr']
    $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)]) ['$66binary_subscr.10', '$74build_tuple.14', 'range_ends', 'range_starts', 'reduce_func_nb']
    $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args ['$74build_tuple.14', '$78build_tuple_unpack_with_call.16', 'args']
    $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16) ['$52load_global.2', '$78build_tuple_unpack_with_call.16', '$80call_function_ex.17']
    $const84.19 = const(NoneType, None)      ['$const84.19']
    $const86.20 = const(NoneType, None)      ['$const86.20']
    $88build_slice.21 = global(slice: <class 'slice'>) ['$88build_slice.21']
    $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None) ['$88build_slice.21', '$88build_slice.22', '$const84.19', '$const86.20']
    $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$88build_slice.22', '$92build_tuple.24', 'col']
    out[$92build_tuple.24] = $80call_function_ex.17 ['$80call_function_ex.17', '$92build_tuple.24', 'out']
    jump 48                                  []
label 98:
    $100return_value.1 = cast(value=out)     ['$100return_value.1', 'out']
    return $100return_value.1                ['$100return_value.1']

[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff03d44abe0>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=arr, attr=shape)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const18.8 = const(int, 1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $20binary_subscr.9 = static_getitem(value=$16load_attr.7, index=1, index_var=$const18.8, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)])
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $26load_attr.12 = getattr(value=$24load_global.11, attr=float_)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $38load_attr.17 = getattr(value=arr, attr=shape)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const40.18 = const(int, 1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $42binary_subscr.19 = static_getitem(value=$38load_attr.17, index=1, index_var=$const40.18, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.21 = getiter(value=$44call_function.20)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.21
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff03d44abe0>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 98
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 50
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff03d44abe0>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: col = $phi50.1
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7ff0e612fd30>))
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const56.4 = const(NoneType, None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const58.5 = const(NoneType, None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.6 = global(slice: <class 'slice'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)])
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const84.19 = const(NoneType, None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const86.20 = const(NoneType, None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.21 = global(slice: <class 'slice'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: out[$92build_tuple.24] = $80call_function_ex.17
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff03d44abe0>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $100return_value.1 = cast(value=out)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: return $100return_value.1
[2022-10-04 22:05:36] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100return_value.1': [<numba.core.ir.Assign object at 0x7ff03cd82ac0>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7ff03cd6e100>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7ff03cd8bbe0>],
             '$20binary_subscr.9': [<numba.core.ir.Assign object at 0x7ff03cd6e400>],
             '$22build_tuple.10': [<numba.core.ir.Assign object at 0x7ff03cd890d0>],
             '$24load_global.11': [<numba.core.ir.Assign object at 0x7ff03cd89220>],
             '$26load_attr.12': [<numba.core.ir.Assign object at 0x7ff03cd893a0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7ff03cd8b220>],
             '$34load_global.15': [<numba.core.ir.Assign object at 0x7ff03cd899a0>],
             '$38load_attr.17': [<numba.core.ir.Assign object at 0x7ff03cd89c40>],
             '$42binary_subscr.19': [<numba.core.ir.Assign object at 0x7ff03cd6e4c0>],
             '$44call_function.20': [<numba.core.ir.Assign object at 0x7ff03cd87130>],
             '$46get_iter.21': [<numba.core.ir.Assign object at 0x7ff03cd87280>],
             '$48for_iter.1': [<numba.core.ir.Assign object at 0x7ff03cd874c0>],
             '$48for_iter.2': [<numba.core.ir.Assign object at 0x7ff03cd875e0>],
             '$48for_iter.3': [<numba.core.ir.Assign object at 0x7ff03cd87700>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7ff03cd8b3a0>],
             '$52load_global.2': [<numba.core.ir.Assign object at 0x7ff03cd87b20>],
             '$60build_slice.6': [<numba.core.ir.Assign object at 0x7ff03cd85130>],
             '$60build_slice.7': [<numba.core.ir.Assign object at 0x7ff03cd85250>],
             '$64build_tuple.9': [<numba.core.ir.Assign object at 0x7ff03cd854f0>],
             '$66binary_subscr.10': [<numba.core.ir.Assign object at 0x7ff03cd85640>],
             '$74build_tuple.14': [<numba.core.ir.Assign object at 0x7ff03cd85b50>],
             '$78build_tuple_unpack_with_call.16': [<numba.core.ir.Assign object at 0x7ff03cd85e50>],
             '$80call_function_ex.17': [<numba.core.ir.Assign object at 0x7ff03cd85f40>],
             '$88build_slice.21': [<numba.core.ir.Assign object at 0x7ff03cd82550>],
             '$88build_slice.22': [<numba.core.ir.Assign object at 0x7ff03cd82670>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7ff03cd8b640>],
             '$92build_tuple.24': [<numba.core.ir.Assign object at 0x7ff03cd82910>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7ff03cd8b7c0>],
             '$const18.8': [<numba.core.ir.Assign object at 0x7ff03cd8bd60>],
             '$const40.18': [<numba.core.ir.Assign object at 0x7ff03cd89dc0>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7ff03cd87dc0>],
             '$const58.5': [<numba.core.ir.Assign object at 0x7ff03cd87f40>],
             '$const84.19': [<numba.core.ir.Assign object at 0x7ff03cd82220>],
             '$const86.20': [<numba.core.ir.Assign object at 0x7ff03cd823a0>],
             '$phi48.0': [<numba.core.ir.Assign object at 0x7ff03cd8ba60>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7ff03cd873d0>],
             'args': [<numba.core.ir.Assign object at 0x7ff03cd8b0a0>],
             'arr': [<numba.core.ir.Assign object at 0x7ff03cda1be0>],
             'col': [<numba.core.ir.Assign object at 0x7ff03cd879a0>],
             'out': [<numba.core.ir.Assign object at 0x7ff03cd89850>],
             'range_ends': [<numba.core.ir.Assign object at 0x7ff03cda1e20>],
             'range_starts': [<numba.core.ir.Assign object at 0x7ff03cda1d00>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7ff03cda1f40>]})
[2022-10-04 22:05:36] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 22:05:36] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	LOAD_GLOBAL(arg=0, lineno=436)
           4	LOAD_ATTR(arg=1, lineno=436)
           6	LOAD_FAST(arg=1, lineno=436)
           8	LOAD_ATTR(arg=2, lineno=436)
          10	LOAD_CONST(arg=1, lineno=436)
          12	BINARY_SUBSCR(arg=None, lineno=436)
          14	LOAD_GLOBAL(arg=0, lineno=436)
          16	LOAD_ATTR(arg=3, lineno=436)
          18	LOAD_CONST(arg=2, lineno=436)
          20	CALL_FUNCTION_KW(arg=2, lineno=436)
          22	STORE_FAST(arg=5, lineno=436)
          24	LOAD_GLOBAL(arg=4, lineno=438)
          26	LOAD_GLOBAL(arg=5, lineno=438)
          28	LOAD_FAST(arg=1, lineno=438)
          30	CALL_FUNCTION(arg=1, lineno=438)
          32	CALL_FUNCTION(arg=1, lineno=438)
          34	GET_ITER(arg=None, lineno=438)
>         36	FOR_ITER(arg=74, lineno=438)
          38	STORE_FAST(arg=6, lineno=438)
          40	LOAD_FAST(arg=1, lineno=439)
          42	LOAD_FAST(arg=6, lineno=439)
          44	BINARY_SUBSCR(arg=None, lineno=439)
          46	STORE_FAST(arg=7, lineno=439)
          48	LOAD_FAST(arg=2, lineno=440)
          50	LOAD_FAST(arg=6, lineno=440)
          52	BINARY_SUBSCR(arg=None, lineno=440)
          54	STORE_FAST(arg=8, lineno=440)
          56	LOAD_FAST(arg=7, lineno=441)
          58	LOAD_CONST(arg=3, lineno=441)
          60	COMPARE_OP(arg=2, lineno=441)
          62	POP_JUMP_IF_TRUE(arg=72, lineno=441)
          64	LOAD_FAST(arg=8, lineno=441)
          66	LOAD_CONST(arg=3, lineno=441)
          68	COMPARE_OP(arg=2, lineno=441)
          70	POP_JUMP_IF_FALSE(arg=84, lineno=441)
>         72	LOAD_GLOBAL(arg=0, lineno=442)
          74	LOAD_ATTR(arg=6, lineno=442)
          76	LOAD_FAST(arg=5, lineno=442)
          78	LOAD_FAST(arg=6, lineno=442)
          80	STORE_SUBSCR(arg=None, lineno=442)
          82	JUMP_ABSOLUTE(arg=36, lineno=442)
>         84	LOAD_FAST(arg=3, lineno=444)
          86	LOAD_FAST(arg=0, lineno=444)
          88	LOAD_FAST(arg=7, lineno=444)
          90	LOAD_FAST(arg=8, lineno=444)
          92	BUILD_SLICE(arg=2, lineno=444)
          94	BINARY_SUBSCR(arg=None, lineno=444)
          96	BUILD_TUPLE(arg=1, lineno=444)
          98	LOAD_FAST(arg=4, lineno=444)
         100	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
         102	CALL_FUNCTION_EX(arg=0, lineno=444)
         104	LOAD_FAST(arg=5, lineno=444)
         106	LOAD_FAST(arg=6, lineno=444)
         108	STORE_SUBSCR(arg=None, lineno=444)
         110	JUMP_ABSOLUTE(arg=36, lineno=444)
>        112	LOAD_FAST(arg=5, lineno=445)
         114	RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$14load_global.6']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=STORE_FAST(arg=5, lineno=436)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$20call_function_kw.9']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=4, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11', '$range_starts28.12']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$30call_function.13']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=GET_ITER(arg=None, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$32call_function.14']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$34get_iter.15',), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: ['$phi36.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=FOR_ITER(arg=74, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi36.0']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=445)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=RETURN_VALUE(arg=None, lineno=445)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$out112.0']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=38 nstack_initial=2)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: ['$phi38.0', '$phi38.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=STORE_FAST(arg=6, lineno=438)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$phi38.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=439)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=6, lineno=439)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=439)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2', '$k42.3']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=STORE_FAST(arg=7, lineno=439)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$44binary_subscr.4']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=440)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=440)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=440)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5', '$k50.6']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=STORE_FAST(arg=8, lineno=440)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$52binary_subscr.7']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_FAST(arg=7, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8', '$const58.9']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_TRUE(arg=72, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$60compare_op.10']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=('$phi38.0',), blockstack=(), npush=0), Edge(pc=72, stack=('$phi38.0',), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=72 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: ['$phi64.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_FAST(arg=8, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1', '$const66.2']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=84, lineno=441)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$68compare_op.3']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=72, stack=('$phi64.0',), blockstack=(), npush=0), Edge(pc=84, stack=('$phi64.0',), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: ['$phi72.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_GLOBAL(arg=0, lineno=442)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_ATTR(arg=6, lineno=442)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$72load_global.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=442)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=442)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=STORE_SUBSCR(arg=None, lineno=442)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3', '$k78.4']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=JUMP_ABSOLUTE(arg=36, lineno=442)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi72.0',), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:103 DEBUG] stack: ['$phi84.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=3, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=8, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_SLICE(arg=2, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3', '$to_i90.4']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$92build_slice.6']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BUILD_TUPLE(arg=1, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$94binary_subscr.7']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8', '$args98.9']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=CALL_FUNCTION_EX(arg=0, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$100build_tuple_unpack_with_call.10']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12', '$k106.13']
[2022-10-04 22:05:36] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=JUMP_ABSOLUTE(arg=36, lineno=444)
[2022-10-04 22:05:36] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-04 22:05:36] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi84.0',), blockstack=(), npush=0)]
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-04 22:05:36] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-04 22:05:36] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=72 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=0): set()})
[2022-10-04 22:05:36] [numba.core.byteflow:189 DEBUG] defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
[2022-10-04 22:05:36] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi72.0', State(pc_initial=72 nstack_initial=1)),
                          ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi72.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi84.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))}})
[2022-10-04 22:05:36] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 22:05:36] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 22:05:36] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-04 22:05:36] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi36.0': {('$34get_iter.15', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
[2022-10-04 22:05:36] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.15'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
[2022-10-04 22:05:36] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$14load_global.6'}), (16, {'item': '$14load_global.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'func': '$4load_attr.1', 'args': ['$12binary_subscr.5', '$16load_attr.7'], 'names': '$const18.8', 'res': '$20call_function_kw.9'}), (22, {'value': '$20call_function_kw.9'}), (24, {'res': '$24load_global.10'}), (26, {'res': '$26load_global.11'}), (28, {'res': '$range_starts28.12'}), (30, {'func': '$26load_global.11', 'args': ['$range_starts28.12'], 'res': '$30call_function.13'}), (32, {'func': '$24load_global.10', 'args': ['$30call_function.13'], 'res': '$32call_function.14'}), (34, {'value': '$32call_function.14', 'res': '$34get_iter.15'})), outgoing_phis={'$phi36.0': '$34get_iter.15'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.15',)})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: (), 38: ('$phi36.0', '$36for_iter.2')})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$range_starts40.2'}), (42, {'res': '$k42.3'}), (44, {'index': '$k42.3', 'target': '$range_starts40.2', 'res': '$44binary_subscr.4'}), (46, {'value': '$44binary_subscr.4'}), (48, {'res': '$range_ends48.5'}), (50, {'res': '$k50.6'}), (52, {'index': '$k50.6', 'target': '$range_ends48.5', 'res': '$52binary_subscr.7'}), (54, {'value': '$52binary_subscr.7'}), (56, {'res': '$from_i56.8'}), (58, {'res': '$const58.9'}), (60, {'lhs': '$from_i56.8', 'rhs': '$const58.9', 'res': '$60compare_op.10'}), (62, {'pred': '$60compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi38.0',), 72: ('$phi38.0',)})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$to_i64.1'}), (66, {'res': '$const66.2'}), (68, {'lhs': '$to_i64.1', 'rhs': '$const66.2', 'res': '$68compare_op.3'}), (70, {'pred': '$68compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$phi64.0',), 84: ('$phi64.0',)})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'res': '$72load_global.1'}), (74, {'item': '$72load_global.1', 'res': '$74load_attr.2'}), (76, {'res': '$out76.3'}), (78, {'res': '$k78.4'}), (80, {'target': '$out76.3', 'index': '$k78.4', 'value': '$74load_attr.2'}), (82, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi72.0',)})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$reduce_func_nb84.1'}), (86, {'res': '$arr86.2'}), (88, {'res': '$from_i88.3'}), (90, {'res': '$to_i90.4'}), (92, {'start': '$from_i88.3', 'stop': '$to_i90.4', 'step': None, 'res': '$92build_slice.6', 'slicevar': '$92build_slice.5'}), (94, {'index': '$92build_slice.6', 'target': '$arr86.2', 'res': '$94binary_subscr.7'}), (96, {'items': ['$94binary_subscr.7'], 'res': '$96build_tuple.8'}), (98, {'res': '$args98.9'}), (100, {'tuples': ['$96build_tuple.8', '$args98.9'], 'temps': ['$100build_tuple_unpack_with_call.10'], 'is_assign': False}), (102, {'func': '$reduce_func_nb84.1', 'vararg': '$100build_tuple_unpack_with_call.10', 'res': '$102call_function_ex.11'}), (104, {'res': '$out104.12'}), (106, {'res': '$k106.13'}), (108, {'target': '$out104.12', 'index': '$k106.13', 'value': '$102call_function_ex.11'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi84.0',)})
[2022-10-04 22:05:36] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$out112.0'}), (114, {'retval': '$out112.0', 'castval': '$114return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-04 22:05:36] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$14load_global.6']
    $16load_attr.7 = getattr(value=$14load_global.6, attr=float_) ['$14load_global.6', '$16load_attr.7']
    out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None) ['$12binary_subscr.5', '$16load_attr.7', '$4load_attr.1', 'out']
    $24load_global.10 = global(range: <class 'range'>) ['$24load_global.10']
    $26load_global.11 = global(len: <built-in function len>) ['$26load_global.11']
    $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None) ['$26load_global.11', '$30call_function.13', 'range_starts']
    $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None) ['$24load_global.10', '$30call_function.13', '$32call_function.14']
    $34get_iter.15 = getiter(value=$32call_function.14) ['$32call_function.14', '$34get_iter.15']
    $phi36.0 = $34get_iter.15                ['$34get_iter.15', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 112            ['$36for_iter.3']
label 38:
    k = $phi38.1                             ['$phi38.1', 'k']
    from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>) ['from_i', 'k', 'range_starts']
    to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>) ['k', 'range_ends', 'to_i']
    $const58.9 = const(int, -1)              ['$const58.9']
    $60compare_op.10 = from_i == $const58.9  ['$60compare_op.10', '$const58.9', 'from_i']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None) ['$60compare_op.10', '$62pred', 'bool62']
    branch $62pred, 72, 64                   ['$62pred']
label 64:
    $const66.2 = const(int, -1)              ['$const66.2']
    $68compare_op.3 = to_i == $const66.2     ['$68compare_op.3', '$const66.2', 'to_i']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None) ['$68compare_op.3', '$70pred', 'bool70']
    branch $70pred, 72, 84                   ['$70pred']
label 72:
    $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$72load_global.1']
    $74load_attr.2 = getattr(value=$72load_global.1, attr=nan) ['$72load_global.1', '$74load_attr.2']
    out[k] = $74load_attr.2                  ['$74load_attr.2', 'k', 'out']
    jump 36                                  []
label 84:
    $92build_slice.5 = global(slice: <class 'slice'>) ['$92build_slice.5']
    $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None) ['$92build_slice.5', '$92build_slice.6', 'from_i', 'to_i']
    $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>) ['$92build_slice.6', '$94binary_subscr.7', 'arr']
    $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)]) ['$94binary_subscr.7', '$96build_tuple.8']
    $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args ['$100build_tuple_unpack_with_call.10', '$96build_tuple.8', 'args']
    $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10) ['$100build_tuple_unpack_with_call.10', '$102call_function_ex.11', 'reduce_func_nb']
    out[k] = $102call_function_ex.11         ['$102call_function_ex.11', 'k', 'out']
    jump 36                                  []
label 112:
    $114return_value.1 = cast(value=out)     ['$114return_value.1', 'out']
    return $114return_value.1                ['$114return_value.1']

[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=$14load_global.6, attr=float_)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.10 = global(range: <class 'range'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $34get_iter.15 = getiter(value=$32call_function.14)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $phi36.0 = $34get_iter.15
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 36
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.1 = iternext(value=$phi36.0)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.2 = pair_first(value=$36for_iter.1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.3 = pair_second(value=$36for_iter.1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $phi38.1 = $36for_iter.2
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: branch $36for_iter.3, 38, 112
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 38
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: k = $phi38.1
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const58.9 = const(int, -1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $60compare_op.10 = from_i == $const58.9
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: bool62 = global(bool: <class 'bool'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: branch $62pred, 72, 64
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 64
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $const66.2 = const(int, -1)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.3 = to_i == $const66.2
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 84
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 72
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $74load_attr.2 = getattr(value=$72load_global.1, attr=nan)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $74load_attr.2
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 84
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.5 = global(slice: <class 'slice'>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)])
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $102call_function_ex.11
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 112
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: $114return_value.1 = cast(value=out)
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: return $114return_value.1
[2022-10-04 22:05:36] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 113
[2022-10-04 22:05:36] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff047b43190>
[2022-10-04 22:05:36] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-04 22:05:36] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100build_tuple_unpack_with_call.10': [<numba.core.ir.Assign object at 0x7ff047b31f40>],
             '$102call_function_ex.11': [<numba.core.ir.Assign object at 0x7ff047b33070>],
             '$114return_value.1': [<numba.core.ir.Assign object at 0x7ff047b334f0>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7ff047b3dfd0>],
             '$14load_global.6': [<numba.core.ir.Assign object at 0x7ff047b29dc0>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7ff047b29f40>],
             '$24load_global.10': [<numba.core.ir.Assign object at 0x7ff047b2a580>],
             '$26load_global.11': [<numba.core.ir.Assign object at 0x7ff047b2a700>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7ff047b29520>],
             '$30call_function.13': [<numba.core.ir.Assign object at 0x7ff047b2a9d0>],
             '$32call_function.14': [<numba.core.ir.Assign object at 0x7ff047b2ab50>],
             '$34get_iter.15': [<numba.core.ir.Assign object at 0x7ff047b2aca0>],
             '$36for_iter.1': [<numba.core.ir.Assign object at 0x7ff047b2af40>],
             '$36for_iter.2': [<numba.core.ir.Assign object at 0x7ff047b2e0a0>],
             '$36for_iter.3': [<numba.core.ir.Assign object at 0x7ff047b2e1c0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7ff047b296a0>],
             '$60compare_op.10': [<numba.core.ir.Assign object at 0x7ff047b2f280>],
             '$62pred': [<numba.core.ir.Assign object at 0x7ff047b2f520>],
             '$68compare_op.3': [<numba.core.ir.Assign object at 0x7ff047b2f790>],
             '$70pred': [<numba.core.ir.Assign object at 0x7ff047b2fa30>],
             '$72load_global.1': [<numba.core.ir.Assign object at 0x7ff047b2fc70>],
             '$74load_attr.2': [<numba.core.ir.Assign object at 0x7ff047b2fdf0>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7ff047b29940>],
             '$92build_slice.5': [<numba.core.ir.Assign object at 0x7ff047b31820>],
             '$92build_slice.6': [<numba.core.ir.Assign object at 0x7ff047b31940>],
             '$94binary_subscr.7': [<numba.core.ir.Assign object at 0x7ff047b31a90>],
             '$96build_tuple.8': [<numba.core.ir.Assign object at 0x7ff047b31c40>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7ff047b29ac0>],
             '$const58.9': [<numba.core.ir.Assign object at 0x7ff047b2f100>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7ff047b2f610>],
             '$phi36.0': [<numba.core.ir.Assign object at 0x7ff03e991df0>],
             '$phi38.1': [<numba.core.ir.Assign object at 0x7ff047b2ae50>],
             'args': [<numba.core.ir.Assign object at 0x7ff047b293a0>],
             'arr': [<numba.core.ir.Assign object at 0x7ff03e991ee0>],
             'bool62': [<numba.core.ir.Assign object at 0x7ff047b2f400>],
             'bool70': [<numba.core.ir.Assign object at 0x7ff047b2f910>],
             'from_i': [<numba.core.ir.Assign object at 0x7ff047b2e820>],
             'k': [<numba.core.ir.Assign object at 0x7ff047b2e460>],
             'out': [<numba.core.ir.Assign object at 0x7ff047b2a430>],
             'range_ends': [<numba.core.ir.Assign object at 0x7ff047b29160>],
             'range_starts': [<numba.core.ir.Assign object at 0x7ff047b29040>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7ff047b29280>],
             'to_i': [<numba.core.ir.Assign object at 0x7ff047b2ed00>]})
[2022-10-04 22:05:36] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-04 22:05:36] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 4, 22, 5, 36, 407839)}, 'timestamp': '2022-10-05T02:05:36.407854+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_dollar_bars', 'messageId': '8d3def46-2179-48ec-824e-94e80f5b4daa'}
[2022-10-04 22:05:36] [segment:289 DEBUG] enqueued track.
[2022-10-04 22:05:37] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-04T22:05:36.407839"}, "timestamp": "2022-10-05T02:05:36.407854+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_dollar_bars", "messageId": "8d3def46-2179-48ec-824e-94e80f5b4daa"}], "sentAt": "2022-10-05T02:05:37.375723+00:00"}
[2022-10-04 22:05:37] [segment:52 DEBUG] data uploaded successfully
[2022-10-04 22:09:04] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 22:09:04] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 22:09:05] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:05] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:05] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:05] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:05] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/frame.py
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/__init__.py
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/__init__.py
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/generic.py
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/base.py
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/accessor.py
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexing.py
[2022-10-04 22:09:05] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/arraylike.py
[2022-10-04 22:09:31] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:31] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:31] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:31] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:31] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:09:31] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:31] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:31] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:31] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:31] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:09:31] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:31] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:31] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:31] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:31] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:09:31] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:31] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:31] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:31] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:31] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:09:58] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:58] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:58] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:58] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:58] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:09:58] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:58] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:58] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:58] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:58] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:09:58] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:09:58] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:09:58] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:09:58] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:09:58] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:11:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:11:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:11:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:11:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:11:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:11:12] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:11:12] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:11:12] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:11:12] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:11:12] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:18:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:18:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:18:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:18:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:18:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:18:39] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:18:39] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:18:39] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:18:39] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:18:39] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:21:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:21:06] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:21:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:21:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:21:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:46] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:46] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:46] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:46] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:46] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:46] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 22:26:46] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 22:26:47] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:47] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:47] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:47] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:47] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:50] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:50] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:50] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:50] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:50] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:55] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:55] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:55] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:55] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:55] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:56] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:56] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:56] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:56] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:56] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:57] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:57] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:57] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:57] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:57] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:26:57] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:26:57] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:26:57] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:26:57] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:26:57] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:32:36] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:32:36] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:32:36] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:32:36] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:32:36] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/_typing.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexes/__init__.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexes/api.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexes/base.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.pyi
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/abc.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/types.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/common.py
[2022-10-04 22:32:36] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/series.py
[2022-10-04 22:32:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:32:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:32:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:32:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:32:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:32:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:32:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:32:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:32:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:32:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:32:42] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:32:42] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:32:42] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:32:42] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:32:42] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:32:43] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:32:43] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:32:43] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:32:43] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:32:43] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:33:21] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:33:21] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:33:21] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:33:21] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:33:21] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:33:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:33:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:33:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:33:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:33:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:40:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:40:06] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:40:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:40:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:40:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:46:27] [segment:54 DEBUG] consumer exited.
[2022-10-04 22:49:35] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 22:49:35] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 22:49:35] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 22:50:10] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/h2o/__init__.py
[2022-10-04 22:50:10] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/h2o/h2o.py
[2022-10-04 22:50:10] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-04 22:50:10] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-04 22:50:14] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:50:14] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:50:14] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:50:14] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:50:14] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:50:14] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-04 22:50:14] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-04 22:50:34] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-04 22:50:34] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-04 22:50:34] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-04 22:50:34] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-04 22:50:34] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-04 22:59:23] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 22:59:23] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 22:59:23] [root:125 DEBUG] Logging queue listener started!
[2022-10-04 23:10:19] [root:177 DEBUG] _________________New log started__________________
[2022-10-04 23:10:19] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-04 23:10:19] [root:125 DEBUG] Logging queue listener started!
