[2022-10-06 09:52:52] [root:177 DEBUG] _________________New log started__________________
[2022-10-06 09:52:52] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-06 09:52:52] [root:125 DEBUG] Logging queue listener started!
[2022-10-06 09:53:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-06 09:53:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-06 09:55:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 09:55:06] [parso.python.diff:293 DEBUG] line_lengths old: 3; new: 1
[2022-10-06 09:55:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:3] new[1:1]
[2022-10-06 09:55:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 09:55:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 09:55:06] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/vectorbtpro/__init__.py
[2022-10-06 09:56:56] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 09:56:56] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 09:56:56] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-06 09:56:56] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-06 09:56:56] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 09:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 09:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 09:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 09:56:56] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-06 09:56:56] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-06 09:56:56] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4642b8dfa0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4642b8dfa0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4642b8dfa0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4642b8dfa0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f4642b6b6d0>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f4642b6b3d0>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f4642b6b940>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f4642bedca0>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f4642bed670>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f4642bed2b0>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f4642c905e0>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f4642bedc40>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f4642baed30>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f4642baebe0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f4642baea90>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f4642baedf0>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f4642bae580>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f4642bae6a0>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f4642b836a0>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f4642b83eb0>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f4642b83fd0>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f4642b6b2e0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f4642b6be50>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f4642cf1d60>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f4642cf1e80>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f4642c90520>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f4642bae850>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f4642bed580>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f4642baeb50>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f4642b833d0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f4642b839d0>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f4642bed490>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f4642bf0310>],
             'alpha': [<numba.core.ir.Assign object at 0x7f4642c90ca0>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f4642bf0fa0>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f4642b8dd90>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f4642c66340>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f4642b8df70>,
                          <numba.core.ir.Assign object at 0x7f4642b6b910>],
             'i': [<numba.core.ir.Assign object at 0x7f4642b83190>],
             'weight': [<numba.core.ir.Assign object at 0x7f4642c90f40>,
                        <numba.core.ir.Assign object at 0x7f4642b835e0>],
             'window': [<numba.core.ir.Assign object at 0x7f4642bf01c0>]})
[2022-10-06 09:56:56] [numba.core.ssa:143 DEBUG] SSA violators {'ewma_old', 'weight'}
[2022-10-06 09:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b6bd90>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b6bd90>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b6bd90>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b6bd90>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f46147a5e20>],
             70: [<numba.core.ir.Assign object at 0x7f4642bf6ca0>]})
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6730>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6730>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6730>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 09:56:56] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6730>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bf6700>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bf6700>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bf6700>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bf6700>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f4642b8d2b0>],
             70: [<numba.core.ir.Assign object at 0x7f4642b228b0>]})
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6130>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6130>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6130>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 09:56:56] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642bf6130>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 09:56:56] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 09:56:56] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-06 09:56:56] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-06 09:56:56] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-06 09:56:56] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 09:56:56] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-06 09:56:56] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-06 09:56:56] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-06 09:56:56] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-06 09:56:56] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-06 09:56:56] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-06 09:56:56] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 09:56:56] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:56] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f46429e1940>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f4642a5f040>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f4642a62ac0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f4642a62d60>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f4642a62fa0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f4642a6b160>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f4642a6b400>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f4642a6b6d0>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f4642a6b850>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f4642a6b9a0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f4642a6be20>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f4642a75100>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f4642a755e0>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f4642a75880>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f4642a75d00>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f4642a71f10>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f4642a71f70>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f4642a716a0>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f4642a73100>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f4642a73280>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f4642a735e0>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f4642a45700>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f4642a459a0>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f4642a5f3a0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f4642a4c400>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f4642a4c6a0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f4642a4c7c0>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f4642a4cac0>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f4642a4cd60>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f4642a62940>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f4642a6bca0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f4642a75460>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f4642a71160>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f4642a71490>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f4642a45580>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f4642a4c280>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f4642a5f520>],
             'a': [<numba.core.ir.Assign object at 0x7f4642a5fb20>],
             'a.1': [<numba.core.ir.Assign object at 0x7f4642a451f0>,
                     <numba.core.ir.Assign object at 0x7f4642a71df0>],
             'b': [<numba.core.ir.Assign object at 0x7f4642a5f580>],
             'bool112': [<numba.core.ir.Assign object at 0x7f4642a62c40>],
             'bool136': [<numba.core.ir.Assign object at 0x7f4642a6bfa0>],
             'bool144': [<numba.core.ir.Assign object at 0x7f4642a75760>],
             'bool174': [<numba.core.ir.Assign object at 0x7f4642a71640>],
             'bool24': [<numba.core.ir.Assign object at 0x7f4642a45880>],
             'bool42': [<numba.core.ir.Assign object at 0x7f4642a4c580>],
             'bool50': [<numba.core.ir.Assign object at 0x7f4642a4cc40>],
             'exp': [<numba.core.ir.Assign object at 0x7f4642a45e80>,
                     <numba.core.ir.Assign object at 0x7f4642a626a0>,
                     <numba.core.ir.Assign object at 0x7f4642a71550>],
             'invert': [<numba.core.ir.Assign object at 0x7f4642a45ac0>,
                        <numba.core.ir.Assign object at 0x7f4642a62400>],
             'r': [<numba.core.ir.Assign object at 0x7f4642a5f7f0>,
                   <numba.core.ir.Assign object at 0x7f4642a75dc0>]})
[2022-10-06 09:56:56] [numba.core.ssa:143 DEBUG] SSA violators {'invert', 'exp', 'r', 'a.1'}
[2022-10-06 09:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4604491eb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f46429fb730>],
             98: [<numba.core.ir.Assign object at 0x7f46429fbdf0>]})
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 09:56:56] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46429cbf10>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f46429cbeb0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f47a46c3760>],
             98: [<numba.core.ir.Assign object at 0x7f4642b05820>],
             154: [<numba.core.ir.Assign object at 0x7f4642b0d3d0>]})
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 09:56:56] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 09:56:56] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 09:56:56] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642b050a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 09:56:56] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642b0d6a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:56] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f4642b0d4c0>],
             146: [<numba.core.ir.Assign object at 0x7f4642bbe580>]})
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:56] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:56] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:56] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 09:56:56] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 09:56:56] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:56] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 09:56:56] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 09:56:57] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 09:56:57] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:57] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-06 09:56:57] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-06 09:56:57] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 09:56:57] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:57] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:57] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4642ba63a0>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 09:56:57] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:57] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:57] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-06 09:56:57] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 09:56:57] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4642bbea30>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:57] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f4642b05250>],
             154: [<numba.core.ir.Assign object at 0x7f46044aeb80>]})
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 09:56:57] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 09:56:57] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 09:56:57] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-06 09:56:57] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 09:56:57] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 09:56:57] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 09:56:57] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 09:56:57] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 09:56:57] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 09:56:57] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f46044a5520>
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 09:56:57] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 09:56:57] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-06 09:56:57] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-06 09:56:57] [segment:50 DEBUG] consumer is running...
[2022-10-06 09:56:57] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-06T13:56:57.545053+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 6, 9, 56, 57, 544500)}, 'messageId': 'c8a559f5-a439-458f-ba42-5f3123e93deb'}
[2022-10-06 09:56:57] [segment:289 DEBUG] enqueued identify.
[2022-10-06 09:56:57] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-06 09:56:58] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 09:56:58] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 09:56:58] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 09:56:58] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 09:56:58] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-06T13:56:57.545053+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-06T09:56:57.544500"}, "messageId": "c8a559f5-a439-458f-ba42-5f3123e93deb"}], "sentAt": "2022-10-06T13:56:58.045403+00:00"}
[2022-10-06 09:56:58] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 09:56:58] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 6, 9, 56, 58, 742821)}, 'timestamp': '2022-10-06T13:56:58.742857+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '4eda469b-37be-4dde-a50d-af35065f5738'}
[2022-10-06 09:56:58] [segment:289 DEBUG] enqueued track.
[2022-10-06 09:56:59] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-06T09:56:58.742821"}, "timestamp": "2022-10-06T13:56:58.742857+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "4eda469b-37be-4dde-a50d-af35065f5738"}], "sentAt": "2022-10-06T13:56:59.069870+00:00"}
[2022-10-06 09:56:59] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 10:02:24] [segment:54 DEBUG] consumer exited.
[2022-10-06 10:04:09] [root:177 DEBUG] _________________New log started__________________
[2022-10-06 10:04:09] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-06 10:04:09] [root:125 DEBUG] Logging queue listener started!
[2022-10-06 10:04:12] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 10:04:12] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 10:04:12] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-06 10:04:12] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-06 10:04:12] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:04:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:04:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:04:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:04:12] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-06 10:04:12] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-06 10:04:12] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b021a280>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b021a280>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b021a280>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b021a280>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f74b0218a00>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f74b021a040>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f74b0218c10>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f74b0210be0>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f74b0210d60>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f74b0212040>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f74b0212a60>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f74b0210640>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f74b0214b20>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f74b0214f70>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f74b0216100>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f74b02104f0>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f74b0216160>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f74b0216280>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f74b0216a60>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f74b0216d00>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f74b0216e80>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f74b02184c0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f74b0218640>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f74b0212640>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f74b02128e0>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f74b0214280>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f74b02148e0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f74b02107c0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f74b0214ca0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f74b02167c0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f74b0218220>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f74b0212760>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f74b0214dc0>],
             'alpha': [<numba.core.ir.Assign object at 0x7f74b0212be0>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f74b0210280>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f74b021a850>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f74b02124f0>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f74b021a910>,
                          <numba.core.ir.Assign object at 0x7f74b0218b80>],
             'i': [<numba.core.ir.Assign object at 0x7f74b0216520>],
             'weight': [<numba.core.ir.Assign object at 0x7f74b0212e80>,
                        <numba.core.ir.Assign object at 0x7f74b0216f40>],
             'window': [<numba.core.ir.Assign object at 0x7f74b02103a0>]})
[2022-10-06 10:04:12] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-06 10:04:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b024ae80>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b024ae80>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b024ae80>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b024ae80>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f74b021a730>],
             70: [<numba.core.ir.Assign object at 0x7f74b01d06d0>]})
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01d08e0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01d08e0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01d08e0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01d08e0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b021af10>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b021af10>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b021af10>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b021af10>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f74b01d02e0>],
             70: [<numba.core.ir.Assign object at 0x7f74b0173340>]})
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01672b0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01672b0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01672b0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b01672b0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:04:12] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:04:12] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-06 10:04:12] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-06 10:04:12] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:04:12] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 10:04:12] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-06 10:04:12] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-06 10:04:12] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-06 10:04:12] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-06 10:04:12] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-06 10:04:12] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-06 10:04:12] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:04:12] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f74b0106fa0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f74b00f4bb0>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f74b01e3460>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f74b00fd880>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f74b00fdac0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f74b00fdc40>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f74b00fdee0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f74b00ff1f0>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f74b00ff370>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f74b00ff4c0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f74b00ff940>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f74b00ffbe0>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f74b0101100>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f74b01013a0>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f74b0101820>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f74b0101d60>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f74b0104220>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f74b0104700>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f74b0104be0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f74b0104d60>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f74b0106100>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f74b00f53d0>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f74b00f5670>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f74b00f4610>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f74b00f70d0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f74b00f7370>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f74b00f7490>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f74b00f7790>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f74b00f7a30>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f74b0167040>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f74b00ff7c0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f74b00fff40>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f74b0101be0>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f74b0104940>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f74b00f5250>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f74b00f5f10>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f74b00f4790>],
             'a': [<numba.core.ir.Assign object at 0x7f74b00f4370>],
             'a.1': [<numba.core.ir.Assign object at 0x7f74b00f4e80>,
                     <numba.core.ir.Assign object at 0x7f74b01042e0>],
             'b': [<numba.core.ir.Assign object at 0x7f74b00f4490>],
             'bool112': [<numba.core.ir.Assign object at 0x7f74b00fd640>],
             'bool136': [<numba.core.ir.Assign object at 0x7f74b00ffac0>],
             'bool144': [<numba.core.ir.Assign object at 0x7f74b0101280>],
             'bool174': [<numba.core.ir.Assign object at 0x7f74b01045e0>],
             'bool24': [<numba.core.ir.Assign object at 0x7f74b00f5550>],
             'bool42': [<numba.core.ir.Assign object at 0x7f74b00f7250>],
             'bool50': [<numba.core.ir.Assign object at 0x7f74b00f7910>],
             'exp': [<numba.core.ir.Assign object at 0x7f74b00f5b50>,
                     <numba.core.ir.Assign object at 0x7f74b01dd970>,
                     <numba.core.ir.Assign object at 0x7f74b0101e20>],
             'invert': [<numba.core.ir.Assign object at 0x7f74b00f5790>,
                        <numba.core.ir.Assign object at 0x7f74b00fd790>],
             'r': [<numba.core.ir.Assign object at 0x7f74b00f4940>,
                   <numba.core.ir.Assign object at 0x7f74b01018e0>]})
[2022-10-06 10:04:12] [numba.core.ssa:143 DEBUG] SSA violators {'exp', 'invert', 'a.1', 'r'}
[2022-10-06 10:04:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0128670>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f74b00e0ee0>],
             98: [<numba.core.ir.Assign object at 0x7f74b012da00>],
             154: [<numba.core.ir.Assign object at 0x7f74b014d910>]})
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b0124700>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b0104f40>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f74b012d430>],
             98: [<numba.core.ir.Assign object at 0x7f74b00ceeb0>]})
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b00ce520>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b00e01f0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f74b0106a30>],
             154: [<numba.core.ir.Assign object at 0x7f74b007ed90>]})
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b006e400>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f74b008b0a0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f74b007ef10>],
             146: [<numba.core.ir.Assign object at 0x7f74b002a850>]})
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:218), Var(a.1.1, numbers.py:242)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 10:04:12] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:04:12] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:04:12] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f74b009b7c0>
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 10:04:12] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 10:04:12] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 10:04:12] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:04:12] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:04:12] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:04:12] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-06 10:04:12] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-06 10:04:12] [segment:50 DEBUG] consumer is running...
[2022-10-06 10:04:12] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-06T14:04:12.688564+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 6, 10, 4, 12, 687991)}, 'messageId': '1ee372ab-d375-4c01-8562-403fb79ca0f6'}
[2022-10-06 10:04:12] [segment:289 DEBUG] enqueued identify.
[2022-10-06 10:04:13] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-06T14:04:12.688564+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-06T10:04:12.687991"}, "messageId": "1ee372ab-d375-4c01-8562-403fb79ca0f6"}], "sentAt": "2022-10-06T14:04:13.189040+00:00"}
[2022-10-06 10:04:13] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-06 10:04:13] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 10:04:13] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 10:04:13] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 10:04:13] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 10:04:13] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 10:04:14] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 6, 10, 4, 14, 46143)}, 'timestamp': '2022-10-06T14:04:14.046177+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '2a0a32b7-d1ac-46c4-9113-82bd26f6625a'}
[2022-10-06 10:04:14] [segment:289 DEBUG] enqueued track.
[2022-10-06 10:04:14] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-06T10:04:14.046143"}, "timestamp": "2022-10-06T14:04:14.046177+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "2a0a32b7-d1ac-46c4-9113-82bd26f6625a"}], "sentAt": "2022-10-06T14:04:14.100850+00:00"}
[2022-10-06 10:04:14] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 10:06:18] [segment:54 DEBUG] consumer exited.
[2022-10-06 10:06:29] [root:177 DEBUG] _________________New log started__________________
[2022-10-06 10:06:29] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-06 10:06:29] [root:125 DEBUG] Logging queue listener started!
[2022-10-06 10:06:33] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 10:06:33] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 10:06:33] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-06 10:06:33] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-06 10:06:33] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:06:33] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:06:33] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:06:33] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 10:06:33] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-06 10:06:33] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-06 10:06:33] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d3130d160>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d3130d160>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d3130d160>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d3130d160>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7f4d31386f10>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7f4d31388550>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7f4d31388130>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7f4d31380130>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7f4d313802b0>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7f4d31380550>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7f4d31380f70>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7f4d31368b50>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7f4d31384070>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7f4d313844c0>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7f4d31384610>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7f4d31368a00>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7f4d31384670>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7f4d31384790>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7f4d31384f70>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7f4d31386250>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7f4d313863d0>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7f4d313869d0>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7f4d31386b50>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7f4d31380b50>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7f4d31380df0>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7f4d31382790>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7f4d31382df0>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7f4d31368cd0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7f4d313841f0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7f4d31384cd0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7f4d31386730>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7f4d31380730>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7f4d31382c70>],
             'alpha': [<numba.core.ir.Assign object at 0x7f4d31382130>],
             'arr_in': [<numba.core.ir.Assign object at 0x7f4d31368790>],
             'arr_length': [<numba.core.ir.Assign object at 0x7f4d31388400>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7f4d31380a00>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7f4d31388970>,
                          <numba.core.ir.Assign object at 0x7f4d313880d0>],
             'i': [<numba.core.ir.Assign object at 0x7f4d31384a30>],
             'weight': [<numba.core.ir.Assign object at 0x7f4d313823d0>,
                        <numba.core.ir.Assign object at 0x7f4d31386490>],
             'window': [<numba.core.ir.Assign object at 0x7f4d313688b0>]})
[2022-10-06 10:06:33] [numba.core.ssa:143 DEBUG] SSA violators {'weight', 'ewma_old'}
[2022-10-06 10:06:33] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313b7730>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313b7730>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313b7730>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313b7730>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f4d3130d7f0>],
             70: [<numba.core.ir.Assign object at 0x7f4d3130db80>]})
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313bd3d0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313bd3d0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313bd3d0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d313bd3d0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f4d3130d0d0>],
             70: [<numba.core.ir.Assign object at 0x7f4d312dea60>]})
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight.2 = phi(incoming_values=[Var(weight, <frozen mlfinlab.util.fast_ewma>:33), Var(weight.1, <frozen mlfinlab.util.fast_ewma>:37)], incoming_blocks=[0, 70])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight.1
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3130d100>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 10:06:33] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 10:06:33] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-06 10:06:33] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-06 10:06:33] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-06 10:06:33] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 10:06:33] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-06 10:06:33] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-06 10:06:33] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-06 10:06:33] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-06 10:06:33] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-06 10:06:33] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-06 10:06:33] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 10:06:33] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7f4d312eff40>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7f4d312c13d0>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7f4d312fd970>],
             '$112pred': [<numba.core.ir.Assign object at 0x7f4d31275250>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7f4d31275490>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7f4d31275610>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7f4d312758b0>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7f4d31275b80>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7f4d31275d00>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7f4d31275e50>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7f4d31277310>],
             '$136pred': [<numba.core.ir.Assign object at 0x7f4d312775b0>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7f4d31277a90>],
             '$144pred': [<numba.core.ir.Assign object at 0x7f4d31277d30>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7f4d312791f0>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7f4d31279730>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7f4d31279bb0>],
             '$174pred': [<numba.core.ir.Assign object at 0x7f4d3127b0d0>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7f4d3127b5b0>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7f4d3127b730>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7f4d3127ba90>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7f4d312c1bb0>],
             '$24pred': [<numba.core.ir.Assign object at 0x7f4d312c1e50>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7f4d31263df0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7f4d3126d8b0>],
             '$42pred': [<numba.core.ir.Assign object at 0x7f4d3126db50>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7f4d3126dc70>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7f4d3126df70>],
             '$50pred': [<numba.core.ir.Assign object at 0x7f4d3126f250>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7f4d89b66e20>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7f4d31277190>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7f4d31277910>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7f4d312795b0>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7f4d3127b310>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7f4d312c1a30>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7f4d3126d730>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7f4d31263f70>],
             'a': [<numba.core.ir.Assign object at 0x7f4d31263b50>],
             'a.1': [<numba.core.ir.Assign object at 0x7f4d312c16a0>,
                     <numba.core.ir.Assign object at 0x7f4d31279c70>],
             'b': [<numba.core.ir.Assign object at 0x7f4d31263c70>],
             'bool112': [<numba.core.ir.Assign object at 0x7f4d31275130>],
             'bool136': [<numba.core.ir.Assign object at 0x7f4d31277490>],
             'bool144': [<numba.core.ir.Assign object at 0x7f4d31277c10>],
             'bool174': [<numba.core.ir.Assign object at 0x7f4d31279f70>],
             'bool24': [<numba.core.ir.Assign object at 0x7f4d312c1d30>],
             'bool42': [<numba.core.ir.Assign object at 0x7f4d3126da30>],
             'bool50': [<numba.core.ir.Assign object at 0x7f4d3126f130>],
             'exp': [<numba.core.ir.Assign object at 0x7f4d3126d370>,
                     <numba.core.ir.Assign object at 0x7f4d312ef160>,
                     <numba.core.ir.Assign object at 0x7f4d312797f0>],
             'invert': [<numba.core.ir.Assign object at 0x7f4d312c1f70>,
                        <numba.core.ir.Assign object at 0x7f4d31273f70>],
             'r': [<numba.core.ir.Assign object at 0x7f4d312c1160>,
                   <numba.core.ir.Assign object at 0x7f4d312792b0>]})
[2022-10-06 10:06:33] [numba.core.ssa:143 DEBUG] SSA violators {'r', 'exp', 'invert', 'a.1'}
[2022-10-06 10:06:33] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d312fd0a0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f4d31234430>],
             146: [<numba.core.ir.Assign object at 0x7f4d3123f250>]})
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3123f7f0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d3123f700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f4d3123f490>],
             98: [<numba.core.ir.Assign object at 0x7f4d311ed3a0>],
             154: [<numba.core.ir.Assign object at 0x7f4d311ede50>]})
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311df5e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311f9220>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7f4d311edd90>],
             98: [<numba.core.ir.Assign object at 0x7f4d31199a90>]})
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d3120ca60>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7f4d311a5700>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7f4d312ab2e0>],
             154: [<numba.core.ir.Assign object at 0x7f4d311591c0>]})
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 10:06:33] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 10:06:33] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 10:06:33] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 10:06:33] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 10:06:33] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 10:06:33] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 10:06:33] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 10:06:33] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7f4d311bb8e0>
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 10:06:33] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 10:06:33] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-06 10:06:34] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-06 10:06:34] [segment:50 DEBUG] consumer is running...
[2022-10-06 10:06:34] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-06T14:06:34.372406+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 6, 10, 6, 34, 371922)}, 'messageId': '1b1d5e46-10ce-4e73-a7a2-4ea32dca7e51'}
[2022-10-06 10:06:34] [segment:289 DEBUG] enqueued identify.
[2022-10-06 10:06:34] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-06T14:06:34.372406+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-06T10:06:34.371922"}, "messageId": "1b1d5e46-10ce-4e73-a7a2-4ea32dca7e51"}], "sentAt": "2022-10-06T14:06:34.872630+00:00"}
[2022-10-06 10:06:34] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-06 10:06:35] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 10:06:35] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 10:06:35] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 10:06:35] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 10:06:35] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 10:06:35] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 6, 10, 6, 35, 781187)}, 'timestamp': '2022-10-06T14:06:35.781223+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '033caabd-f4b7-4b93-8ac8-7da8e95bcf93'}
[2022-10-06 10:06:35] [segment:289 DEBUG] enqueued track.
[2022-10-06 10:06:35] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-06T10:06:35.781187"}, "timestamp": "2022-10-06T14:06:35.781223+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "033caabd-f4b7-4b93-8ac8-7da8e95bcf93"}], "sentAt": "2022-10-06T14:06:35.805434+00:00"}
[2022-10-06 10:06:35] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 10:08:42] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-06 17:21:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:21:16] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:16] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:16] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:16] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:16] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:21:22] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:22] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:22] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:22] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:22] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:21:22] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-06 17:21:25] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:25] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:25] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:25] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:25] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:21:27] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:27] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:27] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:27] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:27] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:21:38] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:38] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:38] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:38] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:38] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:21:40] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:40] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:40] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:40] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:40] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:21:42] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 17:21:42] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 17:21:42] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 17:21:42] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 17:21:42] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 17:24:38] [segment:54 DEBUG] consumer exited.
[2022-10-06 17:24:55] [root:177 DEBUG] _________________New log started__________________
[2022-10-06 17:24:55] [root:178 DEBUG] Log config file: /home/ruben/.local/lib/python3.8/site-packages/logger_tt/log_config.json
[2022-10-06 17:24:55] [root:125 DEBUG] Logging queue listener started!
[2022-10-06 17:25:25] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/builtins.pyi
[2022-10-06 17:25:27] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=30)
           2	LOAD_FAST(arg=0, lineno=30)
           4	LOAD_ATTR(arg=0, lineno=30)
           6	LOAD_CONST(arg=1, lineno=30)
           8	BINARY_SUBSCR(arg=None, lineno=30)
          10	STORE_FAST(arg=2, lineno=30)
          12	LOAD_GLOBAL(arg=1, lineno=31)
          14	LOAD_ATTR(arg=2, lineno=31)
          16	LOAD_FAST(arg=2, lineno=31)
          18	LOAD_GLOBAL(arg=3, lineno=31)
          20	LOAD_CONST(arg=2, lineno=31)
          22	CALL_FUNCTION_KW(arg=2, lineno=31)
          24	STORE_FAST(arg=3, lineno=31)
          26	LOAD_CONST(arg=3, lineno=32)
          28	LOAD_FAST(arg=1, lineno=32)
          30	LOAD_CONST(arg=4, lineno=32)
          32	BINARY_ADD(arg=None, lineno=32)
          34	BINARY_TRUE_DIVIDE(arg=None, lineno=32)
          36	STORE_FAST(arg=4, lineno=32)
          38	LOAD_CONST(arg=4, lineno=33)
          40	STORE_FAST(arg=5, lineno=33)
          42	LOAD_FAST(arg=0, lineno=34)
          44	LOAD_CONST(arg=1, lineno=34)
          46	BINARY_SUBSCR(arg=None, lineno=34)
          48	STORE_FAST(arg=6, lineno=34)
          50	LOAD_FAST(arg=6, lineno=35)
          52	LOAD_FAST(arg=3, lineno=35)
          54	LOAD_CONST(arg=1, lineno=35)
          56	STORE_SUBSCR(arg=None, lineno=35)
          58	LOAD_GLOBAL(arg=4, lineno=36)
          60	LOAD_CONST(arg=4, lineno=36)
          62	LOAD_FAST(arg=2, lineno=36)
          64	CALL_FUNCTION(arg=2, lineno=36)
          66	GET_ITER(arg=None, lineno=36)
>         68	FOR_ITER(arg=52, lineno=36)
          70	STORE_FAST(arg=7, lineno=36)
          72	LOAD_FAST(arg=5, lineno=37)
          74	LOAD_CONST(arg=4, lineno=37)
          76	LOAD_FAST(arg=4, lineno=37)
          78	BINARY_SUBTRACT(arg=None, lineno=37)
          80	LOAD_FAST(arg=7, lineno=37)
          82	BINARY_POWER(arg=None, lineno=37)
          84	INPLACE_ADD(arg=None, lineno=37)
          86	STORE_FAST(arg=5, lineno=37)
          88	LOAD_FAST(arg=6, lineno=38)
          90	LOAD_CONST(arg=4, lineno=38)
          92	LOAD_FAST(arg=4, lineno=38)
          94	BINARY_SUBTRACT(arg=None, lineno=38)
          96	BINARY_MULTIPLY(arg=None, lineno=38)
          98	LOAD_FAST(arg=0, lineno=38)
         100	LOAD_FAST(arg=7, lineno=38)
         102	BINARY_SUBSCR(arg=None, lineno=38)
         104	BINARY_ADD(arg=None, lineno=38)
         106	STORE_FAST(arg=6, lineno=38)
         108	LOAD_FAST(arg=6, lineno=39)
         110	LOAD_FAST(arg=5, lineno=39)
         112	BINARY_TRUE_DIVIDE(arg=None, lineno=39)
         114	LOAD_FAST(arg=3, lineno=39)
         116	LOAD_FAST(arg=7, lineno=39)
         118	STORE_SUBSCR(arg=None, lineno=39)
         120	JUMP_ABSOLUTE(arg=68, lineno=39)
>        122	LOAD_FAST(arg=3, lineno=41)
         124	RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=30)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=30)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=30)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$arr_in2.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=30)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=30)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$const6.2']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=STORE_FAST(arg=2, lineno=30)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$8binary_subscr.3']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=31)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_ATTR(arg=2, lineno=31)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$12load_global.4']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=31)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_GLOBAL(arg=3, lineno=31)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=31)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=CALL_FUNCTION_KW(arg=2, lineno=31)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$14load_attr.5', '$arr_length16.6', '$18load_global.7', '$const20.8']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=STORE_FAST(arg=3, lineno=31)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$22call_function_kw.9']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=32)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=32)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const26.10']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_CONST(arg=4, lineno=32)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=BINARY_ADD(arg=None, lineno=32)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$window28.11', '$const30.12']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=32)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const26.10', '$32binary_add.13']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=STORE_FAST(arg=4, lineno=32)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$34binary_true_divide.14']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=4, lineno=33)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=STORE_FAST(arg=5, lineno=33)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const38.15']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=0, lineno=34)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=34)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=BINARY_SUBSCR(arg=None, lineno=34)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$arr_in42.16', '$const44.17']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=STORE_FAST(arg=6, lineno=34)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$46binary_subscr.18']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=35)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=35)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=35)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=STORE_SUBSCR(arg=None, lineno=35)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$ewma_old50.19', '$ewma_arr52.20', '$const54.21']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=36)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=36)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=36)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=CALL_FUNCTION(arg=2, lineno=36)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$58load_global.22', '$const60.23', '$arr_length62.24']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=GET_ITER(arg=None, lineno=36)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$64call_function.25']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$66get_iter.26',), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: ['$phi68.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=FOR_ITER(arg=52, lineno=36)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi68.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=122, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=('$phi68.0', '$68for_iter.2'), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=70 nstack_initial=2)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=3, lineno=41)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=41)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$ewma_arr122.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=70 nstack_initial=2)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: ['$phi70.0', '$phi70.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=STORE_FAST(arg=7, lineno=36)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$phi70.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=5, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_CONST(arg=4, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BINARY_SUBTRACT(arg=None, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$const74.3', '$alpha76.4']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=LOAD_FAST(arg=7, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=BINARY_POWER(arg=None, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$78binary_subtract.5', '$i80.6']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=INPLACE_ADD(arg=None, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$weight72.2', '$82binary_power.7']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=STORE_FAST(arg=5, lineno=37)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$84inplace_add.8']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=6, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_CONST(arg=4, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_FAST(arg=4, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBTRACT(arg=None, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$const90.10', '$alpha92.11']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BINARY_MULTIPLY(arg=None, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old88.9', '$94binary_subtract.12']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=LOAD_FAST(arg=7, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$arr_in98.14', '$i100.15']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=BINARY_ADD(arg=None, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$96binary_multiply.13', '$102binary_subscr.16']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=STORE_FAST(arg=6, lineno=38)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$104binary_add.17']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_FAST(arg=6, lineno=39)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=LOAD_FAST(arg=5, lineno=39)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=39)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$ewma_old108.18', '$weight110.19']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_FAST(arg=3, lineno=39)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_FAST(arg=7, lineno=39)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=39)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0', '$112binary_true_divide.20', '$ewma_arr114.21', '$i116.22']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=JUMP_ABSOLUTE(arg=68, lineno=39)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$phi70.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=68, stack=('$phi70.0',), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=1)])
[2022-10-06 17:25:27] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 17:25:27] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=1): {'$phi68.0'},
             State(pc_initial=70 nstack_initial=2): {'$phi70.1'},
             State(pc_initial=122 nstack_initial=0): set()})
[2022-10-06 17:25:27] [numba.core.byteflow:189 DEBUG] defmap: {'$phi68.0': State(pc_initial=0 nstack_initial=0),
 '$phi70.1': State(pc_initial=68 nstack_initial=1)}
[2022-10-06 17:25:27] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi70.0', State(pc_initial=70 nstack_initial=2))},
             '$phi70.0': {('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 17:25:27] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi68.0', State(pc_initial=68 nstack_initial=1))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 17:25:27] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 17:25:27] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi68.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.0': {('$66get_iter.26',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi70.1': {('$68for_iter.2',
                           State(pc_initial=68 nstack_initial=1))}})
[2022-10-06 17:25:27] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi68.0': {('$66get_iter.26', State(pc_initial=0 nstack_initial=0))},
 '$phi70.1': {('$68for_iter.2', State(pc_initial=68 nstack_initial=1))}}
[2022-10-06 17:25:27] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi68.0': '$66get_iter.26'},
             State(pc_initial=68 nstack_initial=1): {'$phi70.1': '$68for_iter.2'}})
[2022-10-06 17:25:27] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arr_in2.0'}), (4, {'item': '$arr_in2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$12load_global.4'}), (14, {'item': '$12load_global.4', 'res': '$14load_attr.5'}), (16, {'res': '$arr_length16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$const20.8'}), (22, {'func': '$14load_attr.5', 'args': ['$arr_length16.6', '$18load_global.7'], 'names': '$const20.8', 'res': '$22call_function_kw.9'}), (24, {'value': '$22call_function_kw.9'}), (26, {'res': '$const26.10'}), (28, {'res': '$window28.11'}), (30, {'res': '$const30.12'}), (32, {'lhs': '$window28.11', 'rhs': '$const30.12', 'res': '$32binary_add.13'}), (34, {'lhs': '$const26.10', 'rhs': '$32binary_add.13', 'res': '$34binary_true_divide.14'}), (36, {'value': '$34binary_true_divide.14'}), (38, {'res': '$const38.15'}), (40, {'value': '$const38.15'}), (42, {'res': '$arr_in42.16'}), (44, {'res': '$const44.17'}), (46, {'index': '$const44.17', 'target': '$arr_in42.16', 'res': '$46binary_subscr.18'}), (48, {'value': '$46binary_subscr.18'}), (50, {'res': '$ewma_old50.19'}), (52, {'res': '$ewma_arr52.20'}), (54, {'res': '$const54.21'}), (56, {'target': '$ewma_arr52.20', 'index': '$const54.21', 'value': '$ewma_old50.19'}), (58, {'res': '$58load_global.22'}), (60, {'res': '$const60.23'}), (62, {'res': '$arr_length62.24'}), (64, {'func': '$58load_global.22', 'args': ['$const60.23', '$arr_length62.24'], 'res': '$64call_function.25'}), (66, {'value': '$64call_function.25', 'res': '$66get_iter.26'})), outgoing_phis={'$phi68.0': '$66get_iter.26'}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$66get_iter.26',)})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=1):
AdaptBlockInfo(insts=((68, {'iterator': '$phi68.0', 'pair': '$68for_iter.1', 'indval': '$68for_iter.2', 'pred': '$68for_iter.3'}),), outgoing_phis={'$phi70.1': '$68for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={122: (), 70: ('$phi68.0', '$68for_iter.2')})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=70 nstack_initial=2):
AdaptBlockInfo(insts=((70, {'value': '$phi70.1'}), (72, {'res': '$weight72.2'}), (74, {'res': '$const74.3'}), (76, {'res': '$alpha76.4'}), (78, {'lhs': '$const74.3', 'rhs': '$alpha76.4', 'res': '$78binary_subtract.5'}), (80, {'res': '$i80.6'}), (82, {'lhs': '$78binary_subtract.5', 'rhs': '$i80.6', 'res': '$82binary_power.7'}), (84, {'lhs': '$weight72.2', 'rhs': '$82binary_power.7', 'res': '$84inplace_add.8'}), (86, {'value': '$84inplace_add.8'}), (88, {'res': '$ewma_old88.9'}), (90, {'res': '$const90.10'}), (92, {'res': '$alpha92.11'}), (94, {'lhs': '$const90.10', 'rhs': '$alpha92.11', 'res': '$94binary_subtract.12'}), (96, {'lhs': '$ewma_old88.9', 'rhs': '$94binary_subtract.12', 'res': '$96binary_multiply.13'}), (98, {'res': '$arr_in98.14'}), (100, {'res': '$i100.15'}), (102, {'index': '$i100.15', 'target': '$arr_in98.14', 'res': '$102binary_subscr.16'}), (104, {'lhs': '$96binary_multiply.13', 'rhs': '$102binary_subscr.16', 'res': '$104binary_add.17'}), (106, {'value': '$104binary_add.17'}), (108, {'res': '$ewma_old108.18'}), (110, {'res': '$weight110.19'}), (112, {'lhs': '$ewma_old108.18', 'rhs': '$weight110.19', 'res': '$112binary_true_divide.20'}), (114, {'res': '$ewma_arr114.21'}), (116, {'res': '$i116.22'}), (118, {'target': '$ewma_arr114.21', 'index': '$i116.22', 'value': '$112binary_true_divide.20'}), (120, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: ('$phi70.0',)})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'res': '$ewma_arr122.0'}), (124, {'retval': '$ewma_arr122.0', 'castval': '$124return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.interpreter:379 DEBUG] label 0:
    arr_in = arg(0, name=arr_in)             ['arr_in']
    window = arg(1, name=window)             ['window']
    $4load_attr.1 = getattr(value=arr_in, attr=shape) ['$4load_attr.1', 'arr_in']
    $const6.2 = const(int, 0)                ['$const6.2']
    arr_length = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'arr_length']
    $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$12load_global.4']
    $14load_attr.5 = getattr(value=$12load_global.4, attr=empty) ['$12load_global.4', '$14load_attr.5']
    $18load_global.7 = global(float64: float64) ['$18load_global.7']
    ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None) ['$14load_attr.5', '$18load_global.7', 'arr_length', 'ewma_arr']
    $const26.10 = const(int, 2)              ['$const26.10']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32binary_add.13 = window + $const30.12  ['$32binary_add.13', '$const30.12', 'window']
    alpha = $const26.10 / $32binary_add.13   ['$32binary_add.13', '$const26.10', 'alpha']
    weight = const(int, 1)                   ['weight']
    $const44.17 = const(int, 0)              ['$const44.17']
    ewma_old = getitem(value=arr_in, index=$const44.17, fn=<built-in function getitem>) ['$const44.17', 'arr_in', 'ewma_old']
    $const54.21 = const(int, 0)              ['$const54.21']
    ewma_arr[$const54.21] = ewma_old         ['$const54.21', 'ewma_arr', 'ewma_old']
    $58load_global.22 = global(range: <class 'range'>) ['$58load_global.22']
    $const60.23 = const(int, 1)              ['$const60.23']
    $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None) ['$58load_global.22', '$64call_function.25', '$const60.23', 'arr_length']
    $66get_iter.26 = getiter(value=$64call_function.25) ['$64call_function.25', '$66get_iter.26']
    $phi68.0 = $66get_iter.26                ['$66get_iter.26', '$phi68.0']
    jump 68                                  []
label 68:
    $68for_iter.1 = iternext(value=$phi68.0) ['$68for_iter.1', '$phi68.0']
    $68for_iter.2 = pair_first(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.2']
    $68for_iter.3 = pair_second(value=$68for_iter.1) ['$68for_iter.1', '$68for_iter.3']
    $phi70.1 = $68for_iter.2                 ['$68for_iter.2', '$phi70.1']
    branch $68for_iter.3, 70, 122            ['$68for_iter.3']
label 70:
    i = $phi70.1                             ['$phi70.1', 'i']
    $const74.3 = const(int, 1)               ['$const74.3']
    $78binary_subtract.5 = $const74.3 - alpha ['$78binary_subtract.5', '$const74.3', 'alpha']
    $82binary_power.7 = $78binary_subtract.5 ** i ['$78binary_subtract.5', '$82binary_power.7', 'i']
    $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined) ['$82binary_power.7', '$84inplace_add.8', 'weight']
    weight = $84inplace_add.8                ['$84inplace_add.8', 'weight']
    $const90.10 = const(int, 1)              ['$const90.10']
    $94binary_subtract.12 = $const90.10 - alpha ['$94binary_subtract.12', '$const90.10', 'alpha']
    $96binary_multiply.13 = ewma_old * $94binary_subtract.12 ['$94binary_subtract.12', '$96binary_multiply.13', 'ewma_old']
    $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>) ['$102binary_subscr.16', 'arr_in', 'i']
    ewma_old = $96binary_multiply.13 + $102binary_subscr.16 ['$102binary_subscr.16', '$96binary_multiply.13', 'ewma_old']
    $112binary_true_divide.20 = ewma_old / weight ['$112binary_true_divide.20', 'ewma_old', 'weight']
    ewma_arr[i] = $112binary_true_divide.20  ['$112binary_true_divide.20', 'ewma_arr', 'i']
    jump 68                                  []
label 122:
    $124return_value.1 = cast(value=ewma_arr) ['$124return_value.1', 'ewma_arr']
    return $124return_value.1                ['$124return_value.1']

[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff863f2cf40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 68
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff863f2cf40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 70
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff863f2cf40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 122
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff863f2cf40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$102binary_subscr.16': [<numba.core.ir.Assign object at 0x7ff863f8ab50>],
             '$112binary_true_divide.20': [<numba.core.ir.Assign object at 0x7ff863f8a910>],
             '$124return_value.1': [<numba.core.ir.Assign object at 0x7ff863f8aee0>],
             '$12load_global.4': [<numba.core.ir.Assign object at 0x7ff864010310>],
             '$14load_attr.5': [<numba.core.ir.Assign object at 0x7ff864010eb0>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7ff864010550>],
             '$32binary_add.13': [<numba.core.ir.Assign object at 0x7ff863fd3820>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7ff8640105e0>],
             '$58load_global.22': [<numba.core.ir.Assign object at 0x7ff863f74760>],
             '$64call_function.25': [<numba.core.ir.Assign object at 0x7ff863f74d90>],
             '$66get_iter.26': [<numba.core.ir.Assign object at 0x7ff863f742e0>],
             '$68for_iter.1': [<numba.core.ir.Assign object at 0x7ff863f743a0>],
             '$68for_iter.2': [<numba.core.ir.Assign object at 0x7ff863f740a0>],
             '$68for_iter.3': [<numba.core.ir.Assign object at 0x7ff863f74c40>],
             '$78binary_subtract.5': [<numba.core.ir.Assign object at 0x7ff863f93520>],
             '$82binary_power.7': [<numba.core.ir.Assign object at 0x7ff863f933a0>],
             '$84inplace_add.8': [<numba.core.ir.Assign object at 0x7ff863f93280>],
             '$94binary_subtract.12': [<numba.core.ir.Assign object at 0x7ff863f8aa00>],
             '$96binary_multiply.13': [<numba.core.ir.Assign object at 0x7ff863f8a370>],
             '$const26.10': [<numba.core.ir.Assign object at 0x7ff863fd3400>],
             '$const30.12': [<numba.core.ir.Assign object at 0x7ff863fd3670>],
             '$const44.17': [<numba.core.ir.Assign object at 0x7ff863fd31c0>],
             '$const54.21': [<numba.core.ir.Assign object at 0x7ff863f74d00>],
             '$const6.2': [<numba.core.ir.Assign object at 0x7ff864010dc0>],
             '$const60.23': [<numba.core.ir.Assign object at 0x7ff863f748b0>],
             '$const74.3': [<numba.core.ir.Assign object at 0x7ff863f93ac0>],
             '$const90.10': [<numba.core.ir.Assign object at 0x7ff863f93fa0>],
             '$phi68.0': [<numba.core.ir.Assign object at 0x7ff864010070>],
             '$phi70.1': [<numba.core.ir.Assign object at 0x7ff8640143d0>],
             'alpha': [<numba.core.ir.Assign object at 0x7ff863fd39a0>],
             'arr_in': [<numba.core.ir.Assign object at 0x7ff864014d30>],
             'arr_length': [<numba.core.ir.Assign object at 0x7ff863f2c040>],
             'ewma_arr': [<numba.core.ir.Assign object at 0x7ff863fd3280>],
             'ewma_old': [<numba.core.ir.Assign object at 0x7ff863f2c4c0>,
                          <numba.core.ir.Assign object at 0x7ff863f8ae80>],
             'i': [<numba.core.ir.Assign object at 0x7ff863f93460>],
             'weight': [<numba.core.ir.Assign object at 0x7ff863fd39d0>,
                        <numba.core.ir.Assign object at 0x7ff863f93070>],
             'window': [<numba.core.ir.Assign object at 0x7ff8640146d0>]})
[2022-10-06 17:25:27] [numba.core.ssa:143 DEBUG] SSA violators {'ewma_old', 'weight'}
[2022-10-06 17:25:27] [numba.core.ssa:49 DEBUG] Fix SSA violator on var ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f8aac0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:256 DEBUG] first assign: ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f8aac0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f8aac0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f8aac0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff863f2c400>],
             70: [<numba.core.ir.Assign object at 0x7ff863f37070>]})
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f37430>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=ewma_arr[0] = ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f37430>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f37430>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$96binary_multiply.13 = ewma_old * $94binary_subtract.12
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node ewma_old.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old / weight
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='ewma_old' stmt=$112binary_true_divide.20 = ewma_old / weight
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f37430>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:49 DEBUG] Fix SSA violator on var weight
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f2cc40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:256 DEBUG] first assign: weight
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: weight = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f2cc40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f2cc40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = $84inplace_add.8
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: weight.1 = $84inplace_add.8
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f2cc40>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff863f8aac0>],
             70: [<numba.core.ir.Assign object at 0x7ff863f3d430>]})
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f42400>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_in = arg(0, name=arr_in)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: window = arg(1, name=window)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=arr_in, attr=shape)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const6.2 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: arr_length = static_getitem(value=$4load_attr.1, index=0, index_var=$const6.2, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $12load_global.4 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $14load_attr.5 = getattr(value=$12load_global.4, attr=empty)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $18load_global.7 = global(float64: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr = call $14load_attr.5(arr_length, func=$14load_attr.5, args=[Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=[('dtype', Var($18load_global.7, <frozen mlfinlab.util.fast_ewma>:31))], vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const26.10 = const(int, 2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const30.12 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $32binary_add.13 = window + $const30.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: alpha = $const26.10 / $32binary_add.13
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const44.17 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old = static_getitem(value=arr_in, index=0, index_var=$const44.17, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const54.21 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[0] = ewma_old
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $58load_global.22 = global(range: <class 'range'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const60.23 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $64call_function.25 = call $58load_global.22($const60.23, arr_length, func=$58load_global.22, args=[Var($const60.23, <frozen mlfinlab.util.fast_ewma>:36), Var(arr_length, <frozen mlfinlab.util.fast_ewma>:30)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $66get_iter.26 = getiter(value=$64call_function.25)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi68.0 = $66get_iter.26
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 68
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f42400>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.2 = phi(incoming_values=[Var(ewma_old, <frozen mlfinlab.util.fast_ewma>:34), Var(ewma_old.1, <frozen mlfinlab.util.fast_ewma>:38)], incoming_blocks=[0, 70])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.1 = iternext(value=$phi68.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.2 = pair_first(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $68for_iter.3 = pair_second(value=$68for_iter.1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $phi70.1 = $68for_iter.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $68for_iter.3, 70, 122
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 70
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f42400>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: i = $phi70.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const74.3 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $78binary_subtract.5 = $const74.3 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $82binary_power.7 = $78binary_subtract.5 ** i
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 70
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 68 from label 70
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 68
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 68
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node weight.2 = phi(incoming_values=[], incoming_blocks=[]) at 68
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def weight = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 70
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def weight.1 = $84inplace_add.8
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $84inplace_add.8 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=weight.2, rhs=$82binary_power.7, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: weight.1 = $84inplace_add.8
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const90.10 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subtract.12 = $const90.10 - alpha
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $96binary_multiply.13 = ewma_old.2 * $94binary_subtract.12
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $102binary_subscr.16 = getitem(value=arr_in, index=i, fn=<built-in function getitem>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_old.1 = $96binary_multiply.13 + $102binary_subscr.16
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='weight' stmt=$112binary_true_divide.20 = ewma_old.1 / weight
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $112binary_true_divide.20 = ewma_old.1 / weight.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: ewma_arr[i] = $112binary_true_divide.20
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 68
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 122
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff863f42400>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124return_value.1 = cast(value=ewma_arr)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $124return_value.1
[2022-10-06 17:25:27] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=217)
           2	LOAD_DEREF(arg=1, lineno=217)
           4	LOAD_CONST(arg=1, lineno=217)
           6	CALL_FUNCTION(arg=1, lineno=217)
           8	STORE_FAST(arg=2, lineno=217)
          10	LOAD_DEREF(arg=1, lineno=218)
          12	LOAD_FAST(arg=0, lineno=218)
          14	CALL_FUNCTION(arg=1, lineno=218)
          16	STORE_FAST(arg=0, lineno=218)
          18	LOAD_FAST(arg=1, lineno=219)
          20	LOAD_CONST(arg=2, lineno=219)
          22	COMPARE_OP(arg=0, lineno=219)
          24	POP_JUMP_IF_FALSE(arg=98, lineno=219)
          26	LOAD_CONST(arg=3, lineno=220)
          28	STORE_FAST(arg=3, lineno=220)
          30	LOAD_FAST(arg=1, lineno=221)
          32	UNARY_NEGATIVE(arg=None, lineno=221)
          34	STORE_FAST(arg=4, lineno=221)
          36	LOAD_FAST(arg=4, lineno=222)
          38	LOAD_CONST(arg=2, lineno=222)
          40	COMPARE_OP(arg=0, lineno=222)
          42	POP_JUMP_IF_FALSE(arg=48, lineno=222)
          44	LOAD_GLOBAL(arg=0, lineno=223)
          46	RAISE_VARARGS(arg=1, lineno=223)
>         48	LOAD_DEREF(arg=0, lineno=224)
          50	POP_JUMP_IF_FALSE(arg=106, lineno=224)
          52	LOAD_FAST(arg=0, lineno=225)
          54	LOAD_CONST(arg=2, lineno=225)
          56	COMPARE_OP(arg=2, lineno=225)
          58	POP_JUMP_IF_FALSE(arg=76, lineno=225)
          60	LOAD_DEREF(arg=2, lineno=226)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=226)
          64	LOAD_DEREF(arg=2, lineno=227)
          66	RETURN_VALUE(arg=None, lineno=227)
>         68	LOAD_GLOBAL(arg=1, lineno=229)
          70	LOAD_CONST(arg=4, lineno=229)
          72	CALL_FUNCTION(arg=1, lineno=229)
          74	RAISE_VARARGS(arg=1, lineno=229)
>         76	LOAD_FAST(arg=0, lineno=230)
          78	LOAD_CONST(arg=1, lineno=230)
          80	COMPARE_OP(arg=3, lineno=230)
          82	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          84	LOAD_FAST(arg=0, lineno=230)
          86	LOAD_CONST(arg=5, lineno=230)
          88	COMPARE_OP(arg=3, lineno=230)
          90	POP_JUMP_IF_FALSE(arg=106, lineno=230)
          92	LOAD_CONST(arg=2, lineno=231)
          94	RETURN_VALUE(arg=None, lineno=231)
          96	JUMP_FORWARD(arg=8, lineno=231)
>         98	LOAD_CONST(arg=6, lineno=233)
         100	STORE_FAST(arg=3, lineno=233)
         102	LOAD_FAST(arg=1, lineno=234)
         104	STORE_FAST(arg=4, lineno=234)
>        106	LOAD_FAST(arg=4, lineno=235)
         108	LOAD_CONST(arg=7, lineno=235)
         110	COMPARE_OP(arg=4, lineno=235)
         112	POP_JUMP_IF_FALSE(arg=130, lineno=235)
         114	LOAD_GLOBAL(arg=2, lineno=237)
         116	LOAD_METHOD(arg=3, lineno=237)
         118	LOAD_FAST(arg=0, lineno=237)
         120	LOAD_GLOBAL(arg=4, lineno=237)
         122	LOAD_FAST(arg=1, lineno=237)
         124	CALL_FUNCTION(arg=1, lineno=237)
         126	CALL_METHOD(arg=2, lineno=237)
         128	RETURN_VALUE(arg=None, lineno=237)
>        130	LOAD_FAST(arg=4, lineno=238)
         132	LOAD_CONST(arg=2, lineno=238)
         134	COMPARE_OP(arg=3, lineno=238)
         136	POP_JUMP_IF_FALSE(arg=172, lineno=238)
         138	LOAD_FAST(arg=4, lineno=239)
         140	LOAD_CONST(arg=1, lineno=239)
         142	BINARY_AND(arg=None, lineno=239)
         144	POP_JUMP_IF_FALSE(arg=154, lineno=239)
         146	LOAD_FAST(arg=2, lineno=240)
         148	LOAD_FAST(arg=0, lineno=240)
         150	INPLACE_MULTIPLY(arg=None, lineno=240)
         152	STORE_FAST(arg=2, lineno=240)
>        154	LOAD_FAST(arg=4, lineno=241)
         156	LOAD_CONST(arg=1, lineno=241)
         158	INPLACE_RSHIFT(arg=None, lineno=241)
         160	STORE_FAST(arg=4, lineno=241)
         162	LOAD_FAST(arg=0, lineno=242)
         164	LOAD_FAST(arg=0, lineno=242)
         166	INPLACE_MULTIPLY(arg=None, lineno=242)
         168	STORE_FAST(arg=0, lineno=242)
         170	JUMP_ABSOLUTE(arg=130, lineno=242)
>        172	LOAD_FAST(arg=3, lineno=244)
         174	POP_JUMP_IF_FALSE(arg=184, lineno=244)
         176	LOAD_CONST(arg=8, lineno=244)
         178	LOAD_FAST(arg=2, lineno=244)
         180	BINARY_TRUE_DIVIDE(arg=None, lineno=244)
         182	RETURN_VALUE(arg=None, lineno=244)
>        184	LOAD_FAST(arg=2, lineno=244)
         186	RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=217)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=217)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=217)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=217)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$2load_deref.0', '$const4.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=STORE_FAST(arg=2, lineno=217)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$6call_function.2']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=218)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=218)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=218)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$10load_deref.3', '$a12.4']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=STORE_FAST(arg=0, lineno=218)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$14call_function.5']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=219)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=219)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$b18.6']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=219)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$b18.6', '$const20.7']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=98, lineno=219)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$22compare_op.8']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=220)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=STORE_FAST(arg=3, lineno=220)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const26.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=221)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=221)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$b30.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=STORE_FAST(arg=4, lineno=221)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$32unary_negative.2']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=222)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=222)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=222)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp36.3', '$const38.4']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=48, lineno=222)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$40compare_op.5']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=233)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=STORE_FAST(arg=3, lineno=233)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const98.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=234)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=STORE_FAST(arg=4, lineno=234)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$b102.1']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=223)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=223)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$44load_global.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=224)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=106, lineno=224)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$48load_deref.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=235)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=235)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=235)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp106.0', '$const108.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=130, lineno=235)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$110compare_op.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=225)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=225)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a52.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=225)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a52.0', '$const54.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=76, lineno=225)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$56compare_op.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$114load_global.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$116load_method.1', '$a118.2', '$124call_function.5']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=237)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$126call_method.6']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=238)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=238)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=238)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp130.0', '$const132.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=172, lineno=238)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$134compare_op.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=226)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=226)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$60load_deref.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a76.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a76.0', '$const78.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$80compare_op.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=239)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=239)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=142, inst=BINARY_AND(arg=None, lineno=239)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp138.0', '$const140.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=154, lineno=239)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$142binary_and.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=172, inst=LOAD_FAST(arg=3, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=174, inst=POP_JUMP_IF_FALSE(arg=184, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$invert172.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=184, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=227)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=227)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$64load_deref.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=229)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=229)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=229)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$68load_global.0', '$const70.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=229)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$72call_function.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a84.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a84.0', '$const86.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=106, lineno=230)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$88compare_op.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=106, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=240)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=240)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$r146.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=240)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$r146.0', '$a148.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=152, inst=STORE_FAST(arg=2, lineno=240)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$150inplace_multiply.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=241)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=241)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=241)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$exp154.0', '$const156.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=160, inst=STORE_FAST(arg=4, lineno=241)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$158inplace_rshift.2']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=242)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a162.3']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=242)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$a162.3', '$a164.4']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=168, inst=STORE_FAST(arg=0, lineno=242)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$166inplace_multiply.5']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=170, inst=JUMP_ABSOLUTE(arg=130, lineno=242)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=130, stack=(), blockstack=(), npush=0)]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=176, inst=LOAD_CONST(arg=8, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=178, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const176.0']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=180, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const176.0', '$r178.1']
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=182, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$180binary_true_divide.2']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=186, inst=RETURN_VALUE(arg=None, lineno=244)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$r184.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=231)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:27] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=231)
[2022-10-06 17:25:27] [numba.core.byteflow:263 DEBUG] stack ['$const92.0']
[2022-10-06 17:25:27] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=130 nstack_initial=0)])
[2022-10-06 17:25:27] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 17:25:27] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set()})
[2022-10-06 17:25:27] [numba.core.byteflow:189 DEBUG] defmap: {}
[2022-10-06 17:25:27] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>, {})
[2022-10-06 17:25:27] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>, {})
[2022-10-06 17:25:27] [numba.core.byteflow:220 DEBUG] keep phismap: {}
[2022-10-06 17:25:27] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>, {})
[2022-10-06 17:25:27] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 106: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 106: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 106: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 172: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={130: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$invert172.0'}), (174, {'pred': '$invert172.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 184: ()})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0'}), (178, {'res': '$r178.1'}), (180, {'lhs': '$const176.0', 'rhs': '$r178.1', 'res': '$180binary_true_divide.2'}), (182, {'retval': '$180binary_true_divide.2', 'castval': '$182return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'res': '$r184.0'}), (186, {'retval': '$r184.0', 'castval': '$186return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:27] [numba.core.interpreter:379 DEBUG] label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 106                  ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:225),), kws=(), vararg=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:226),), kws=(), vararg=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:229)], kws=(), vararg=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 106                  ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:230),), kws=(), vararg=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 106                  ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 172                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    jump 130                                 []
label 172:
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None) ['$174pred', 'bool174', 'invert']
    branch $174pred, 176, 184                ['$174pred']
label 176:
    $const176.0 = const(float, 1.0)          ['$const176.0']
    $180binary_true_divide.2 = $const176.0 / r ['$180binary_true_divide.2', '$const176.0', 'r']
    $182return_value.3 = cast(value=$180binary_true_divide.2) ['$180binary_true_divide.2', '$182return_value.3']
    return $182return_value.3                ['$182return_value.3']
label 184:
    $186return_value.1 = cast(value=r)       ['$186return_value.1', 'r']
    return $186return_value.1                ['$186return_value.1']

[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff834663910>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [<numba.core.ir.Assign object at 0x7ff8345d9850>],
             '$110compare_op.2': [<numba.core.ir.Assign object at 0x7ff834650af0>],
             '$112pred': [<numba.core.ir.Assign object at 0x7ff834650d90>],
             '$114load_global.0': [<numba.core.ir.Assign object at 0x7ff834650fd0>],
             '$116load_method.1': [<numba.core.ir.Assign object at 0x7ff83465b190>],
             '$120load_global.3': [<numba.core.ir.Assign object at 0x7ff83465b430>],
             '$124call_function.5': [<numba.core.ir.Assign object at 0x7ff83465b700>],
             '$126call_method.6': [<numba.core.ir.Assign object at 0x7ff83465b880>],
             '$128return_value.7': [<numba.core.ir.Assign object at 0x7ff83465b9d0>],
             '$134compare_op.2': [<numba.core.ir.Assign object at 0x7ff83465be50>],
             '$136pred': [<numba.core.ir.Assign object at 0x7ff834659130>],
             '$142binary_and.2': [<numba.core.ir.Assign object at 0x7ff834659610>],
             '$144pred': [<numba.core.ir.Assign object at 0x7ff8346598b0>],
             '$150inplace_multiply.2': [<numba.core.ir.Assign object at 0x7ff834659d30>],
             '$158inplace_rshift.2': [<numba.core.ir.Assign object at 0x7ff8346612b0>],
             '$166inplace_multiply.5': [<numba.core.ir.Assign object at 0x7ff834661730>],
             '$174pred': [<numba.core.ir.Assign object at 0x7ff834661c10>],
             '$180binary_true_divide.2': [<numba.core.ir.Assign object at 0x7ff834663130>],
             '$182return_value.3': [<numba.core.ir.Assign object at 0x7ff8346632b0>],
             '$186return_value.1': [<numba.core.ir.Assign object at 0x7ff834663610>],
             '$22compare_op.8': [<numba.core.ir.Assign object at 0x7ff83464d070>],
             '$24pred': [<numba.core.ir.Assign object at 0x7ff83464d310>],
             '$2load_deref.0': [<numba.core.ir.Assign object at 0x7ff8345d92b0>],
             '$40compare_op.5': [<numba.core.ir.Assign object at 0x7ff83464dd30>],
             '$42pred': [<numba.core.ir.Assign object at 0x7ff83464dfd0>],
             '$44load_global.0': [<numba.core.ir.Assign object at 0x7ff834646130>],
             '$48load_deref.0': [<numba.core.ir.Assign object at 0x7ff834646430>],
             '$50pred': [<numba.core.ir.Assign object at 0x7ff8346466d0>],
             '$const108.1': [<numba.core.ir.Assign object at 0x7ff834650970>],
             '$const132.1': [<numba.core.ir.Assign object at 0x7ff83465bcd0>],
             '$const140.1': [<numba.core.ir.Assign object at 0x7ff834659490>],
             '$const156.1': [<numba.core.ir.Assign object at 0x7ff834661130>],
             '$const176.0': [<numba.core.ir.Assign object at 0x7ff834661e50>],
             '$const20.7': [<numba.core.ir.Assign object at 0x7ff8345d9eb0>],
             '$const38.4': [<numba.core.ir.Assign object at 0x7ff83464dbb0>],
             '$const4.1': [<numba.core.ir.Assign object at 0x7ff8345d9430>],
             'a': [<numba.core.ir.Assign object at 0x7ff8345e4fd0>],
             'a.1': [<numba.core.ir.Assign object at 0x7ff8345d9b20>,
                     <numba.core.ir.Assign object at 0x7ff8346617f0>],
             'b': [<numba.core.ir.Assign object at 0x7ff8345d9130>],
             'bool112': [<numba.core.ir.Assign object at 0x7ff834650c70>],
             'bool136': [<numba.core.ir.Assign object at 0x7ff83465bfd0>],
             'bool144': [<numba.core.ir.Assign object at 0x7ff834659790>],
             'bool174': [<numba.core.ir.Assign object at 0x7ff834661af0>],
             'bool24': [<numba.core.ir.Assign object at 0x7ff83464d1f0>],
             'bool42': [<numba.core.ir.Assign object at 0x7ff83464deb0>],
             'bool50': [<numba.core.ir.Assign object at 0x7ff8346465b0>],
             'exp': [<numba.core.ir.Assign object at 0x7ff83464d7f0>,
                     <numba.core.ir.Assign object at 0x7ff8346506d0>,
                     <numba.core.ir.Assign object at 0x7ff834661370>],
             'invert': [<numba.core.ir.Assign object at 0x7ff83464d430>,
                        <numba.core.ir.Assign object at 0x7ff834650430>],
             'r': [<numba.core.ir.Assign object at 0x7ff8345d95e0>,
                   <numba.core.ir.Assign object at 0x7ff834659df0>]})
[2022-10-06 17:25:27] [numba.core.ssa:143 DEBUG] SSA violators {'r', 'exp', 'invert', 'a.1'}
[2022-10-06 17:25:27] [numba.core.ssa:49 DEBUG] Fix SSA violator on var r
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:256 DEBUG] first assign: r
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff863f37040>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff834663910>],
             146: [<numba.core.ir.Assign object at 0x7ff83448d160>]})
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:217)], incoming_blocks=[106])
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 146
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$180binary_true_divide.2 = $const176.0 / r
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 176
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 172 from label 176
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83448d700>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='r' stmt=$186return_value.1 = cast(value=r)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 184
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 172 from label 184
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 172
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $186return_value.1 = cast(value=r.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:49 DEBUG] Fix SSA violator on var exp
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:256 DEBUG] first assign: exp
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = b
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: exp.1 = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: exp.2 = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83448d610>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ff864023880>],
             98: [<numba.core.ir.Assign object at 0x7ff834420340>],
             154: [<numba.core.ir.Assign object at 0x7ff834420d30>]})
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def exp.1 = b
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def exp.2 = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8344014c0>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:49 DEBUG] Fix SSA violator on var invert
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:256 DEBUG] first assign: invert
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: invert.1 = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83443a100>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7ff834420f10>],
             98: [<numba.core.ir.Assign object at 0x7ff8343eb940>]})
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='invert' stmt=$174pred = call bool174(invert, func=bool174, args=(Var(invert, numbers.py:220),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 172
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 172
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 106 from label 130
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 48
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 48
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 26 from label 48
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 26
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 98
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def invert.1 = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff8343d7b80>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:49 DEBUG] Fix SSA violator on var a.1
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:256 DEBUG] first assign: a.1
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: a.1.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FreshVarHandler object at 0x7ff83434b670>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [numba.core.ssa:55 DEBUG] Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7ff83434b4c0>],
             154: [<numba.core.ir.Assign object at 0x7ff8343ac070>]})
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 0
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a = arg(0, name=a)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: b = arg(1, name=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $2load_deref.0 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const4.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $10load_deref.3 = freevar(tp: float64)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const20.7 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $22compare_op.8 = b < $const20.7
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool24 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:219),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $24pred, 26, 98
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 26
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert = const(bool, True)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp = unary(fn=<built-in function neg>, value=b)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const38.4 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $40compare_op.5 = exp < $const38.4
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool42 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:222),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $42pred, 44, 48
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 44
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: <static> raise <class 'OverflowError'>
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 48
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $48load_deref.0 = freevar(is_integer: False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool50 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:224),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 98
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert.1 = const(bool, False)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.1 = b
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 106
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 106
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:220), Var(invert.1, numbers.py:233)], incoming_blocks=[48, 98])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.3 = phi(incoming_values=[Var(exp, numbers.py:221), Var(exp.1, numbers.py:234)], incoming_blocks=[48, 98])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const108.1 = const(int, 65536)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $110compare_op.2 = exp.3 > $const108.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool112 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:235),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $112pred, 114, 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 114
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $114load_global.0 = global(math: <module 'math' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/lib-dynload/math.cpython-38-x86_64-linux-gnu.so'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $120load_global.3 = global(float: <class 'float'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:218), Var($124call_function.5, numbers.py:237)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 114
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 106 from label 114
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $128return_value.7 = cast(value=$126call_method.6)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $128return_value.7
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 130
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.4 = phi(incoming_values=[Var(exp.3, numbers.py:235), Var(exp.2, numbers.py:241)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:217), Var(r.3, numbers.py:240)], incoming_blocks=[106, 154])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const132.1 = const(int, 0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $134compare_op.2 = exp.4 != $const132.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool136 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:238),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $136pred, 138, 172
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 138
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const140.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $142binary_and.2 = exp.4 & $const140.1
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool144 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:239),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $144pred, 146, 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 146
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 146
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 138 from label 146
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 130
[2022-10-06 17:25:27] [numba.core.ssa:380 DEBUG] insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 130
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 106
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 106
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 0 from label 106
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 0
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:217)], kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 154
[2022-10-06 17:25:27] [numba.core.ssa:388 DEBUG] incoming_def a.1.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.1 = $150inplace_multiply.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 154
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 154
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:240), Var(r.1, numbers.py:240)], incoming_blocks=[138, 146])
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const156.1 = const(int, 1)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: exp.2 = $158inplace_rshift.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:332 DEBUG] find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 154
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 138 from label 154
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 138
[2022-10-06 17:25:27] [numba.core.ssa:363 DEBUG] find_def_from_top label 138
[2022-10-06 17:25:27] [numba.core.ssa:400 DEBUG] idom 130 from label 138
[2022-10-06 17:25:27] [numba.core.ssa:406 DEBUG] find_def_from_bottom label 130
[2022-10-06 17:25:27] [numba.core.ssa:186 DEBUG] replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: a.1.1 = $166inplace_multiply.5
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: jump 130
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 172
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: bool174 = global(bool: <class 'bool'>)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $174pred = call bool174(invert.2, func=bool174, args=(Var(invert.2, numbers.py:244),), kws=(), vararg=None)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: branch $174pred, 176, 184
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 176
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $const176.0 = const(float, 1.0)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $180binary_true_divide.2 = $const176.0 / r.2
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $182return_value.3 = cast(value=$180binary_true_divide.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $182return_value.3
[2022-10-06 17:25:27] [numba.core.ssa:157 DEBUG] ==== SSA block rewrite pass on 184
[2022-10-06 17:25:27] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._FixSSAVars object at 0x7ff83436f790>
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: $186return_value.1 = cast(value=r.2)
[2022-10-06 17:25:27] [numba.core.ssa:180 DEBUG] on stmt: return $186return_value.1
[2022-10-06 17:25:27] [getmac:217 DEBUG] Raw MAC found: 24:4b:fe:98:1a:36

[2022-10-06 17:25:27] [charset_normalizer:422 DEBUG] Encoding detection: ascii is most likely the one.
[2022-10-06 17:25:27] [segment:50 DEBUG] consumer is running...
[2022-10-06 17:25:27] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'timestamp': '2022-10-06T21:25:27.847591+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'type': 'identify', 'userId': '24:4b:fe:98:1a:36', 'traits': {'mac_address': '24:4b:fe:98:1a:36', 'api_key': '0800b4ea410a702acddefdec86f93523', 'IP': '97.100.230.56', 'created_at': datetime.datetime(2022, 10, 6, 17, 25, 27, 846972)}, 'messageId': '86b61a85-3703-479c-8b96-c04aed7fccdf'}
[2022-10-06 17:25:27] [segment:289 DEBUG] enqueued identify.
[2022-10-06 17:25:28] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "timestamp": "2022-10-06T21:25:27.847591+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "type": "identify", "userId": "24:4b:fe:98:1a:36", "traits": {"mac_address": "24:4b:fe:98:1a:36", "api_key": "0800b4ea410a702acddefdec86f93523", "IP": "97.100.230.56", "created_at": "2022-10-06T17:25:27.846972"}, "messageId": "86b61a85-3703-479c-8b96-c04aed7fccdf"}], "sentAt": "2022-10-06T21:25:28.347711+00:00"}
[2022-10-06 17:25:28] [tensorflow:32 DEBUG] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
[2022-10-06 17:25:28] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 17:25:28] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 17:25:28] [h5py._conv:47 DEBUG] Creating converter from 7 to 5
[2022-10-06 17:25:28] [h5py._conv:47 DEBUG] Creating converter from 5 to 7
[2022-10-06 17:25:28] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 17:25:29] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 6, 17, 25, 29, 950562)}, 'timestamp': '2022-10-06T21:25:29.950600+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'Import', 'messageId': '2e820bb7-135a-412c-ad5e-c34ca774854b'}
[2022-10-06 17:25:29] [segment:289 DEBUG] enqueued track.
[2022-10-06 17:25:30] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=468)
           2	LOAD_GLOBAL(arg=0, lineno=468)
           4	LOAD_ATTR(arg=1, lineno=468)
           6	LOAD_FAST(arg=1, lineno=468)
           8	LOAD_ATTR(arg=2, lineno=468)
          10	LOAD_CONST(arg=1, lineno=468)
          12	BINARY_SUBSCR(arg=None, lineno=468)
          14	LOAD_FAST(arg=0, lineno=468)
          16	LOAD_ATTR(arg=2, lineno=468)
          18	LOAD_CONST(arg=2, lineno=468)
          20	BINARY_SUBSCR(arg=None, lineno=468)
          22	BUILD_TUPLE(arg=2, lineno=468)
          24	LOAD_GLOBAL(arg=0, lineno=468)
          26	LOAD_ATTR(arg=3, lineno=468)
          28	LOAD_CONST(arg=3, lineno=468)
          30	CALL_FUNCTION_KW(arg=2, lineno=468)
          32	STORE_FAST(arg=5, lineno=468)
          34	LOAD_GLOBAL(arg=4, lineno=469)
          36	LOAD_FAST(arg=0, lineno=469)
          38	LOAD_ATTR(arg=2, lineno=469)
          40	LOAD_CONST(arg=2, lineno=469)
          42	BINARY_SUBSCR(arg=None, lineno=469)
          44	CALL_FUNCTION(arg=1, lineno=469)
          46	GET_ITER(arg=None, lineno=469)
>         48	FOR_ITER(arg=48, lineno=469)
          50	STORE_FAST(arg=6, lineno=469)
          52	LOAD_GLOBAL(arg=5, lineno=470)
          54	LOAD_FAST(arg=0, lineno=470)
          56	LOAD_CONST(arg=4, lineno=470)
          58	LOAD_CONST(arg=4, lineno=470)
          60	BUILD_SLICE(arg=2, lineno=470)
          62	LOAD_FAST(arg=6, lineno=470)
          64	BUILD_TUPLE(arg=2, lineno=470)
          66	BINARY_SUBSCR(arg=None, lineno=470)
          68	LOAD_FAST(arg=1, lineno=470)
          70	LOAD_FAST(arg=2, lineno=470)
          72	LOAD_FAST(arg=3, lineno=470)
          74	BUILD_TUPLE(arg=4, lineno=470)
          76	LOAD_FAST(arg=4, lineno=470)
          78	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
          80	CALL_FUNCTION_EX(arg=0, lineno=470)
          82	LOAD_FAST(arg=5, lineno=470)
          84	LOAD_CONST(arg=4, lineno=470)
          86	LOAD_CONST(arg=4, lineno=470)
          88	BUILD_SLICE(arg=2, lineno=470)
          90	LOAD_FAST(arg=6, lineno=470)
          92	BUILD_TUPLE(arg=2, lineno=470)
          94	STORE_SUBSCR(arg=None, lineno=470)
          96	JUMP_ABSOLUTE(arg=48, lineno=470)
>         98	LOAD_FAST(arg=5, lineno=471)
         100	RETURN_VALUE(arg=None, lineno=471)
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=2, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$arr14.6']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=BUILD_TUPLE(arg=2, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$20binary_subscr.9']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=0, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_ATTR(arg=3, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$24load_global.11']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION_KW(arg=2, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$22build_tuple.10', '$26load_attr.12', '$const28.13']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=STORE_FAST(arg=5, lineno=468)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$30call_function_kw.14']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=LOAD_GLOBAL(arg=4, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=LOAD_ATTR(arg=2, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$arr36.16']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$38load_attr.17', '$const40.18']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=CALL_FUNCTION(arg=1, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$34load_global.15', '$42binary_subscr.19']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=GET_ITER(arg=None, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$44call_function.20']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$46get_iter.21',), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: ['$phi48.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=FOR_ITER(arg=48, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi48.0']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=98, stack=(), blockstack=(), npush=0), Edge(pc=50, stack=('$phi48.0', '$48for_iter.2'), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=50 nstack_initial=2)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=5, lineno=471)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=471)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$out98.0']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=50 nstack_initial=2)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: ['$phi50.0', '$phi50.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=STORE_FAST(arg=6, lineno=469)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$phi50.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=LOAD_GLOBAL(arg=5, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=LOAD_FAST(arg=0, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$const56.4', '$const58.5']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$60build_slice.7', '$col62.8']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$arr54.3', '$64build_tuple.9']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=LOAD_FAST(arg=1, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=LOAD_FAST(arg=2, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_FAST(arg=3, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=BUILD_TUPLE(arg=4, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=4, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$74build_tuple.14', '$args76.15']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=CALL_FUNCTION_EX(arg=0, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$52load_global.2', '$78build_tuple_unpack_with_call.16']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_CONST(arg=4, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=BUILD_SLICE(arg=2, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$const84.19', '$const86.20']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=6, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_TUPLE(arg=2, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$88build_slice.22', '$col90.23']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=STORE_SUBSCR(arg=None, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0', '$80call_function_ex.17', '$out82.18', '$92build_tuple.24']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=JUMP_ABSOLUTE(arg=48, lineno=470)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi50.0']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=48, stack=('$phi50.0',), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=48 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 17:25:30] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=1): {'$phi48.0'},
             State(pc_initial=50 nstack_initial=2): {'$phi50.1'},
             State(pc_initial=98 nstack_initial=0): set()})
[2022-10-06 17:25:30] [numba.core.byteflow:189 DEBUG] defmap: {'$phi48.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.1': State(pc_initial=48 nstack_initial=1)}
[2022-10-06 17:25:30] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=2))},
             '$phi50.0': {('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-06 17:25:30] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-06 17:25:30] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-06 17:25:30] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi48.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$46get_iter.21',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi50.1': {('$48for_iter.2',
                           State(pc_initial=48 nstack_initial=1))}})
[2022-10-06 17:25:30] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi48.0': {('$46get_iter.21', State(pc_initial=0 nstack_initial=0))},
 '$phi50.1': {('$48for_iter.2', State(pc_initial=48 nstack_initial=1))}}
[2022-10-06 17:25:30] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi48.0': '$46get_iter.21'},
             State(pc_initial=48 nstack_initial=1): {'$phi50.1': '$48for_iter.2'}})
[2022-10-06 17:25:30] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$arr14.6'}), (16, {'item': '$arr14.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$16load_attr.7', 'res': '$20binary_subscr.9'}), (22, {'items': ['$12binary_subscr.5', '$20binary_subscr.9'], 'res': '$22build_tuple.10'}), (24, {'res': '$24load_global.11'}), (26, {'item': '$24load_global.11', 'res': '$26load_attr.12'}), (28, {'res': '$const28.13'}), (30, {'func': '$4load_attr.1', 'args': ['$22build_tuple.10', '$26load_attr.12'], 'names': '$const28.13', 'res': '$30call_function_kw.14'}), (32, {'value': '$30call_function_kw.14'}), (34, {'res': '$34load_global.15'}), (36, {'res': '$arr36.16'}), (38, {'item': '$arr36.16', 'res': '$38load_attr.17'}), (40, {'res': '$const40.18'}), (42, {'index': '$const40.18', 'target': '$38load_attr.17', 'res': '$42binary_subscr.19'}), (44, {'func': '$34load_global.15', 'args': ['$42binary_subscr.19'], 'res': '$44call_function.20'}), (46, {'value': '$44call_function.20', 'res': '$46get_iter.21'})), outgoing_phis={'$phi48.0': '$46get_iter.21'}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$46get_iter.21',)})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'iterator': '$phi48.0', 'pair': '$48for_iter.1', 'indval': '$48for_iter.2', 'pred': '$48for_iter.3'}),), outgoing_phis={'$phi50.1': '$48for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: (), 50: ('$phi48.0', '$48for_iter.2')})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=50 nstack_initial=2):
AdaptBlockInfo(insts=((50, {'value': '$phi50.1'}), (52, {'res': '$52load_global.2'}), (54, {'res': '$arr54.3'}), (56, {'res': '$const56.4'}), (58, {'res': '$const58.5'}), (60, {'start': '$const56.4', 'stop': '$const58.5', 'step': None, 'res': '$60build_slice.7', 'slicevar': '$60build_slice.6'}), (62, {'res': '$col62.8'}), (64, {'items': ['$60build_slice.7', '$col62.8'], 'res': '$64build_tuple.9'}), (66, {'index': '$64build_tuple.9', 'target': '$arr54.3', 'res': '$66binary_subscr.10'}), (68, {'res': '$range_starts68.11'}), (70, {'res': '$range_ends70.12'}), (72, {'res': '$reduce_func_nb72.13'}), (74, {'items': ['$66binary_subscr.10', '$range_starts68.11', '$range_ends70.12', '$reduce_func_nb72.13'], 'res': '$74build_tuple.14'}), (76, {'res': '$args76.15'}), (78, {'tuples': ['$74build_tuple.14', '$args76.15'], 'temps': ['$78build_tuple_unpack_with_call.16'], 'is_assign': False}), (80, {'func': '$52load_global.2', 'vararg': '$78build_tuple_unpack_with_call.16', 'res': '$80call_function_ex.17'}), (82, {'res': '$out82.18'}), (84, {'res': '$const84.19'}), (86, {'res': '$const86.20'}), (88, {'start': '$const84.19', 'stop': '$const86.20', 'step': None, 'res': '$88build_slice.22', 'slicevar': '$88build_slice.21'}), (90, {'res': '$col90.23'}), (92, {'items': ['$88build_slice.22', '$col90.23'], 'res': '$92build_tuple.24'}), (94, {'target': '$out82.18', 'index': '$92build_tuple.24', 'value': '$80call_function_ex.17'}), (96, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: ('$phi50.0',)})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$out98.0'}), (100, {'retval': '$out98.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:30] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $16load_attr.7 = getattr(value=arr, attr=shape) ['$16load_attr.7', 'arr']
    $const18.8 = const(int, 1)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=$16load_attr.7, index=$const18.8, fn=<built-in function getitem>) ['$16load_attr.7', '$20binary_subscr.9', '$const18.8']
    $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)]) ['$12binary_subscr.5', '$20binary_subscr.9', '$22build_tuple.10']
    $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$24load_global.11']
    $26load_attr.12 = getattr(value=$24load_global.11, attr=float_) ['$24load_global.11', '$26load_attr.12']
    out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None) ['$22build_tuple.10', '$26load_attr.12', '$4load_attr.1', 'out']
    $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>) ['$34load_global.15']
    $38load_attr.17 = getattr(value=arr, attr=shape) ['$38load_attr.17', 'arr']
    $const40.18 = const(int, 1)              ['$const40.18']
    $42binary_subscr.19 = getitem(value=$38load_attr.17, index=$const40.18, fn=<built-in function getitem>) ['$38load_attr.17', '$42binary_subscr.19', '$const40.18']
    $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None) ['$34load_global.15', '$42binary_subscr.19', '$44call_function.20']
    $46get_iter.21 = getiter(value=$44call_function.20) ['$44call_function.20', '$46get_iter.21']
    $phi48.0 = $46get_iter.21                ['$46get_iter.21', '$phi48.0']
    jump 48                                  []
label 48:
    $48for_iter.1 = iternext(value=$phi48.0) ['$48for_iter.1', '$phi48.0']
    $48for_iter.2 = pair_first(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.2']
    $48for_iter.3 = pair_second(value=$48for_iter.1) ['$48for_iter.1', '$48for_iter.3']
    $phi50.1 = $48for_iter.2                 ['$48for_iter.2', '$phi50.1']
    branch $48for_iter.3, 50, 98             ['$48for_iter.3']
label 50:
    col = $phi50.1                           ['$phi50.1', 'col']
    $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7ff874cc6d30>)) ['$52load_global.2']
    $const56.4 = const(NoneType, None)       ['$const56.4']
    $const58.5 = const(NoneType, None)       ['$const58.5']
    $60build_slice.6 = global(slice: <class 'slice'>) ['$60build_slice.6']
    $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None) ['$60build_slice.6', '$60build_slice.7', '$const56.4', '$const58.5']
    $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$60build_slice.7', '$64build_tuple.9', 'col']
    $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>) ['$64build_tuple.9', '$66binary_subscr.10', 'arr']
    $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)]) ['$66binary_subscr.10', '$74build_tuple.14', 'range_ends', 'range_starts', 'reduce_func_nb']
    $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args ['$74build_tuple.14', '$78build_tuple_unpack_with_call.16', 'args']
    $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16) ['$52load_global.2', '$78build_tuple_unpack_with_call.16', '$80call_function_ex.17']
    $const84.19 = const(NoneType, None)      ['$const84.19']
    $const86.20 = const(NoneType, None)      ['$const86.20']
    $88build_slice.21 = global(slice: <class 'slice'>) ['$88build_slice.21']
    $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None) ['$88build_slice.21', '$88build_slice.22', '$const84.19', '$const86.20']
    $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)]) ['$88build_slice.22', '$92build_tuple.24', 'col']
    out[$92build_tuple.24] = $80call_function_ex.17 ['$80call_function_ex.17', '$92build_tuple.24', 'out']
    jump 48                                  []
label 98:
    $100return_value.1 = cast(value=out)     ['$100return_value.1', 'out']
    return $100return_value.1                ['$100return_value.1']

[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67d4b80>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=arr, attr=shape)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const18.8 = const(int, 1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $20binary_subscr.9 = static_getitem(value=$16load_attr.7, index=1, index_var=$const18.8, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $22build_tuple.10 = build_tuple(items=[Var($12binary_subscr.5, apply_reduce.py:468), Var($20binary_subscr.9, apply_reduce.py:468)])
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.11 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $26load_attr.12 = getattr(value=$24load_global.11, attr=float_)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($22build_tuple.10, func=$4load_attr.1, args=[Var($22build_tuple.10, apply_reduce.py:468)], kws=[('dtype', Var($26load_attr.12, apply_reduce.py:468))], vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $34load_global.15 = global(prange: <class 'numba.misc.special.prange'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $38load_attr.17 = getattr(value=arr, attr=shape)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const40.18 = const(int, 1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $42binary_subscr.19 = static_getitem(value=$38load_attr.17, index=1, index_var=$const40.18, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $44call_function.20 = call $34load_global.15($42binary_subscr.19, func=$34load_global.15, args=[Var($42binary_subscr.19, apply_reduce.py:469)], kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $46get_iter.21 = getiter(value=$44call_function.20)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $phi48.0 = $46get_iter.21
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 48
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67d4b80>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.1 = iternext(value=$phi48.0)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.2 = pair_first(value=$48for_iter.1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $48for_iter.3 = pair_second(value=$48for_iter.1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $phi50.1 = $48for_iter.2
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: branch $48for_iter.3, 50, 98
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 50
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67d4b80>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: col = $phi50.1
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $52load_global.2 = global(reduce_index_ranges_1d_nb: CPUDispatcher(<function reduce_index_ranges_1d_nb at 0x7ff874cc6d30>))
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const56.4 = const(NoneType, None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const58.5 = const(NoneType, None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.6 = global(slice: <class 'slice'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $60build_slice.7 = call $60build_slice.6($const56.4, $const58.5, func=$60build_slice.6, args=(Var($const56.4, apply_reduce.py:470), Var($const58.5, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $64build_tuple.9 = build_tuple(items=[Var($60build_slice.7, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $66binary_subscr.10 = getitem(value=arr, index=$64build_tuple.9, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $74build_tuple.14 = build_tuple(items=[Var($66binary_subscr.10, apply_reduce.py:470), Var(range_starts, apply_reduce.py:468), Var(range_ends, apply_reduce.py:468), Var(reduce_func_nb, apply_reduce.py:468)])
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $78build_tuple_unpack_with_call.16 = $74build_tuple.14 + args
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $80call_function_ex.17 = call $52load_global.2(*$78build_tuple_unpack_with_call.16, func=$52load_global.2, args=[], kws=[], vararg=$78build_tuple_unpack_with_call.16)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const84.19 = const(NoneType, None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const86.20 = const(NoneType, None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.21 = global(slice: <class 'slice'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $88build_slice.22 = call $88build_slice.21($const84.19, $const86.20, func=$88build_slice.21, args=(Var($const84.19, apply_reduce.py:470), Var($const86.20, apply_reduce.py:470)), kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $92build_tuple.24 = build_tuple(items=[Var($88build_slice.22, apply_reduce.py:470), Var(col, apply_reduce.py:469)])
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: out[$92build_tuple.24] = $80call_function_ex.17
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: jump 48
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 98
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67d4b80>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $100return_value.1 = cast(value=out)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: return $100return_value.1
[2022-10-06 17:25:30] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100return_value.1': [<numba.core.ir.Assign object at 0x7ff7d67cb190>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7ff7d67cbf40>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7ff7d67c32b0>],
             '$20binary_subscr.9': [<numba.core.ir.Assign object at 0x7ff7d67cbe80>],
             '$22build_tuple.10': [<numba.core.ir.Assign object at 0x7ff7d67c3760>],
             '$24load_global.11': [<numba.core.ir.Assign object at 0x7ff7d67c38b0>],
             '$26load_attr.12': [<numba.core.ir.Assign object at 0x7ff7d67c3a30>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7ff7d67818b0>],
             '$34load_global.15': [<numba.core.ir.Assign object at 0x7ff7d67c6070>],
             '$38load_attr.17': [<numba.core.ir.Assign object at 0x7ff7d67c6310>],
             '$42binary_subscr.19': [<numba.core.ir.Assign object at 0x7ff7d67cb250>],
             '$44call_function.20': [<numba.core.ir.Assign object at 0x7ff7d67c67c0>],
             '$46get_iter.21': [<numba.core.ir.Assign object at 0x7ff7d67c6910>],
             '$48for_iter.1': [<numba.core.ir.Assign object at 0x7ff7d67c6b50>],
             '$48for_iter.2': [<numba.core.ir.Assign object at 0x7ff7d67c6c70>],
             '$48for_iter.3': [<numba.core.ir.Assign object at 0x7ff7d67c6d90>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7ff7d6781a30>],
             '$52load_global.2': [<numba.core.ir.Assign object at 0x7ff7d67c81f0>],
             '$60build_slice.6': [<numba.core.ir.Assign object at 0x7ff7d67c87c0>],
             '$60build_slice.7': [<numba.core.ir.Assign object at 0x7ff7d67c88e0>],
             '$64build_tuple.9': [<numba.core.ir.Assign object at 0x7ff7d67c8b80>],
             '$66binary_subscr.10': [<numba.core.ir.Assign object at 0x7ff7d67c8cd0>],
             '$74build_tuple.14': [<numba.core.ir.Assign object at 0x7ff7d67c9220>],
             '$78build_tuple_unpack_with_call.16': [<numba.core.ir.Assign object at 0x7ff7d67c9520>],
             '$80call_function_ex.17': [<numba.core.ir.Assign object at 0x7ff7d67c9610>],
             '$88build_slice.21': [<numba.core.ir.Assign object at 0x7ff7d67c9be0>],
             '$88build_slice.22': [<numba.core.ir.Assign object at 0x7ff7d67c9d00>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7ff7d6781cd0>],
             '$92build_tuple.24': [<numba.core.ir.Assign object at 0x7ff7d67c9fa0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7ff7d6781e50>],
             '$const18.8': [<numba.core.ir.Assign object at 0x7ff7d67c3430>],
             '$const40.18': [<numba.core.ir.Assign object at 0x7ff7d67c6490>],
             '$const56.4': [<numba.core.ir.Assign object at 0x7ff7d67c8490>],
             '$const58.5': [<numba.core.ir.Assign object at 0x7ff7d67c8610>],
             '$const84.19': [<numba.core.ir.Assign object at 0x7ff7d67c98b0>],
             '$const86.20': [<numba.core.ir.Assign object at 0x7ff7d67c9a30>],
             '$phi48.0': [<numba.core.ir.Assign object at 0x7ff7d67c3c10>],
             '$phi50.1': [<numba.core.ir.Assign object at 0x7ff7d67c6a60>],
             'args': [<numba.core.ir.Assign object at 0x7ff7d6781730>],
             'arr': [<numba.core.ir.Assign object at 0x7ff7d67812b0>],
             'col': [<numba.core.ir.Assign object at 0x7ff7d67c8070>],
             'out': [<numba.core.ir.Assign object at 0x7ff7d67c3ee0>],
             'range_ends': [<numba.core.ir.Assign object at 0x7ff7d67814f0>],
             'range_starts': [<numba.core.ir.Assign object at 0x7ff7d67813d0>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7ff7d6781610>]})
[2022-10-06 17:25:30] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-06 17:25:30] [numba.core.byteflow:74 DEBUG] bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	LOAD_GLOBAL(arg=0, lineno=436)
           4	LOAD_ATTR(arg=1, lineno=436)
           6	LOAD_FAST(arg=1, lineno=436)
           8	LOAD_ATTR(arg=2, lineno=436)
          10	LOAD_CONST(arg=1, lineno=436)
          12	BINARY_SUBSCR(arg=None, lineno=436)
          14	LOAD_GLOBAL(arg=0, lineno=436)
          16	LOAD_ATTR(arg=3, lineno=436)
          18	LOAD_CONST(arg=2, lineno=436)
          20	CALL_FUNCTION_KW(arg=2, lineno=436)
          22	STORE_FAST(arg=5, lineno=436)
          24	LOAD_GLOBAL(arg=4, lineno=438)
          26	LOAD_GLOBAL(arg=5, lineno=438)
          28	LOAD_FAST(arg=1, lineno=438)
          30	CALL_FUNCTION(arg=1, lineno=438)
          32	CALL_FUNCTION(arg=1, lineno=438)
          34	GET_ITER(arg=None, lineno=438)
>         36	FOR_ITER(arg=74, lineno=438)
          38	STORE_FAST(arg=6, lineno=438)
          40	LOAD_FAST(arg=1, lineno=439)
          42	LOAD_FAST(arg=6, lineno=439)
          44	BINARY_SUBSCR(arg=None, lineno=439)
          46	STORE_FAST(arg=7, lineno=439)
          48	LOAD_FAST(arg=2, lineno=440)
          50	LOAD_FAST(arg=6, lineno=440)
          52	BINARY_SUBSCR(arg=None, lineno=440)
          54	STORE_FAST(arg=8, lineno=440)
          56	LOAD_FAST(arg=7, lineno=441)
          58	LOAD_CONST(arg=3, lineno=441)
          60	COMPARE_OP(arg=2, lineno=441)
          62	POP_JUMP_IF_TRUE(arg=72, lineno=441)
          64	LOAD_FAST(arg=8, lineno=441)
          66	LOAD_CONST(arg=3, lineno=441)
          68	COMPARE_OP(arg=2, lineno=441)
          70	POP_JUMP_IF_FALSE(arg=84, lineno=441)
>         72	LOAD_GLOBAL(arg=0, lineno=442)
          74	LOAD_ATTR(arg=6, lineno=442)
          76	LOAD_FAST(arg=5, lineno=442)
          78	LOAD_FAST(arg=6, lineno=442)
          80	STORE_SUBSCR(arg=None, lineno=442)
          82	JUMP_ABSOLUTE(arg=36, lineno=442)
>         84	LOAD_FAST(arg=3, lineno=444)
          86	LOAD_FAST(arg=0, lineno=444)
          88	LOAD_FAST(arg=7, lineno=444)
          90	LOAD_FAST(arg=8, lineno=444)
          92	BUILD_SLICE(arg=2, lineno=444)
          94	BINARY_SUBSCR(arg=None, lineno=444)
          96	BUILD_TUPLE(arg=1, lineno=444)
          98	LOAD_FAST(arg=4, lineno=444)
         100	BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
         102	CALL_FUNCTION_EX(arg=0, lineno=444)
         104	LOAD_FAST(arg=5, lineno=444)
         106	LOAD_FAST(arg=6, lineno=444)
         108	STORE_SUBSCR(arg=None, lineno=444)
         110	JUMP_ABSOLUTE(arg=36, lineno=444)
>        112	LOAD_FAST(arg=5, lineno=445)
         114	RETURN_VALUE(arg=None, lineno=445)
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=0 nstack_initial=0)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=0, inst=NOP(arg=None, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$2load_global.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=8, inst=LOAD_ATTR(arg=2, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$range_starts6.2']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$8load_attr.3', '$const10.4']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=14, inst=LOAD_GLOBAL(arg=0, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$14load_global.6']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$4load_attr.1', '$12binary_subscr.5', '$16load_attr.7', '$const18.8']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=22, inst=STORE_FAST(arg=5, lineno=436)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$20call_function_kw.9']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=24, inst=LOAD_GLOBAL(arg=4, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=26, inst=LOAD_GLOBAL(arg=5, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=30, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$26load_global.11', '$range_starts28.12']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$24load_global.10', '$30call_function.13']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=34, inst=GET_ITER(arg=None, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$32call_function.14']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$34get_iter.15',), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: ['$phi36.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=36, inst=FOR_ITER(arg=74, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi36.0']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0), Edge(pc=38, stack=('$phi36.0', '$36for_iter.2'), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=38 nstack_initial=2)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=445)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack []
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=114, inst=RETURN_VALUE(arg=None, lineno=445)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$out112.0']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=38 nstack_initial=2)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: ['$phi38.0', '$phi38.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=38, inst=STORE_FAST(arg=6, lineno=438)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$phi38.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=40, inst=LOAD_FAST(arg=1, lineno=439)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=42, inst=LOAD_FAST(arg=6, lineno=439)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=439)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_starts40.2', '$k42.3']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=46, inst=STORE_FAST(arg=7, lineno=439)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$44binary_subscr.4']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=48, inst=LOAD_FAST(arg=2, lineno=440)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=50, inst=LOAD_FAST(arg=6, lineno=440)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=52, inst=BINARY_SUBSCR(arg=None, lineno=440)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$range_ends48.5', '$k50.6']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=54, inst=STORE_FAST(arg=8, lineno=440)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$52binary_subscr.7']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=56, inst=LOAD_FAST(arg=7, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=58, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=60, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$from_i56.8', '$const58.9']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=62, inst=POP_JUMP_IF_TRUE(arg=72, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi38.0', '$60compare_op.10']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=64, stack=('$phi38.0',), blockstack=(), npush=0), Edge(pc=72, stack=('$phi38.0',), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=72 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: ['$phi64.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=64, inst=LOAD_FAST(arg=8, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=66, inst=LOAD_CONST(arg=3, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=68, inst=COMPARE_OP(arg=2, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$to_i64.1', '$const66.2']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=84, lineno=441)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi64.0', '$68compare_op.3']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=72, stack=('$phi64.0',), blockstack=(), npush=0), Edge(pc=84, stack=('$phi64.0',), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: ['$phi72.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=72, inst=LOAD_GLOBAL(arg=0, lineno=442)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=74, inst=LOAD_ATTR(arg=6, lineno=442)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$72load_global.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=76, inst=LOAD_FAST(arg=5, lineno=442)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=442)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=80, inst=STORE_SUBSCR(arg=None, lineno=442)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0', '$74load_attr.2', '$out76.3', '$k78.4']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=82, inst=JUMP_ABSOLUTE(arg=36, lineno=442)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi72.0']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi72.0',), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=72 nstack_initial=1), State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=84 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:103 DEBUG] stack: ['$phi84.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=84, inst=LOAD_FAST(arg=3, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=88, inst=LOAD_FAST(arg=7, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=90, inst=LOAD_FAST(arg=8, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=92, inst=BUILD_SLICE(arg=2, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$from_i88.3', '$to_i90.4']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=94, inst=BINARY_SUBSCR(arg=None, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$arr86.2', '$92build_slice.6']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=96, inst=BUILD_TUPLE(arg=1, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$94binary_subscr.7']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=100, inst=BUILD_TUPLE_UNPACK_WITH_CALL(arg=2, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$96build_tuple.8', '$args98.9']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=102, inst=CALL_FUNCTION_EX(arg=0, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$reduce_func_nb84.1', '$100build_tuple_unpack_with_call.10']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0', '$102call_function_ex.11', '$out104.12', '$k106.13']
[2022-10-06 17:25:30] [numba.core.byteflow:262 DEBUG] dispatch pc=110, inst=JUMP_ABSOLUTE(arg=36, lineno=444)
[2022-10-06 17:25:30] [numba.core.byteflow:263 DEBUG] stack ['$phi84.0']
[2022-10-06 17:25:30] [numba.core.byteflow:135 DEBUG] end state. edges=[Edge(pc=36, stack=('$phi84.0',), blockstack=(), npush=0)]
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1), State(pc_initial=36 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:100 DEBUG] pending: deque([State(pc_initial=36 nstack_initial=1)])
[2022-10-06 17:25:30] [numba.core.byteflow:163 DEBUG] -------------------------Prune PHIs-------------------------
[2022-10-06 17:25:30] [numba.core.byteflow:232 DEBUG] Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=1): {'$phi36.0'},
             State(pc_initial=38 nstack_initial=2): {'$phi38.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=72 nstack_initial=1): set(),
             State(pc_initial=84 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=0): set()})
[2022-10-06 17:25:30] [numba.core.byteflow:189 DEBUG] defmap: {'$phi36.0': State(pc_initial=0 nstack_initial=0),
 '$phi38.1': State(pc_initial=36 nstack_initial=1)}
[2022-10-06 17:25:30] [numba.core.byteflow:190 DEBUG] phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi72.0', State(pc_initial=72 nstack_initial=1)),
                          ('$phi84.0', State(pc_initial=84 nstack_initial=1))},
             '$phi38.0': {('$phi36.0', State(pc_initial=36 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2))},
             '$phi72.0': {('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi84.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))}})
[2022-10-06 17:25:30] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi38.0', State(pc_initial=38 nstack_initial=2)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-06 17:25:30] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-06 17:25:30] [numba.core.byteflow:211 DEBUG] changing phismap: defaultdict(<class 'set'>,
            {'$phi36.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi38.1': {('$36for_iter.2',
                           State(pc_initial=36 nstack_initial=1))},
             '$phi64.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi72.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi84.0': {('$34get_iter.15',
                           State(pc_initial=0 nstack_initial=0))}})
[2022-10-06 17:25:30] [numba.core.byteflow:220 DEBUG] keep phismap: {'$phi36.0': {('$34get_iter.15', State(pc_initial=0 nstack_initial=0))},
 '$phi38.1': {('$36for_iter.2', State(pc_initial=36 nstack_initial=1))}}
[2022-10-06 17:25:30] [numba.core.byteflow:226 DEBUG] new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi36.0': '$34get_iter.15'},
             State(pc_initial=36 nstack_initial=1): {'$phi38.1': '$36for_iter.2'}})
[2022-10-06 17:25:30] [numba.core.byteflow:236 DEBUG] ----------------------DONE Prune PHIs-----------------------
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$range_starts6.2'}), (8, {'item': '$range_starts6.2', 'res': '$8load_attr.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$8load_attr.3', 'res': '$12binary_subscr.5'}), (14, {'res': '$14load_global.6'}), (16, {'item': '$14load_global.6', 'res': '$16load_attr.7'}), (18, {'res': '$const18.8'}), (20, {'func': '$4load_attr.1', 'args': ['$12binary_subscr.5', '$16load_attr.7'], 'names': '$const18.8', 'res': '$20call_function_kw.9'}), (22, {'value': '$20call_function_kw.9'}), (24, {'res': '$24load_global.10'}), (26, {'res': '$26load_global.11'}), (28, {'res': '$range_starts28.12'}), (30, {'func': '$26load_global.11', 'args': ['$range_starts28.12'], 'res': '$30call_function.13'}), (32, {'func': '$24load_global.10', 'args': ['$30call_function.13'], 'res': '$32call_function.14'}), (34, {'value': '$32call_function.14', 'res': '$34get_iter.15'})), outgoing_phis={'$phi36.0': '$34get_iter.15'}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$34get_iter.15',)})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=36 nstack_initial=1):
AdaptBlockInfo(insts=((36, {'iterator': '$phi36.0', 'pair': '$36for_iter.1', 'indval': '$36for_iter.2', 'pred': '$36for_iter.3'}),), outgoing_phis={'$phi38.1': '$36for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: (), 38: ('$phi36.0', '$36for_iter.2')})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=38 nstack_initial=2):
AdaptBlockInfo(insts=((38, {'value': '$phi38.1'}), (40, {'res': '$range_starts40.2'}), (42, {'res': '$k42.3'}), (44, {'index': '$k42.3', 'target': '$range_starts40.2', 'res': '$44binary_subscr.4'}), (46, {'value': '$44binary_subscr.4'}), (48, {'res': '$range_ends48.5'}), (50, {'res': '$k50.6'}), (52, {'index': '$k50.6', 'target': '$range_ends48.5', 'res': '$52binary_subscr.7'}), (54, {'value': '$52binary_subscr.7'}), (56, {'res': '$from_i56.8'}), (58, {'res': '$const58.9'}), (60, {'lhs': '$from_i56.8', 'rhs': '$const58.9', 'res': '$60compare_op.10'}), (62, {'pred': '$60compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi38.0',), 72: ('$phi38.0',)})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$to_i64.1'}), (66, {'res': '$const66.2'}), (68, {'lhs': '$to_i64.1', 'rhs': '$const66.2', 'res': '$68compare_op.3'}), (70, {'pred': '$68compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: ('$phi64.0',), 84: ('$phi64.0',)})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=72 nstack_initial=1):
AdaptBlockInfo(insts=((72, {'res': '$72load_global.1'}), (74, {'item': '$72load_global.1', 'res': '$74load_attr.2'}), (76, {'res': '$out76.3'}), (78, {'res': '$k78.4'}), (80, {'target': '$out76.3', 'index': '$k78.4', 'value': '$74load_attr.2'}), (82, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi72.0',)})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=84 nstack_initial=1):
AdaptBlockInfo(insts=((84, {'res': '$reduce_func_nb84.1'}), (86, {'res': '$arr86.2'}), (88, {'res': '$from_i88.3'}), (90, {'res': '$to_i90.4'}), (92, {'start': '$from_i88.3', 'stop': '$to_i90.4', 'step': None, 'res': '$92build_slice.6', 'slicevar': '$92build_slice.5'}), (94, {'index': '$92build_slice.6', 'target': '$arr86.2', 'res': '$94binary_subscr.7'}), (96, {'items': ['$94binary_subscr.7'], 'res': '$96build_tuple.8'}), (98, {'res': '$args98.9'}), (100, {'tuples': ['$96build_tuple.8', '$args98.9'], 'temps': ['$100build_tuple_unpack_with_call.10'], 'is_assign': False}), (102, {'func': '$reduce_func_nb84.1', 'vararg': '$100build_tuple_unpack_with_call.10', 'res': '$102call_function_ex.11'}), (104, {'res': '$out104.12'}), (106, {'res': '$k106.13'}), (108, {'target': '$out104.12', 'index': '$k106.13', 'value': '$102call_function_ex.11'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ('$phi84.0',)})
[2022-10-06 17:25:30] [numba.core.byteflow:147 DEBUG] block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$out112.0'}), (114, {'retval': '$out112.0', 'castval': '$114return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
[2022-10-06 17:25:30] [numba.core.interpreter:379 DEBUG] label 0:
    arr = arg(0, name=arr)                   ['arr']
    range_starts = arg(1, name=range_starts) ['range_starts']
    range_ends = arg(2, name=range_ends)     ['range_ends']
    reduce_func_nb = arg(3, name=reduce_func_nb) ['reduce_func_nb']
    args = arg(4, name=args)                 ['args']
    $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    $8load_attr.3 = getattr(value=range_starts, attr=shape) ['$8load_attr.3', 'range_starts']
    $const10.4 = const(int, 0)               ['$const10.4']
    $12binary_subscr.5 = getitem(value=$8load_attr.3, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$8load_attr.3', '$const10.4']
    $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$14load_global.6']
    $16load_attr.7 = getattr(value=$14load_global.6, attr=float_) ['$14load_global.6', '$16load_attr.7']
    out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None) ['$12binary_subscr.5', '$16load_attr.7', '$4load_attr.1', 'out']
    $24load_global.10 = global(range: <class 'range'>) ['$24load_global.10']
    $26load_global.11 = global(len: <built-in function len>) ['$26load_global.11']
    $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None) ['$26load_global.11', '$30call_function.13', 'range_starts']
    $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None) ['$24load_global.10', '$30call_function.13', '$32call_function.14']
    $34get_iter.15 = getiter(value=$32call_function.14) ['$32call_function.14', '$34get_iter.15']
    $phi36.0 = $34get_iter.15                ['$34get_iter.15', '$phi36.0']
    jump 36                                  []
label 36:
    $36for_iter.1 = iternext(value=$phi36.0) ['$36for_iter.1', '$phi36.0']
    $36for_iter.2 = pair_first(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.2']
    $36for_iter.3 = pair_second(value=$36for_iter.1) ['$36for_iter.1', '$36for_iter.3']
    $phi38.1 = $36for_iter.2                 ['$36for_iter.2', '$phi38.1']
    branch $36for_iter.3, 38, 112            ['$36for_iter.3']
label 38:
    k = $phi38.1                             ['$phi38.1', 'k']
    from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>) ['from_i', 'k', 'range_starts']
    to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>) ['k', 'range_ends', 'to_i']
    $const58.9 = const(int, -1)              ['$const58.9']
    $60compare_op.10 = from_i == $const58.9  ['$60compare_op.10', '$const58.9', 'from_i']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None) ['$60compare_op.10', '$62pred', 'bool62']
    branch $62pred, 72, 64                   ['$62pred']
label 64:
    $const66.2 = const(int, -1)              ['$const66.2']
    $68compare_op.3 = to_i == $const66.2     ['$68compare_op.3', '$const66.2', 'to_i']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None) ['$68compare_op.3', '$70pred', 'bool70']
    branch $70pred, 72, 84                   ['$70pred']
label 72:
    $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>) ['$72load_global.1']
    $74load_attr.2 = getattr(value=$72load_global.1, attr=nan) ['$72load_global.1', '$74load_attr.2']
    out[k] = $74load_attr.2                  ['$74load_attr.2', 'k', 'out']
    jump 36                                  []
label 84:
    $92build_slice.5 = global(slice: <class 'slice'>) ['$92build_slice.5']
    $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None) ['$92build_slice.5', '$92build_slice.6', 'from_i', 'to_i']
    $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>) ['$92build_slice.6', '$94binary_subscr.7', 'arr']
    $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)]) ['$94binary_subscr.7', '$96build_tuple.8']
    $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args ['$100build_tuple_unpack_with_call.10', '$96build_tuple.8', 'args']
    $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10) ['$100build_tuple_unpack_with_call.10', '$102call_function_ex.11', 'reduce_func_nb']
    out[k] = $102call_function_ex.11         ['$102call_function_ex.11', 'k', 'out']
    jump 36                                  []
label 112:
    $114return_value.1 = cast(value=out)     ['$114return_value.1', 'out']
    return $114return_value.1                ['$114return_value.1']

[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 0
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: arr = arg(0, name=arr)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: range_starts = arg(1, name=range_starts)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: range_ends = arg(2, name=range_ends)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: reduce_func_nb = arg(3, name=reduce_func_nb)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: args = arg(4, name=args)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $8load_attr.3 = getattr(value=range_starts, attr=shape)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const10.4 = const(int, 0)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $12binary_subscr.5 = static_getitem(value=$8load_attr.3, index=0, index_var=$const10.4, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $14load_global.6 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $16load_attr.7 = getattr(value=$14load_global.6, attr=float_)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: out = call $4load_attr.1($12binary_subscr.5, func=$4load_attr.1, args=[Var($12binary_subscr.5, apply_reduce.py:436)], kws=[('dtype', Var($16load_attr.7, apply_reduce.py:436))], vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $24load_global.10 = global(range: <class 'range'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $26load_global.11 = global(len: <built-in function len>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $30call_function.13 = call $26load_global.11(range_starts, func=$26load_global.11, args=[Var(range_starts, apply_reduce.py:436)], kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $32call_function.14 = call $24load_global.10($30call_function.13, func=$24load_global.10, args=[Var($30call_function.13, apply_reduce.py:438)], kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $34get_iter.15 = getiter(value=$32call_function.14)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $phi36.0 = $34get_iter.15
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 36
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.1 = iternext(value=$phi36.0)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.2 = pair_first(value=$36for_iter.1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $36for_iter.3 = pair_second(value=$36for_iter.1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $phi38.1 = $36for_iter.2
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: branch $36for_iter.3, 38, 112
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 38
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: k = $phi38.1
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: from_i = getitem(value=range_starts, index=k, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: to_i = getitem(value=range_ends, index=k, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const58.9 = const(int, -1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $60compare_op.10 = from_i == $const58.9
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: bool62 = global(bool: <class 'bool'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $62pred = call bool62($60compare_op.10, func=bool62, args=(Var($60compare_op.10, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: branch $62pred, 72, 64
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 64
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $const66.2 = const(int, -1)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $68compare_op.3 = to_i == $const66.2
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: bool70 = global(bool: <class 'bool'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $70pred = call bool70($68compare_op.3, func=bool70, args=(Var($68compare_op.3, apply_reduce.py:441),), kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: branch $70pred, 72, 84
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 72
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $72load_global.1 = global(np: <module 'numpy' from '/home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/numpy/__init__.py'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $74load_attr.2 = getattr(value=$72load_global.1, attr=nan)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $74load_attr.2
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 84
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.5 = global(slice: <class 'slice'>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $92build_slice.6 = call $92build_slice.5(from_i, to_i, func=$92build_slice.5, args=(Var(from_i, apply_reduce.py:439), Var(to_i, apply_reduce.py:440)), kws=(), vararg=None)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $94binary_subscr.7 = getitem(value=arr, index=$92build_slice.6, fn=<built-in function getitem>)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $96build_tuple.8 = build_tuple(items=[Var($94binary_subscr.7, apply_reduce.py:444)])
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $100build_tuple_unpack_with_call.10 = $96build_tuple.8 + args
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $102call_function_ex.11 = call reduce_func_nb(*$100build_tuple_unpack_with_call.10, func=reduce_func_nb, args=[], kws=[], vararg=$100build_tuple_unpack_with_call.10)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: out[k] = $102call_function_ex.11
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: jump 113
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 112
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: $114return_value.1 = cast(value=out)
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: return $114return_value.1
[2022-10-06 17:25:30] [numba.core.ssa:149 DEBUG] ==== SSA block analysis pass on 113
[2022-10-06 17:25:30] [numba.core.ssa:178 DEBUG] Running <numba.core.ssa._GatherDefsHandler object at 0x7ff7d67b7af0>
[2022-10-06 17:25:30] [numba.core.ssa:180 DEBUG] on stmt: jump 36
[2022-10-06 17:25:30] [numba.core.ssa:141 DEBUG] defs defaultdict(<class 'list'>,
            {'$100build_tuple_unpack_with_call.10': [<numba.core.ir.Assign object at 0x7ff7d67ac6a0>],
             '$102call_function_ex.11': [<numba.core.ir.Assign object at 0x7ff7d67ac790>],
             '$114return_value.1': [<numba.core.ir.Assign object at 0x7ff7d67acc10>],
             '$12binary_subscr.5': [<numba.core.ir.Assign object at 0x7ff7d67b5ac0>],
             '$14load_global.6': [<numba.core.ir.Assign object at 0x7ff7d679c670>],
             '$16load_attr.7': [<numba.core.ir.Assign object at 0x7ff7d679c7f0>],
             '$24load_global.10': [<numba.core.ir.Assign object at 0x7ff7d679cdf0>],
             '$26load_global.11': [<numba.core.ir.Assign object at 0x7ff7d679cf70>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7ff7d67f3af0>],
             '$30call_function.13': [<numba.core.ir.Assign object at 0x7ff7d67a6280>],
             '$32call_function.14': [<numba.core.ir.Assign object at 0x7ff7d67a6400>],
             '$34get_iter.15': [<numba.core.ir.Assign object at 0x7ff7d67a6550>],
             '$36for_iter.1': [<numba.core.ir.Assign object at 0x7ff7d67a67f0>],
             '$36for_iter.2': [<numba.core.ir.Assign object at 0x7ff7d67a6910>],
             '$36for_iter.3': [<numba.core.ir.Assign object at 0x7ff7d67a6a30>],
             '$4load_attr.1': [<numba.core.ir.Assign object at 0x7ff7d67f38e0>],
             '$60compare_op.10': [<numba.core.ir.Assign object at 0x7ff7d67a8af0>],
             '$62pred': [<numba.core.ir.Assign object at 0x7ff7d67a8d90>],
             '$68compare_op.3': [<numba.core.ir.Assign object at 0x7ff7d67aa070>],
             '$70pred': [<numba.core.ir.Assign object at 0x7ff7d67aa310>],
             '$72load_global.1': [<numba.core.ir.Assign object at 0x7ff7d67aa550>],
             '$74load_attr.2': [<numba.core.ir.Assign object at 0x7ff7d67aa6d0>],
             '$8load_attr.3': [<numba.core.ir.Assign object at 0x7ff7d675ab80>],
             '$92build_slice.5': [<numba.core.ir.Assign object at 0x7ff7d67aaf40>],
             '$92build_slice.6': [<numba.core.ir.Assign object at 0x7ff7d67ac0a0>],
             '$94binary_subscr.7': [<numba.core.ir.Assign object at 0x7ff7d67ac1f0>],
             '$96build_tuple.8': [<numba.core.ir.Assign object at 0x7ff7d67ac3a0>],
             '$const10.4': [<numba.core.ir.Assign object at 0x7ff7d67d4fa0>],
             '$const58.9': [<numba.core.ir.Assign object at 0x7ff7d67a8970>],
             '$const66.2': [<numba.core.ir.Assign object at 0x7ff7d67a8eb0>],
             '$phi36.0': [<numba.core.ir.Assign object at 0x7ff7d679c9d0>],
             '$phi38.1': [<numba.core.ir.Assign object at 0x7ff7d67a6700>],
             'args': [<numba.core.ir.Assign object at 0x7ff7d679c3d0>],
             'arr': [<numba.core.ir.Assign object at 0x7ff7d6792f10>],
             'bool62': [<numba.core.ir.Assign object at 0x7ff7d67a8c70>],
             'bool70': [<numba.core.ir.Assign object at 0x7ff7d67aa1f0>],
             'from_i': [<numba.core.ir.Assign object at 0x7ff7d67a80d0>],
             'k': [<numba.core.ir.Assign object at 0x7ff7d67a6cd0>],
             'out': [<numba.core.ir.Assign object at 0x7ff7d679cca0>],
             'range_ends': [<numba.core.ir.Assign object at 0x7ff7d679c190>],
             'range_starts': [<numba.core.ir.Assign object at 0x7ff7d679c070>],
             'reduce_func_nb': [<numba.core.ir.Assign object at 0x7ff7d679c2b0>],
             'to_i': [<numba.core.ir.Assign object at 0x7ff7d67a85b0>]})
[2022-10-06 17:25:30] [numba.core.ssa:143 DEBUG] SSA violators set()
[2022-10-06 17:25:30] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-06T17:25:29.950562"}, "timestamp": "2022-10-06T21:25:29.950600+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "Import", "messageId": "2e820bb7-135a-412c-ad5e-c34ca774854b"}], "sentAt": "2022-10-06T21:25:30.265326+00:00"}
[2022-10-06 17:25:30] [segment:274 DEBUG] queueing: {'integrations': {}, 'anonymousId': None, 'properties': {'time': datetime.datetime(2022, 10, 6, 17, 25, 30, 355662)}, 'timestamp': '2022-10-06T21:25:30.355680+00:00', 'context': {'library': {'name': 'analytics-python', 'version': '1.4.0'}}, 'userId': '24:4b:fe:98:1a:36', 'type': 'track', 'event': 'get_dollar_bars', 'messageId': 'fd51e6b3-4fcc-4b11-91e9-cb4fc7e39b8d'}
[2022-10-06 17:25:30] [segment:289 DEBUG] enqueued track.
[2022-10-06 17:25:30] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 17:25:31] [segment:24 DEBUG] making request: {"batch": [{"integrations": {}, "anonymousId": null, "properties": {"time": "2022-10-06T17:25:30.355662"}, "timestamp": "2022-10-06T21:25:30.355680+00:00", "context": {"library": {"name": "analytics-python", "version": "1.4.0"}}, "userId": "24:4b:fe:98:1a:36", "type": "track", "event": "get_dollar_bars", "messageId": "fd51e6b3-4fcc-4b11-91e9-cb4fc7e39b8d"}], "sentAt": "2022-10-06T21:25:31.462767+00:00"}
[2022-10-06 17:25:31] [segment:52 DEBUG] data uploaded successfully
[2022-10-06 20:27:29] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:27:29] [parso.python.diff:293 DEBUG] line_lengths old: 2; new: 1
[2022-10-06 20:27:29] [parso.python.diff:296 DEBUG] -> code[replace] old[1:2] new[1:1]
[2022-10-06 20:27:29] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:27:29] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:27:29] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
[2022-10-06 20:27:32] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:27:32] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:27:32] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:27:32] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:27:32] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/frame.py
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/__init__.py
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/__init__.py
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/generic.py
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/base.py
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/accessor.py
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/indexing.py
[2022-10-06 20:27:32] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/pandas/core/arraylike.py
[2022-10-06 20:27:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:27:53] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:27:53] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:27:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:27:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:27:53] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:27:53] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:27:53] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:27:53] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:27:53] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:28:41] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:28:41] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:28:41] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:28:41] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:28:41] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:28:56] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:28:56] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:28:56] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:28:56] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:28:56] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:29:36] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:29:36] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:29:36] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:29:36] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:29:36] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:29:37] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:29:37] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:29:37] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:29:37] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:29:37] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:29:40] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:29:40] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:29:40] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:29:40] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:29:40] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:30:01] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:30:01] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:30:01] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:30:01] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:30:01] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 20:30:06] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 20:30:06] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 20:30:06] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 20:30:06] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 20:30:06] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 23:14:02] [parso.python.diff:282 DEBUG] diff parser start
[2022-10-06 23:14:02] [parso.python.diff:293 DEBUG] line_lengths old: 1; new: 1
[2022-10-06 23:14:02] [parso.python.diff:296 DEBUG] -> code[replace] old[1:1] new[1:1]
[2022-10-06 23:14:02] [parso.python.diff:421 DEBUG] parse_part from 1 to 1 (to 0 in part parser)
[2022-10-06 23:14:02] [parso.python.diff:339 DEBUG] diff parser end
[2022-10-06 23:14:02] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/h2o/__init__.py
[2022-10-06 23:14:02] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/site-packages/h2o/h2o.py
[2022-10-06 23:14:02] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/Programs/anaconda3/envs/mini_Genie_ML/lib/python3.8/typing.py
[2022-10-06 23:14:02] [parso.cache:152 DEBUG] pickle loaded: /home/ruben/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
[2022-10-06 23:22:10] [segment:54 DEBUG] consumer exited.
